<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2023-04-11T22:51:44+00:00</updated><id>/feed.xml</id><title type="html">Spark NLP</title><subtitle>High Performance NLP with Apache Spark
</subtitle><author><name>{&quot;type&quot;=&gt;nil, &quot;name&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;avatar&quot;=&gt;nil, &quot;bio&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;facebook&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil, &quot;weibo&quot;=&gt;nil, &quot;googleplus&quot;=&gt;nil, &quot;telegram&quot;=&gt;nil, &quot;medium&quot;=&gt;nil, &quot;zhihu&quot;=&gt;nil, &quot;douban&quot;=&gt;nil, &quot;linkedin&quot;=&gt;nil, &quot;github&quot;=&gt;nil, &quot;npm&quot;=&gt;nil}</name></author><entry><title type="html">SDOH Housing Insecurity For Classification</title><link href="/2023/04/10/genericclassifier_sdoh_housing_insecurity_sbiobert_cased_mli_en.html" rel="alternate" type="text/html" title="SDOH Housing Insecurity For Classification" /><published>2023-04-10T00:00:00+00:00</published><updated>2023-04-10T00:00:00+00:00</updated><id>/2023/04/10/genericclassifier_sdoh_housing_insecurity_sbiobert_cased_mli_en</id><content type="html" xml:base="/2023/04/10/genericclassifier_sdoh_housing_insecurity_sbiobert_cased_mli_en.html">## Description

This Generic Classifier model is intended for detecting whether the patient has housing insecurity. If the clinical note includes patient housing problems, the model identifies it. If there is no housing issue or it is not mentioned in the text, it is regarded as &quot;no housing insecurity&quot;. The model is trained by using GenericClassifierApproach annotator.

`Housing_Insecurity`: The patient has housing problems.

`No_Housing_Insecurity`: The patient has no housing problems or it is not mentioned in the clinical notes.

## Predicted Entities

`Housing_Insecurity`, `No_Housing_Insecurity`

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/genericclassifier_sdoh_housing_insecurity_sbiobert_cased_mli_en_4.3.2_3.2_1681116895742.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/genericclassifier_sdoh_housing_insecurity_sbiobert_cased_mli_en_4.3.2_3.2_1681116895742.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}

```python
document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)
        
sentence_embeddings = BertSentenceEmbeddings.pretrained(&quot;sbiobert_base_cased_mli&quot;, 'en','clinical/models')\
    .setInputCols([&quot;document&quot;])\
    .setOutputCol(&quot;sentence_embeddings&quot;)

features_asm = FeaturesAssembler()\
    .setInputCols([&quot;sentence_embeddings&quot;])\
    .setOutputCol(&quot;features&quot;)

generic_classifier = GenericClassifierModel.pretrained(&quot;genericclassifier_sdoh_housing_insecurity_sbiobert_cased_mli&quot;, 'en', 'clinical/models')\
    .setInputCols([&quot;features&quot;])\
    .setOutputCol(&quot;class&quot;)

pipeline = Pipeline(stages=[
    document_assembler,
    sentence_embeddings,
    features_asm,
    generic_classifier    
])

text_list = [&quot;&quot;&quot;Patient: Mary H.

Background: Mary is a 40-year-old woman who has been diagnosed with asthma and allergies. She has been managing her conditions with medication and regular follow-up appointments with her healthcare provider. She lives in a rented apartment with her husband and two children and has been stably housed for the past five years.

Presenting problem: Mary presents to the clinic for a routine check-up and reports no significant changes in her health status or symptoms related to her asthma or allergies. However, she expresses concerns about the quality of the air in her apartment and potential environmental triggers that could impact her health.

Medical history: Mary has a medical history of asthma and allergies. She takes an inhaler and antihistamines to manage her conditions.

Social history: Mary is married with two children and lives in a rented apartment. She and her husband both work full-time jobs and have health insurance. They have savings and are able to cover basic expenses.

Assessment: The clinician assesses Mary's medical conditions and determines that her asthma and allergies are stable and well-controlled. The clinician also assesses Mary's housing situation and determines that her apartment building is in good condition and does not present any immediate environmental hazards.

Plan: The clinician advises Mary to continue to monitor her health conditions and to report any changes or concerns to her healthcare team. The clinician also prescribes a referral to an allergist who can provide additional evaluation and treatment for her allergies. The clinician recommends that Mary and her family take steps to minimize potential environmental triggers in their apartment, such as avoiding smoking and using air purifiers. The clinician advises Mary to continue to maintain her stable housing situation and to seek assistance if any financial or housing issues arise.
&quot;&quot;&quot;,

&quot;&quot;&quot;Patient: Sarah L.

Background: Sarah is a 35-year-old woman who has been experiencing housing insecurity for the past year. She was evicted from her apartment due to an increase in rent, which she could not afford, and has been staying with friends and family members ever since. She works as a part-time sales associate at a retail store and has no medical conditions.

Presenting problem: Sarah presents to the clinic with complaints of increased stress and anxiety related to her housing insecurity. She reports feeling constantly on edge and worried about where she will sleep each night. She is also having difficulty concentrating at work and has been missing shifts due to her anxiety.

Medical history: Sarah has no significant medical history and takes no medications.

Social history: Sarah is currently single and has no children. She has a high school diploma but has not attended college. She has been working at her current job for three years and earns minimum wage. She has no savings and relies on her income to cover basic expenses.

Assessment: The clinician assesses Sarah's mental health and determines that she is experiencing symptoms of anxiety and depression related to her housing insecurity. The clinician also assesses Sarah's housing situation and determines that she is at risk for homelessness if she is unable to secure stable housing soon.

Plan: The clinician refers Sarah to a social worker who can help her connect with local housing resources, including subsidized housing programs and emergency shelters. The clinician also prescribes an antidepressant medication to help manage her symptoms of anxiety and depression. The clinician advises Sarah to continue to seek employment opportunities that may offer higher pay and stability.&quot;&quot;&quot;]

df = spark.createDataFrame(text_list, StringType()).toDF(&quot;text&quot;)

result = pipeline.fit(df).transform(df)

result.select(&quot;text&quot;, &quot;class.result&quot;).show(truncate=100)
```
```scala
val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)
        
val sentence_embeddings = BertSentenceEmbeddings.pretrained(&quot;sbiobert_base_cased_mli&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(&quot;document&quot;)
    .setOutputCol(&quot;sentence_embeddings&quot;)

val features_asm = new FeaturesAssembler()
    .setInputCols(&quot;sentence_embeddings&quot;)
    .setOutputCol(&quot;features&quot;)

val generic_classifier = GenericClassifierModel.pretrained(&quot;genericclassifier_sdoh_housing_insecurity_sbiobert_cased_mli&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(&quot;features&quot;)
    .setOutputCol(&quot;class&quot;)

val pipeline = new PipelineModel().setStages(Array(
    document_assembler,
    sentence_embeddings,
    features_asm,
    generic_classifier))

val data = Seq(Array(&quot;&quot;&quot;Patient: Mary H.

Background: Mary is a 40-year-old woman who has been diagnosed with asthma and allergies. She has been managing her conditions with medication and regular follow-up appointments with her healthcare provider. She lives in a rented apartment with her husband and two children and has been stably housed for the past five years.

Presenting problem: Mary presents to the clinic for a routine check-up and reports no significant changes in her health status or symptoms related to her asthma or allergies. However, she expresses concerns about the quality of the air in her apartment and potential environmental triggers that could impact her health.

Medical history: Mary has a medical history of asthma and allergies. She takes an inhaler and antihistamines to manage her conditions.

Social history: Mary is married with two children and lives in a rented apartment. She and her husband both work full-time jobs and have health insurance. They have savings and are able to cover basic expenses.

Assessment: The clinician assesses Mary's medical conditions and determines that her asthma and allergies are stable and well-controlled. The clinician also assesses Mary's housing situation and determines that her apartment building is in good condition and does not present any immediate environmental hazards.

Plan: The clinician advises Mary to continue to monitor her health conditions and to report any changes or concerns to her healthcare team. The clinician also prescribes a referral to an allergist who can provide additional evaluation and treatment for her allergies. The clinician recommends that Mary and her family take steps to minimize potential environmental triggers in their apartment, such as avoiding smoking and using air purifiers. The clinician advises Mary to continue to maintain her stable housing situation and to seek assistance if any financial or housing issues arise.
&quot;&quot;&quot;,

&quot;&quot;&quot;Patient: Sarah L.

Background: Sarah is a 35-year-old woman who has been experiencing housing insecurity for the past year. She was evicted from her apartment due to an increase in rent, which she could not afford, and has been staying with friends and family members ever since. She works as a part-time sales associate at a retail store and has no medical conditions.

Presenting problem: Sarah presents to the clinic with complaints of increased stress and anxiety related to her housing insecurity. She reports feeling constantly on edge and worried about where she will sleep each night. She is also having difficulty concentrating at work and has been missing shifts due to her anxiety.

Medical history: Sarah has no significant medical history and takes no medications.

Social history: Sarah is currently single and has no children. She has a high school diploma but has not attended college. She has been working at her current job for three years and earns minimum wage. She has no savings and relies on her income to cover basic expenses.

Assessment: The clinician assesses Sarah's mental health and determines that she is experiencing symptoms of anxiety and depression related to her housing insecurity. The clinician also assesses Sarah's housing situation and determines that she is at risk for homelessness if she is unable to secure stable housing soon.

Plan: The clinician refers Sarah to a social worker who can help her connect with local housing resources, including subsidized housing programs and emergency shelters. The clinician also prescribes an antidepressant medication to help manage her symptoms of anxiety and depression. The clinician advises Sarah to continue to seek employment opportunities that may offer higher pay and stability.&quot;&quot;&quot;)).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
+----------------------------------------------------------------------------------------------------+-----------------------+
|                                                                                                text|                 result|
+----------------------------------------------------------------------------------------------------+-----------------------+
|Patient: Mary H.\n\nBackground: Mary is a 40-year-old woman who has been diagnosed with asthma an...|[No_Housing_Insecurity]|
|Patient: Sarah L.\n\nBackground: Sarah is a 35-year-old woman who has been experiencing housing i...|   [Housing_Insecurity]|
+----------------------------------------------------------------------------------------------------+-----------------------+

```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|genericclassifier_sdoh_housing_insecurity_sbiobert_cased_mli|
|Compatibility:|Healthcare NLP 4.3.2+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[features]|
|Output Labels:|[prediction]|
|Language:|en|
|Size:|3.4 MB|
|Dependencies:|sbiobert_base_cased_mli|

## References

Internal SDOH Project

## Benchmarking

```bash
                label  precision    recall  f1-score   support
   Housing_Insecurity       0.83      0.81      0.82        64
No_Housing_Insecurity       0.86      0.87      0.86        83
             accuracy         -         -       0.84       147
            macro-avg       0.84      0.84      0.84       147
         weighted-avg       0.84      0.84      0.84       147
```</content><author><name>John Snow Labs</name></author><category term="en" /><category term="licenced" /><category term="clinical" /><category term="sdoh" /><category term="housing" /><category term="biobert" /><category term="generic_classifier" /><category term="licensed" /><summary type="html">Description This Generic Classifier model is intended for detecting whether the patient has housing insecurity. If the clinical note includes patient housing problems, the model identifies it. If there is no housing issue or it is not mentioned in the text, it is regarded as “no housing insecurity”. The model is trained by using GenericClassifierApproach annotator. Housing_Insecurity: The patient has housing problems. No_Housing_Insecurity: The patient has no housing problems or it is not mentioned in the clinical notes. Predicted Entities Housing_Insecurity, No_Housing_Insecurity Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) sentence_embeddings = BertSentenceEmbeddings.pretrained(&quot;sbiobert_base_cased_mli&quot;, 'en','clinical/models')\ .setInputCols([&quot;document&quot;])\ .setOutputCol(&quot;sentence_embeddings&quot;) features_asm = FeaturesAssembler()\ .setInputCols([&quot;sentence_embeddings&quot;])\ .setOutputCol(&quot;features&quot;) generic_classifier = GenericClassifierModel.pretrained(&quot;genericclassifier_sdoh_housing_insecurity_sbiobert_cased_mli&quot;, 'en', 'clinical/models')\ .setInputCols([&quot;features&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline(stages=[ document_assembler, sentence_embeddings, features_asm, generic_classifier ]) text_list = [&quot;&quot;&quot;Patient: Mary H. Background: Mary is a 40-year-old woman who has been diagnosed with asthma and allergies. She has been managing her conditions with medication and regular follow-up appointments with her healthcare provider. She lives in a rented apartment with her husband and two children and has been stably housed for the past five years. Presenting problem: Mary presents to the clinic for a routine check-up and reports no significant changes in her health status or symptoms related to her asthma or allergies. However, she expresses concerns about the quality of the air in her apartment and potential environmental triggers that could impact her health. Medical history: Mary has a medical history of asthma and allergies. She takes an inhaler and antihistamines to manage her conditions. Social history: Mary is married with two children and lives in a rented apartment. She and her husband both work full-time jobs and have health insurance. They have savings and are able to cover basic expenses. Assessment: The clinician assesses Mary's medical conditions and determines that her asthma and allergies are stable and well-controlled. The clinician also assesses Mary's housing situation and determines that her apartment building is in good condition and does not present any immediate environmental hazards. Plan: The clinician advises Mary to continue to monitor her health conditions and to report any changes or concerns to her healthcare team. The clinician also prescribes a referral to an allergist who can provide additional evaluation and treatment for her allergies. The clinician recommends that Mary and her family take steps to minimize potential environmental triggers in their apartment, such as avoiding smoking and using air purifiers. The clinician advises Mary to continue to maintain her stable housing situation and to seek assistance if any financial or housing issues arise. &quot;&quot;&quot;, &quot;&quot;&quot;Patient: Sarah L. Background: Sarah is a 35-year-old woman who has been experiencing housing insecurity for the past year. She was evicted from her apartment due to an increase in rent, which she could not afford, and has been staying with friends and family members ever since. She works as a part-time sales associate at a retail store and has no medical conditions. Presenting problem: Sarah presents to the clinic with complaints of increased stress and anxiety related to her housing insecurity. She reports feeling constantly on edge and worried about where she will sleep each night. She is also having difficulty concentrating at work and has been missing shifts due to her anxiety. Medical history: Sarah has no significant medical history and takes no medications. Social history: Sarah is currently single and has no children. She has a high school diploma but has not attended college. She has been working at her current job for three years and earns minimum wage. She has no savings and relies on her income to cover basic expenses. Assessment: The clinician assesses Sarah's mental health and determines that she is experiencing symptoms of anxiety and depression related to her housing insecurity. The clinician also assesses Sarah's housing situation and determines that she is at risk for homelessness if she is unable to secure stable housing soon. Plan: The clinician refers Sarah to a social worker who can help her connect with local housing resources, including subsidized housing programs and emergency shelters. The clinician also prescribes an antidepressant medication to help manage her symptoms of anxiety and depression. The clinician advises Sarah to continue to seek employment opportunities that may offer higher pay and stability.&quot;&quot;&quot;] df = spark.createDataFrame(text_list, StringType()).toDF(&quot;text&quot;) result = pipeline.fit(df).transform(df) result.select(&quot;text&quot;, &quot;class.result&quot;).show(truncate=100) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val sentence_embeddings = BertSentenceEmbeddings.pretrained(&quot;sbiobert_base_cased_mli&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(&quot;document&quot;) .setOutputCol(&quot;sentence_embeddings&quot;) val features_asm = new FeaturesAssembler() .setInputCols(&quot;sentence_embeddings&quot;) .setOutputCol(&quot;features&quot;) val generic_classifier = GenericClassifierModel.pretrained(&quot;genericclassifier_sdoh_housing_insecurity_sbiobert_cased_mli&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(&quot;features&quot;) .setOutputCol(&quot;class&quot;) val pipeline = new PipelineModel().setStages(Array( document_assembler, sentence_embeddings, features_asm, generic_classifier)) val data = Seq(Array(&quot;&quot;&quot;Patient: Mary H. Background: Mary is a 40-year-old woman who has been diagnosed with asthma and allergies. She has been managing her conditions with medication and regular follow-up appointments with her healthcare provider. She lives in a rented apartment with her husband and two children and has been stably housed for the past five years. Presenting problem: Mary presents to the clinic for a routine check-up and reports no significant changes in her health status or symptoms related to her asthma or allergies. However, she expresses concerns about the quality of the air in her apartment and potential environmental triggers that could impact her health. Medical history: Mary has a medical history of asthma and allergies. She takes an inhaler and antihistamines to manage her conditions. Social history: Mary is married with two children and lives in a rented apartment. She and her husband both work full-time jobs and have health insurance. They have savings and are able to cover basic expenses. Assessment: The clinician assesses Mary's medical conditions and determines that her asthma and allergies are stable and well-controlled. The clinician also assesses Mary's housing situation and determines that her apartment building is in good condition and does not present any immediate environmental hazards. Plan: The clinician advises Mary to continue to monitor her health conditions and to report any changes or concerns to her healthcare team. The clinician also prescribes a referral to an allergist who can provide additional evaluation and treatment for her allergies. The clinician recommends that Mary and her family take steps to minimize potential environmental triggers in their apartment, such as avoiding smoking and using air purifiers. The clinician advises Mary to continue to maintain her stable housing situation and to seek assistance if any financial or housing issues arise. &quot;&quot;&quot;, &quot;&quot;&quot;Patient: Sarah L. Background: Sarah is a 35-year-old woman who has been experiencing housing insecurity for the past year. She was evicted from her apartment due to an increase in rent, which she could not afford, and has been staying with friends and family members ever since. She works as a part-time sales associate at a retail store and has no medical conditions. Presenting problem: Sarah presents to the clinic with complaints of increased stress and anxiety related to her housing insecurity. She reports feeling constantly on edge and worried about where she will sleep each night. She is also having difficulty concentrating at work and has been missing shifts due to her anxiety. Medical history: Sarah has no significant medical history and takes no medications. Social history: Sarah is currently single and has no children. She has a high school diploma but has not attended college. She has been working at her current job for three years and earns minimum wage. She has no savings and relies on her income to cover basic expenses. Assessment: The clinician assesses Sarah's mental health and determines that she is experiencing symptoms of anxiety and depression related to her housing insecurity. The clinician also assesses Sarah's housing situation and determines that she is at risk for homelessness if she is unable to secure stable housing soon. Plan: The clinician refers Sarah to a social worker who can help her connect with local housing resources, including subsidized housing programs and emergency shelters. The clinician also prescribes an antidepressant medication to help manage her symptoms of anxiety and depression. The clinician advises Sarah to continue to seek employment opportunities that may offer higher pay and stability.&quot;&quot;&quot;)).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Results +----------------------------------------------------------------------------------------------------+-----------------------+ | text| result| +----------------------------------------------------------------------------------------------------+-----------------------+ |Patient: Mary H.\n\nBackground: Mary is a 40-year-old woman who has been diagnosed with asthma an...|[No_Housing_Insecurity]| |Patient: Sarah L.\n\nBackground: Sarah is a 35-year-old woman who has been experiencing housing i...| [Housing_Insecurity]| +----------------------------------------------------------------------------------------------------+-----------------------+ Model Information Model Name: genericclassifier_sdoh_housing_insecurity_sbiobert_cased_mli Compatibility: Healthcare NLP 4.3.2+ License: Licensed Edition: Official Input Labels: [features] Output Labels: [prediction] Language: en Size: 3.4 MB Dependencies: sbiobert_base_cased_mli References Internal SDOH Project Benchmarking label precision recall f1-score support Housing_Insecurity 0.83 0.81 0.82 64 No_Housing_Insecurity 0.86 0.87 0.86 83 accuracy - - 0.84 147 macro-avg 0.84 0.84 0.84 147 weighted-avg 0.84 0.84 0.84 147</summary></entry><entry><title type="html">SDOH Mental Health For Classification</title><link href="/2023/04/10/genericclassifier_sdoh_mental_health_clinical_en.html" rel="alternate" type="text/html" title="SDOH Mental Health For Classification" /><published>2023-04-10T00:00:00+00:00</published><updated>2023-04-10T00:00:00+00:00</updated><id>/2023/04/10/genericclassifier_sdoh_mental_health_clinical_en</id><content type="html" xml:base="/2023/04/10/genericclassifier_sdoh_mental_health_clinical_en.html">## Description

This Generic Classifier model is intended for detecting if the patient has mental health problems in clinical notes. This model is trained by using GenericClassifierApproach annotator.

`Mental_Disorder`: The patient has mental health problems. 

`No_Or_Not_Mentioned`: The patient doesn't have mental health problems or it is not mentioned in the clinical notes.

## Predicted Entities

`Mental_Disorder`, `No_Or_Not_Mentioned`

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/genericclassifier_sdoh_mental_health_clinical_en_4.3.2_3.2_1681132553520.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/genericclassifier_sdoh_mental_health_clinical_en_4.3.2_3.2_1681132553520.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}

```python
document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)
        
tokenizer = Tokenizer() \
            .setInputCols([&quot;document&quot;]) \
            .setOutputCol(&quot;token&quot;)
        
word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\
        .setInputCols([&quot;document&quot;,&quot;token&quot;])\
        .setOutputCol(&quot;word_embeddings&quot;)

sentence_embeddings = SentenceEmbeddings() \
        .setInputCols([&quot;document&quot;, &quot;word_embeddings&quot;]) \
        .setOutputCol(&quot;sentence_embeddings&quot;) \
        .setPoolingStrategy(&quot;AVERAGE&quot;)

features_asm = FeaturesAssembler()\
    .setInputCols([&quot;sentence_embeddings&quot;])\
    .setOutputCol(&quot;features&quot;)

generic_classifier = GenericClassifierModel.pretrained(&quot;genericclassifier_sdoh_mental_health_clinical&quot;, 'en', 'clinical/models')\
    .setInputCols([&quot;features&quot;])\
    .setOutputCol(&quot;class&quot;)

pipeline = Pipeline(stages=[
    document_assembler,
    tokenizer,
    word_embeddings,
    sentence_embeddings,
    features_asm,
    generic_classifier    
])

sample_texts = [&quot;&quot;&quot;James is a 28-year-old man who has been struggling with schizophrenia for the past five years. He was diagnosed with the condition after experiencing a psychotic episode in his early 20s. The following is a case study that explores James' background, symptoms, diagnosis, treatment, and outcomes.

Background:

James grew up in a middle-class family with his parents and two younger siblings. He had a relatively normal childhood and was an above-average student in school. However, in his late teens, James started experiencing paranoid delusions and hallucinations. He became increasingly isolated and withdrawn, and his grades started to suffer. James was eventually hospitalized after experiencing a psychotic episode in college.

Symptoms:

James' symptoms of schizophrenia include delusions, hallucinations, disorganized speech and behavior, and negative symptoms. He experiences paranoid delusions, believing that people are out to get him or that he is being followed. James also experiences auditory hallucinations, hearing voices that are critical or commanding. He has difficulty organizing his thoughts and expressing himself coherently. James also experiences negative symptoms, such as reduced motivation, social withdrawal, and flattened affect.

Diagnosis:

James' diagnosis of schizophrenia was based on his symptoms, history, and a comprehensive evaluation by a mental health professional. He was diagnosed with paranoid schizophrenia, which is characterized by delusions and hallucinations.

Treatment:

James' treatment for schizophrenia consisted of medication and therapy. He was prescribed antipsychotic medication to help manage his symptoms. He also participated in cognitive-behavioral therapy (CBT), which focused on helping him identify and challenge his delusions and improve his communication skills. James also attended support groups for individuals with schizophrenia.

Outcomes:

With ongoing treatment, James' symptoms have become more manageable. He still experiences occasional psychotic episodes, but they are less frequent and less severe. James has also developed better coping skills and has learned to recognize the warning signs of an impending episode. He is able to maintain employment and has a stable home life. James' family has also been involved in his treatment, which has helped to improve his support system and overall quality of life.
&quot;&quot;&quot;,
 &quot;&quot;&quot;Patient John is a 60-year-old man who presents to a primary care clinic for a routine check-up. He reports feeling generally healthy, with no significant medical concerns. However, he reveals that he is a smoker and drinks alcohol on a regular basis. The patient also mentions that he has a history of working long hours and has limited time for physical activity and social interactions.

Based on this information, it appears that Patient John's overall health may be affected by several social determinants of health, including tobacco and alcohol use, lack of physical activity, and social isolation. To address these issues, the healthcare provider may recommend a comprehensive physical exam and develop a treatment plan that includes lifestyle modifications, such as smoking cessation and reduction of alcohol intake. Additionally, the patient may benefit from referrals to local organizations that provide resources for physical activity and social engagement. The healthcare provider may also recommend strategies to reduce work-related stress and promote work-life balance. By addressing these social determinants of health, healthcare providers can help promote Patient John's overall health and prevent future health problems.&quot;&quot;&quot;]

df = spark.createDataFrame(text_list, StringType()).toDF(&quot;text&quot;)

result = pipeline.fit(df).transform(df)

result.select(&quot;text&quot;, &quot;class.result&quot;).show(truncate=100)
```
```scala
val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)
  
val tokenizer = Tokenizer()
            .setInputCols([&quot;document&quot;])
            .setOutputCol(&quot;token&quot;)
        
val word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
        .setInputCols([&quot;document&quot;,&quot;token&quot;])
        .setOutputCol(&quot;word_embeddings&quot;)

val sentence_embeddings = SentenceEmbeddings()
        .setInputCols([&quot;document&quot;, &quot;word_embeddings&quot;])
        .setOutputCol(&quot;sentence_embeddings&quot;)
        .setPoolingStrategy(&quot;AVERAGE&quot;)

val features_asm = new FeaturesAssembler()
    .setInputCols(&quot;sentence_embeddings&quot;)
    .setOutputCol(&quot;features&quot;)

val generic_classifier = GenericClassifierModel.pretrained(&quot;genericclassifier_sdoh_mental_health_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(&quot;features&quot;)
    .setOutputCol(&quot;class&quot;)

val pipeline = new PipelineModel().setStages(Array(
    document_assembler,
    tokenizer,
    word_embeddings,
    sentence_embeddings,
    features_asm,
    generic_classifier))

val data = Seq(Array(&quot;&quot;&quot;James is a 28-year-old man who has been struggling with schizophrenia for the past five years. He was diagnosed with the condition after experiencing a psychotic episode in his early 20s. The following is a case study that explores James' background, symptoms, diagnosis, treatment, and outcomes.

Background:

James grew up in a middle-class family with his parents and two younger siblings. He had a relatively normal childhood and was an above-average student in school. However, in his late teens, James started experiencing paranoid delusions and hallucinations. He became increasingly isolated and withdrawn, and his grades started to suffer. James was eventually hospitalized after experiencing a psychotic episode in college.

Symptoms:

James' symptoms of schizophrenia include delusions, hallucinations, disorganized speech and behavior, and negative symptoms. He experiences paranoid delusions, believing that people are out to get him or that he is being followed. James also experiences auditory hallucinations, hearing voices that are critical or commanding. He has difficulty organizing his thoughts and expressing himself coherently. James also experiences negative symptoms, such as reduced motivation, social withdrawal, and flattened affect.

Diagnosis:

James' diagnosis of schizophrenia was based on his symptoms, history, and a comprehensive evaluation by a mental health professional. He was diagnosed with paranoid schizophrenia, which is characterized by delusions and hallucinations.

Treatment:

James' treatment for schizophrenia consisted of medication and therapy. He was prescribed antipsychotic medication to help manage his symptoms. He also participated in cognitive-behavioral therapy (CBT), which focused on helping him identify and challenge his delusions and improve his communication skills. James also attended support groups for individuals with schizophrenia.

Outcomes:

With ongoing treatment, James' symptoms have become more manageable. He still experiences occasional psychotic episodes, but they are less frequent and less severe. James has also developed better coping skills and has learned to recognize the warning signs of an impending episode. He is able to maintain employment and has a stable home life. James' family has also been involved in his treatment, which has helped to improve his support system and overall quality of life.
&quot;&quot;&quot;,
 &quot;&quot;&quot;Patient John is a 60-year-old man who presents to a primary care clinic for a routine check-up. He reports feeling generally healthy, with no significant medical concerns. However, he reveals that he is a smoker and drinks alcohol on a regular basis. The patient also mentions that he has a history of working long hours and has limited time for physical activity and social interactions.

Based on this information, it appears that Patient John's overall health may be affected by several social determinants of health, including tobacco and alcohol use, lack of physical activity, and social isolation. To address these issues, the healthcare provider may recommend a comprehensive physical exam and develop a treatment plan that includes lifestyle modifications, such as smoking cessation and reduction of alcohol intake. Additionally, the patient may benefit from referrals to local organizations that provide resources for physical activity and social engagement. The healthcare provider may also recommend strategies to reduce work-related stress and promote work-life balance. By addressing these social determinants of health, healthcare providers can help promote Patient John's overall health and prevent future health problems.&quot;&quot;&quot;)).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
+----------------------------------------------------------------------------------------------------+---------------------+
|                                                                                                text|               result|
+----------------------------------------------------------------------------------------------------+---------------------+
|James is a 28-year-old man who has been struggling with schizophrenia for the past five years. He...|    [Mental_Disorder]|
|Patient John is a 60-year-old man who presents to a primary care clinic for a routine check-up. H...|[No_Or_Not_Mentioned]|
+----------------------------------------------------------------------------------------------------+---------------------+

```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|genericclassifier_sdoh_mental_health_clinical|
|Compatibility:|Healthcare NLP 4.3.2+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[features]|
|Output Labels:|[prediction]|
|Language:|en|
|Size:|1.5 MB|
|Dependencies:|embeddings_clinical|

## References

Internal SDOH Project

## Benchmarking

```bash
              label  precision    recall  f1-score   support
    Mental_Disorder       0.79      0.85      0.82       223
No_Or_Not_Mentioned       0.85      0.78      0.82       240
           accuracy        -         -        0.82       463
          macro-avg       0.82      0.82      0.82       463
       weighted-avg       0.82      0.82      0.82       463
```</content><author><name>John Snow Labs</name></author><category term="en" /><category term="licenced" /><category term="clinical" /><category term="sdoh" /><category term="generic_classifier" /><category term="mental_health" /><category term="embeddings_clinical" /><category term="licensed" /><summary type="html">Description This Generic Classifier model is intended for detecting if the patient has mental health problems in clinical notes. This model is trained by using GenericClassifierApproach annotator. Mental_Disorder: The patient has mental health problems. No_Or_Not_Mentioned: The patient doesn’t have mental health problems or it is not mentioned in the clinical notes. Predicted Entities Mental_Disorder, No_Or_Not_Mentioned Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer() \ .setInputCols([&quot;document&quot;]) \ .setOutputCol(&quot;token&quot;) word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;word_embeddings&quot;) sentence_embeddings = SentenceEmbeddings() \ .setInputCols([&quot;document&quot;, &quot;word_embeddings&quot;]) \ .setOutputCol(&quot;sentence_embeddings&quot;) \ .setPoolingStrategy(&quot;AVERAGE&quot;) features_asm = FeaturesAssembler()\ .setInputCols([&quot;sentence_embeddings&quot;])\ .setOutputCol(&quot;features&quot;) generic_classifier = GenericClassifierModel.pretrained(&quot;genericclassifier_sdoh_mental_health_clinical&quot;, 'en', 'clinical/models')\ .setInputCols([&quot;features&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline(stages=[ document_assembler, tokenizer, word_embeddings, sentence_embeddings, features_asm, generic_classifier ]) sample_texts = [&quot;&quot;&quot;James is a 28-year-old man who has been struggling with schizophrenia for the past five years. He was diagnosed with the condition after experiencing a psychotic episode in his early 20s. The following is a case study that explores James' background, symptoms, diagnosis, treatment, and outcomes. Background: James grew up in a middle-class family with his parents and two younger siblings. He had a relatively normal childhood and was an above-average student in school. However, in his late teens, James started experiencing paranoid delusions and hallucinations. He became increasingly isolated and withdrawn, and his grades started to suffer. James was eventually hospitalized after experiencing a psychotic episode in college. Symptoms: James' symptoms of schizophrenia include delusions, hallucinations, disorganized speech and behavior, and negative symptoms. He experiences paranoid delusions, believing that people are out to get him or that he is being followed. James also experiences auditory hallucinations, hearing voices that are critical or commanding. He has difficulty organizing his thoughts and expressing himself coherently. James also experiences negative symptoms, such as reduced motivation, social withdrawal, and flattened affect. Diagnosis: James' diagnosis of schizophrenia was based on his symptoms, history, and a comprehensive evaluation by a mental health professional. He was diagnosed with paranoid schizophrenia, which is characterized by delusions and hallucinations. Treatment: James' treatment for schizophrenia consisted of medication and therapy. He was prescribed antipsychotic medication to help manage his symptoms. He also participated in cognitive-behavioral therapy (CBT), which focused on helping him identify and challenge his delusions and improve his communication skills. James also attended support groups for individuals with schizophrenia. Outcomes: With ongoing treatment, James' symptoms have become more manageable. He still experiences occasional psychotic episodes, but they are less frequent and less severe. James has also developed better coping skills and has learned to recognize the warning signs of an impending episode. He is able to maintain employment and has a stable home life. James' family has also been involved in his treatment, which has helped to improve his support system and overall quality of life. &quot;&quot;&quot;, &quot;&quot;&quot;Patient John is a 60-year-old man who presents to a primary care clinic for a routine check-up. He reports feeling generally healthy, with no significant medical concerns. However, he reveals that he is a smoker and drinks alcohol on a regular basis. The patient also mentions that he has a history of working long hours and has limited time for physical activity and social interactions. Based on this information, it appears that Patient John's overall health may be affected by several social determinants of health, including tobacco and alcohol use, lack of physical activity, and social isolation. To address these issues, the healthcare provider may recommend a comprehensive physical exam and develop a treatment plan that includes lifestyle modifications, such as smoking cessation and reduction of alcohol intake. Additionally, the patient may benefit from referrals to local organizations that provide resources for physical activity and social engagement. The healthcare provider may also recommend strategies to reduce work-related stress and promote work-life balance. By addressing these social determinants of health, healthcare providers can help promote Patient John's overall health and prevent future health problems.&quot;&quot;&quot;] df = spark.createDataFrame(text_list, StringType()).toDF(&quot;text&quot;) result = pipeline.fit(df).transform(df) result.select(&quot;text&quot;, &quot;class.result&quot;).show(truncate=100) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = Tokenizer() .setInputCols([&quot;document&quot;]) .setOutputCol(&quot;token&quot;) val word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols([&quot;document&quot;,&quot;token&quot;]) .setOutputCol(&quot;word_embeddings&quot;) val sentence_embeddings = SentenceEmbeddings() .setInputCols([&quot;document&quot;, &quot;word_embeddings&quot;]) .setOutputCol(&quot;sentence_embeddings&quot;) .setPoolingStrategy(&quot;AVERAGE&quot;) val features_asm = new FeaturesAssembler() .setInputCols(&quot;sentence_embeddings&quot;) .setOutputCol(&quot;features&quot;) val generic_classifier = GenericClassifierModel.pretrained(&quot;genericclassifier_sdoh_mental_health_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(&quot;features&quot;) .setOutputCol(&quot;class&quot;) val pipeline = new PipelineModel().setStages(Array( document_assembler, tokenizer, word_embeddings, sentence_embeddings, features_asm, generic_classifier)) val data = Seq(Array(&quot;&quot;&quot;James is a 28-year-old man who has been struggling with schizophrenia for the past five years. He was diagnosed with the condition after experiencing a psychotic episode in his early 20s. The following is a case study that explores James' background, symptoms, diagnosis, treatment, and outcomes. Background: James grew up in a middle-class family with his parents and two younger siblings. He had a relatively normal childhood and was an above-average student in school. However, in his late teens, James started experiencing paranoid delusions and hallucinations. He became increasingly isolated and withdrawn, and his grades started to suffer. James was eventually hospitalized after experiencing a psychotic episode in college. Symptoms: James' symptoms of schizophrenia include delusions, hallucinations, disorganized speech and behavior, and negative symptoms. He experiences paranoid delusions, believing that people are out to get him or that he is being followed. James also experiences auditory hallucinations, hearing voices that are critical or commanding. He has difficulty organizing his thoughts and expressing himself coherently. James also experiences negative symptoms, such as reduced motivation, social withdrawal, and flattened affect. Diagnosis: James' diagnosis of schizophrenia was based on his symptoms, history, and a comprehensive evaluation by a mental health professional. He was diagnosed with paranoid schizophrenia, which is characterized by delusions and hallucinations. Treatment: James' treatment for schizophrenia consisted of medication and therapy. He was prescribed antipsychotic medication to help manage his symptoms. He also participated in cognitive-behavioral therapy (CBT), which focused on helping him identify and challenge his delusions and improve his communication skills. James also attended support groups for individuals with schizophrenia. Outcomes: With ongoing treatment, James' symptoms have become more manageable. He still experiences occasional psychotic episodes, but they are less frequent and less severe. James has also developed better coping skills and has learned to recognize the warning signs of an impending episode. He is able to maintain employment and has a stable home life. James' family has also been involved in his treatment, which has helped to improve his support system and overall quality of life. &quot;&quot;&quot;, &quot;&quot;&quot;Patient John is a 60-year-old man who presents to a primary care clinic for a routine check-up. He reports feeling generally healthy, with no significant medical concerns. However, he reveals that he is a smoker and drinks alcohol on a regular basis. The patient also mentions that he has a history of working long hours and has limited time for physical activity and social interactions. Based on this information, it appears that Patient John's overall health may be affected by several social determinants of health, including tobacco and alcohol use, lack of physical activity, and social isolation. To address these issues, the healthcare provider may recommend a comprehensive physical exam and develop a treatment plan that includes lifestyle modifications, such as smoking cessation and reduction of alcohol intake. Additionally, the patient may benefit from referrals to local organizations that provide resources for physical activity and social engagement. The healthcare provider may also recommend strategies to reduce work-related stress and promote work-life balance. By addressing these social determinants of health, healthcare providers can help promote Patient John's overall health and prevent future health problems.&quot;&quot;&quot;)).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Results +----------------------------------------------------------------------------------------------------+---------------------+ | text| result| +----------------------------------------------------------------------------------------------------+---------------------+ |James is a 28-year-old man who has been struggling with schizophrenia for the past five years. He...| [Mental_Disorder]| |Patient John is a 60-year-old man who presents to a primary care clinic for a routine check-up. H...|[No_Or_Not_Mentioned]| +----------------------------------------------------------------------------------------------------+---------------------+ Model Information Model Name: genericclassifier_sdoh_mental_health_clinical Compatibility: Healthcare NLP 4.3.2+ License: Licensed Edition: Official Input Labels: [features] Output Labels: [prediction] Language: en Size: 1.5 MB Dependencies: embeddings_clinical References Internal SDOH Project Benchmarking label precision recall f1-score support Mental_Disorder 0.79 0.85 0.82 223 No_Or_Not_Mentioned 0.85 0.78 0.82 240 accuracy - - 0.82 463 macro-avg 0.82 0.82 0.82 463 weighted-avg 0.82 0.82 0.82 463</summary></entry><entry><title type="html">SDOH Under Treatment For Classification</title><link href="/2023/04/10/genericclassifier_sdoh_under_treatment_sbiobert_cased_mli_en.html" rel="alternate" type="text/html" title="SDOH Under Treatment For Classification" /><published>2023-04-10T00:00:00+00:00</published><updated>2023-04-10T00:00:00+00:00</updated><id>/2023/04/10/genericclassifier_sdoh_under_treatment_sbiobert_cased_mli_en</id><content type="html" xml:base="/2023/04/10/genericclassifier_sdoh_under_treatment_sbiobert_cased_mli_en.html">## Description

This Generic Classifier model is intended for detecting if the patient is under treatment or not. If under treatment is not mentioned in the text, it is regarded as &quot;not under treatment&quot;. The model is trained by using GenericClassifierApproach annotator.

`Under_Treatment`: The patient is under treatment.

`Not_Under_Treatment_Or_Not_Mentioned`: The patient is not under treatment or it is not mentioned in the clinical notes.

## Predicted Entities

`Under_Treatment`, `Not_Under_Treatment_Or_Not_Mentioned`

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/genericclassifier_sdoh_under_treatment_sbiobert_cased_mli_en_4.3.2_3.2_1681116067393.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/genericclassifier_sdoh_under_treatment_sbiobert_cased_mli_en_4.3.2_3.2_1681116067393.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}

```python
document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)
        
sentence_embeddings = BertSentenceEmbeddings.pretrained(&quot;sbiobert_base_cased_mli&quot;, 'en','clinical/models')\
    .setInputCols([&quot;document&quot;])\
    .setOutputCol(&quot;sentence_embeddings&quot;)

features_asm = FeaturesAssembler()\
    .setInputCols([&quot;sentence_embeddings&quot;])\
    .setOutputCol(&quot;features&quot;)

generic_classifier = GenericClassifierModel.pretrained(&quot;genericclassifier_sdoh_under_treatment_sbiobert_cased_mli&quot;, 'en', 'clinical/models')\
    .setInputCols([&quot;features&quot;])\
    .setOutputCol(&quot;class&quot;)

pipeline = Pipeline(stages=[
    document_assembler,
    sentence_embeddings,
    features_asm,
    generic_classifier    
])

text_list = [&quot;&quot;&quot;Sarah, a 55-year-old woman with a history of high cholesterol and a family history of heart disease, presented to her primary care physician with complaints of chest pain and shortness of breath. After a thorough evaluation, Sarah was diagnosed with coronary artery disease (CAD), a condition that can lead to heart attacks and other serious complications.

To manage her CAD, Sarah was started on a treatment plan that included medication to lower her cholesterol and blood pressure, as well as aspirin to prevent blood clots. In addition to medication, Sarah was advised to make lifestyle modifications such as improving her diet, quitting smoking, and increasing physical activity.

Over the course of several months, Sarah's symptoms improved, and follow-up tests showed that her cholesterol and blood pressure were within the target range. However, Sarah continued to experience occasional chest pain, and her medication regimen was adjusted accordingly.

With regular follow-up appointments and adherence to her treatment plan, Sarah's CAD remained under control, and she was able to resume her normal activities with improved quality of life.
&quot;&quot;&quot;,

&quot;&quot;&quot;John, a 60-year-old man with a history of smoking and high blood pressure, presented to his primary care physician with complaints of chest pain and shortness of breath. Further tests revealed that John had a blockage in one of his coronary arteries, which required urgent intervention. However, John was hesitant to undergo treatment, citing concerns about potential complications and side effects of medications and procedures.

Despite the physician's recommendations and attempts to educate John about the risks of leaving the blockage untreated, John ultimately chose not to pursue any treatment. Over the next several months, John continued to experience symptoms, which progressively worsened, and he ultimately required hospitalization for a heart attack. The medical team attempted to intervene at that point, but the damage to John's heart was severe, and his prognosis was poor.
&quot;&quot;&quot;]

df = spark.createDataFrame(text_list, StringType()).toDF(&quot;text&quot;)

result = pipeline.fit(df).transform(df)

result.select(&quot;text&quot;, &quot;class.result&quot;).show(truncate=100)
```
```scala
val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)
        
val sentence_embeddings = BertSentenceEmbeddings.pretrained(&quot;sbiobert_base_cased_mli&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(&quot;document&quot;)
    .setOutputCol(&quot;sentence_embeddings&quot;)

val features_asm = new FeaturesAssembler()
    .setInputCols(&quot;sentence_embeddings&quot;)
    .setOutputCol(&quot;features&quot;)

val generic_classifier = GenericClassifierModel.pretrained(&quot;genericclassifier_sdoh_under_treatment_sbiobert_cased_mli&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(&quot;features&quot;)
    .setOutputCol(&quot;class&quot;)

val pipeline = new PipelineModel().setStages(Array(
    document_assembler,
    sentence_embeddings,
    features_asm,
    generic_classifier))

val data = Seq(Array(&quot;&quot;&quot;Sarah, a 55-year-old woman with a history of high cholesterol and a family history of heart disease, presented to her primary care physician with complaints of chest pain and shortness of breath. After a thorough evaluation, Sarah was diagnosed with coronary artery disease (CAD), a condition that can lead to heart attacks and other serious complications.

To manage her CAD, Sarah was started on a treatment plan that included medication to lower her cholesterol and blood pressure, as well as aspirin to prevent blood clots. In addition to medication, Sarah was advised to make lifestyle modifications such as improving her diet, quitting smoking, and increasing physical activity.

Over the course of several months, Sarah's symptoms improved, and follow-up tests showed that her cholesterol and blood pressure were within the target range. However, Sarah continued to experience occasional chest pain, and her medication regimen was adjusted accordingly.

With regular follow-up appointments and adherence to her treatment plan, Sarah's CAD remained under control, and she was able to resume her normal activities with improved quality of life.
&quot;&quot;&quot;,

&quot;&quot;&quot;John, a 60-year-old man with a history of smoking and high blood pressure, presented to his primary care physician with complaints of chest pain and shortness of breath. Further tests revealed that John had a blockage in one of his coronary arteries, which required urgent intervention. However, John was hesitant to undergo treatment, citing concerns about potential complications and side effects of medications and procedures.

Despite the physician's recommendations and attempts to educate John about the risks of leaving the blockage untreated, John ultimately chose not to pursue any treatment. Over the next several months, John continued to experience symptoms, which progressively worsened, and he ultimately required hospitalization for a heart attack. The medical team attempted to intervene at that point, but the damage to John's heart was severe, and his prognosis was poor.
&quot;&quot;&quot;)).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
+----------------------------------------------------------------------------------------------------+--------------------------------------+
|                                                                                                text|                                result|
+----------------------------------------------------------------------------------------------------+--------------------------------------+
|Sarah, a 55-year-old woman with a history of high cholesterol and a family history of heart disea...|                     [Under_Treatment]|
|John, a 60-year-old man with a history of smoking and high blood pressure, presented to his prima...|[Not_Under_Treatment_Or_Not_Mentioned]|
+----------------------------------------------------------------------------------------------------+--------------------------------------+

```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|genericclassifier_sdoh_under_treatment_sbiobert_cased_mli|
|Compatibility:|Healthcare NLP 4.3.2+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[features]|
|Output Labels:|[prediction]|
|Language:|en|
|Size:|3.4 MB|
|Dependencies:|sbiobert_base_cased_mli|

## References

Internal SDOH Project

## Benchmarking

```bash
                               label  precision    recall  f1-score   support
Not_Under_Treatment_Or_Not_Mentioned       0.86      0.68      0.76       222
                     Under_Treatment       0.86      0.94      0.90       450
                            accuracy         -         -       0.86       672
                           macro-avg       0.86      0.81      0.83       672
                        weighted-avg       0.86      0.86      0.85       672
```</content><author><name>John Snow Labs</name></author><category term="en" /><category term="licenced" /><category term="clinical" /><category term="sdoh" /><category term="generic_classifier" /><category term="under_treatment" /><category term="biobert" /><category term="licensed" /><summary type="html">Description This Generic Classifier model is intended for detecting if the patient is under treatment or not. If under treatment is not mentioned in the text, it is regarded as “not under treatment”. The model is trained by using GenericClassifierApproach annotator. Under_Treatment: The patient is under treatment. Not_Under_Treatment_Or_Not_Mentioned: The patient is not under treatment or it is not mentioned in the clinical notes. Predicted Entities Under_Treatment, Not_Under_Treatment_Or_Not_Mentioned Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) sentence_embeddings = BertSentenceEmbeddings.pretrained(&quot;sbiobert_base_cased_mli&quot;, 'en','clinical/models')\ .setInputCols([&quot;document&quot;])\ .setOutputCol(&quot;sentence_embeddings&quot;) features_asm = FeaturesAssembler()\ .setInputCols([&quot;sentence_embeddings&quot;])\ .setOutputCol(&quot;features&quot;) generic_classifier = GenericClassifierModel.pretrained(&quot;genericclassifier_sdoh_under_treatment_sbiobert_cased_mli&quot;, 'en', 'clinical/models')\ .setInputCols([&quot;features&quot;])\ .setOutputCol(&quot;class&quot;) pipeline = Pipeline(stages=[ document_assembler, sentence_embeddings, features_asm, generic_classifier ]) text_list = [&quot;&quot;&quot;Sarah, a 55-year-old woman with a history of high cholesterol and a family history of heart disease, presented to her primary care physician with complaints of chest pain and shortness of breath. After a thorough evaluation, Sarah was diagnosed with coronary artery disease (CAD), a condition that can lead to heart attacks and other serious complications. To manage her CAD, Sarah was started on a treatment plan that included medication to lower her cholesterol and blood pressure, as well as aspirin to prevent blood clots. In addition to medication, Sarah was advised to make lifestyle modifications such as improving her diet, quitting smoking, and increasing physical activity. Over the course of several months, Sarah's symptoms improved, and follow-up tests showed that her cholesterol and blood pressure were within the target range. However, Sarah continued to experience occasional chest pain, and her medication regimen was adjusted accordingly. With regular follow-up appointments and adherence to her treatment plan, Sarah's CAD remained under control, and she was able to resume her normal activities with improved quality of life. &quot;&quot;&quot;, &quot;&quot;&quot;John, a 60-year-old man with a history of smoking and high blood pressure, presented to his primary care physician with complaints of chest pain and shortness of breath. Further tests revealed that John had a blockage in one of his coronary arteries, which required urgent intervention. However, John was hesitant to undergo treatment, citing concerns about potential complications and side effects of medications and procedures. Despite the physician's recommendations and attempts to educate John about the risks of leaving the blockage untreated, John ultimately chose not to pursue any treatment. Over the next several months, John continued to experience symptoms, which progressively worsened, and he ultimately required hospitalization for a heart attack. The medical team attempted to intervene at that point, but the damage to John's heart was severe, and his prognosis was poor. &quot;&quot;&quot;] df = spark.createDataFrame(text_list, StringType()).toDF(&quot;text&quot;) result = pipeline.fit(df).transform(df) result.select(&quot;text&quot;, &quot;class.result&quot;).show(truncate=100) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val sentence_embeddings = BertSentenceEmbeddings.pretrained(&quot;sbiobert_base_cased_mli&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(&quot;document&quot;) .setOutputCol(&quot;sentence_embeddings&quot;) val features_asm = new FeaturesAssembler() .setInputCols(&quot;sentence_embeddings&quot;) .setOutputCol(&quot;features&quot;) val generic_classifier = GenericClassifierModel.pretrained(&quot;genericclassifier_sdoh_under_treatment_sbiobert_cased_mli&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(&quot;features&quot;) .setOutputCol(&quot;class&quot;) val pipeline = new PipelineModel().setStages(Array( document_assembler, sentence_embeddings, features_asm, generic_classifier)) val data = Seq(Array(&quot;&quot;&quot;Sarah, a 55-year-old woman with a history of high cholesterol and a family history of heart disease, presented to her primary care physician with complaints of chest pain and shortness of breath. After a thorough evaluation, Sarah was diagnosed with coronary artery disease (CAD), a condition that can lead to heart attacks and other serious complications. To manage her CAD, Sarah was started on a treatment plan that included medication to lower her cholesterol and blood pressure, as well as aspirin to prevent blood clots. In addition to medication, Sarah was advised to make lifestyle modifications such as improving her diet, quitting smoking, and increasing physical activity. Over the course of several months, Sarah's symptoms improved, and follow-up tests showed that her cholesterol and blood pressure were within the target range. However, Sarah continued to experience occasional chest pain, and her medication regimen was adjusted accordingly. With regular follow-up appointments and adherence to her treatment plan, Sarah's CAD remained under control, and she was able to resume her normal activities with improved quality of life. &quot;&quot;&quot;, &quot;&quot;&quot;John, a 60-year-old man with a history of smoking and high blood pressure, presented to his primary care physician with complaints of chest pain and shortness of breath. Further tests revealed that John had a blockage in one of his coronary arteries, which required urgent intervention. However, John was hesitant to undergo treatment, citing concerns about potential complications and side effects of medications and procedures. Despite the physician's recommendations and attempts to educate John about the risks of leaving the blockage untreated, John ultimately chose not to pursue any treatment. Over the next several months, John continued to experience symptoms, which progressively worsened, and he ultimately required hospitalization for a heart attack. The medical team attempted to intervene at that point, but the damage to John's heart was severe, and his prognosis was poor. &quot;&quot;&quot;)).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Results +----------------------------------------------------------------------------------------------------+--------------------------------------+ | text| result| +----------------------------------------------------------------------------------------------------+--------------------------------------+ |Sarah, a 55-year-old woman with a history of high cholesterol and a family history of heart disea...| [Under_Treatment]| |John, a 60-year-old man with a history of smoking and high blood pressure, presented to his prima...|[Not_Under_Treatment_Or_Not_Mentioned]| +----------------------------------------------------------------------------------------------------+--------------------------------------+ Model Information Model Name: genericclassifier_sdoh_under_treatment_sbiobert_cased_mli Compatibility: Healthcare NLP 4.3.2+ License: Licensed Edition: Official Input Labels: [features] Output Labels: [prediction] Language: en Size: 3.4 MB Dependencies: sbiobert_base_cased_mli References Internal SDOH Project Benchmarking label precision recall f1-score support Not_Under_Treatment_Or_Not_Mentioned 0.86 0.68 0.76 222 Under_Treatment 0.86 0.94 0.90 450 accuracy - - 0.86 672 macro-avg 0.86 0.81 0.83 672 weighted-avg 0.86 0.86 0.85 672</summary></entry><entry><title type="html">Embeddings Clinical (Large)</title><link href="/2023/04/07/embeddings_clinical_large_en.html" rel="alternate" type="text/html" title="Embeddings Clinical (Large)" /><published>2023-04-07T00:00:00+00:00</published><updated>2023-04-07T00:00:00+00:00</updated><id>/2023/04/07/embeddings_clinical_large_en</id><content type="html" xml:base="/2023/04/07/embeddings_clinical_large_en.html">## Description

This model is trained on a list of clinical and biomedical datasets curated in-house, using the word2vec algorithm. The dataset curation cut-off date is March 2023 and the model is expected to have a better generalization on recent content. The size of the model is around 2 GB and has 200 dimensions. Our benchmark tests indicate that our legacy clinical embeddings (embeddings _clinical) can be replaced with this one.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/embeddings_clinical_large_en_4.3.2_3.0_1680905541704.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/embeddings_clinical_large_en_4.3.2_3.0_1680905541704.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\
    .setInputCols([&quot;document&quot;,&quot;token&quot;])\
    .setOutputCol(&quot;word_embeddings&quot;)

```
```scala

val embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
    .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
    .setOutputCol(&quot;word_embeddings&quot;)

```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|embeddings_clinical_large|
|Type:|embeddings|
|Compatibility:|Healthcare NLP 4.3.2+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[document, token]|
|Output Labels:|[word_embeddings]|
|Language:|en|
|Size:|2.0 GB|
|Case sensitive:|true|
|Dimension:|200|</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="clinical" /><category term="embeddings" /><summary type="html">Description This model is trained on a list of clinical and biomedical datasets curated in-house, using the word2vec algorithm. The dataset curation cut-off date is March 2023 and the model is expected to have a better generalization on recent content. The size of the model is around 2 GB and has 200 dimensions. Our benchmark tests indicate that our legacy clinical embeddings (embeddings _clinical) can be replaced with this one. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;word_embeddings&quot;) val embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;word_embeddings&quot;) Model Information Model Name: embeddings_clinical_large Type: embeddings Compatibility: Healthcare NLP 4.3.2+ License: Licensed Edition: Official Input Labels: [document, token] Output Labels: [word_embeddings] Language: en Size: 2.0 GB Case sensitive: true Dimension: 200</summary></entry><entry><title type="html">Embeddings Clinical (Medium)</title><link href="/2023/04/07/embeddings_clinical_medium_en.html" rel="alternate" type="text/html" title="Embeddings Clinical (Medium)" /><published>2023-04-07T00:00:00+00:00</published><updated>2023-04-07T00:00:00+00:00</updated><id>/2023/04/07/embeddings_clinical_medium_en</id><content type="html" xml:base="/2023/04/07/embeddings_clinical_medium_en.html">## Description

This model is trained on a list of clinical and biomedical datasets curated in-house, using the word2vec algorithm. The dataset curation cut-off date is March 2023 and the model is expected to have a better generalization on recent content. The size of the model is around 1 GB and has 200 dimensions. Our benchmark tests indicate that our legacy clinical embeddings (embeddings _clinical) can be replaced with this one.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/embeddings_clinical_medium_en_4.3.2_3.0_1680835759101.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/embeddings_clinical_medium_en_4.3.2_3.0_1680835759101.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}

```python

embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_medium&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\
    .setInputCols([&quot;document&quot;,&quot;token&quot;])\
    .setOutputCol(&quot;word_embeddings&quot;)

```
```scala

val embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_medium&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
    .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
    .setOutputCol(&quot;word_embeddings&quot;)

```
&lt;/div&gt;

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|embeddings_clinical_medium|
|Type:|embeddings|
|Compatibility:|Healthcare NLP 4.3.2+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[document, token]|
|Output Labels:|[word_embeddings]|
|Language:|en|
|Size:|787.5 MB|
|Case sensitive:|true|
|Dimension:|200|</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="clinical" /><category term="embeddings" /><summary type="html">Description This model is trained on a list of clinical and biomedical datasets curated in-house, using the word2vec algorithm. The dataset curation cut-off date is March 2023 and the model is expected to have a better generalization on recent content. The size of the model is around 1 GB and has 200 dimensions. Our benchmark tests indicate that our legacy clinical embeddings (embeddings _clinical) can be replaced with this one. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_medium&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\ .setInputCols([&quot;document&quot;,&quot;token&quot;])\ .setOutputCol(&quot;word_embeddings&quot;) val embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_medium&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;word_embeddings&quot;) Model Information Model Name: embeddings_clinical_medium Type: embeddings Compatibility: Healthcare NLP 4.3.2+ License: Licensed Edition: Official Input Labels: [document, token] Output Labels: [word_embeddings] Language: en Size: 787.5 MB Case sensitive: true Dimension: 200</summary></entry><entry><title type="html">Generic Text Generation - Large</title><link href="/2023/04/04/text_generator_generic_flan_t5_large_en.html" rel="alternate" type="text/html" title="Generic Text Generation - Large" /><published>2023-04-04T00:00:00+00:00</published><updated>2023-04-04T00:00:00+00:00</updated><id>/2023/04/04/text_generator_generic_flan_t5_large_en</id><content type="html" xml:base="/2023/04/04/text_generator_generic_flan_t5_large_en.html">## Description

This model is based on google's Flan-T5 Large, and can generate conditional text. Sequence length is 512 tokens.

## Predicted Entities



{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/text_generator_generic_flan_t5_large_en_4.3.2_3.0_1680648636099.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/text_generator_generic_flan_t5_large_en_4.3.2_3.0_1680648636099.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python
document_assembler = DocumentAssembler()\
    .setInputCol(&quot;prompt&quot;)\
    .setOutputCol(&quot;document_prompt&quot;)

med_text_generator  = MedicalTextGenerator.pretrained(&quot;text_generator_generic_flan_t5_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols(&quot;document_prompt&quot;)\
    .setOutputCol(&quot;answer&quot;)\
    .setMaxNewTokens(256)\
    .setDoSample(True)\
    .setTopK(3)\
    .setRandomSeed(42)

pipeline = Pipeline(stages=[document_assembler, med_text_generator])
data = spark.createDataFrame([[&quot;&quot;&quot;Classify the following review as negative or positive:

Not a huge fan of her acting, but the movie was actually quite good!&quot;&quot;&quot;]]).toDF(&quot;prompt&quot;)
pipeline.fit(data).transform(data)
```
```scala
val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;prompt&quot;)
    .setOutputCol(&quot;document_prompt&quot;)

val med_text_generator  = MedicalTextGenerator.pretrained(&quot;text_generator_generic_flan_t5_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(&quot;document_prompt&quot;)
    .setOutputCol(&quot;answer&quot;)
    .setMaxNewTokens(256)
    .setDoSample(true)
    .setTopK(3)
    .setRandomSeed(42)

val pipeline = new Pipeline().setStages(Array(document_assembler, med_text_generator))
val data = Seq(Array(&quot;&quot;&quot;Classify the following review as negative or positive:

Not a huge fan of her acting, but the movie was actually quite good!&quot;&quot;&quot;)).toDS.toDF(&quot;prompt&quot;)
val result = pipeline.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
positive
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|text_generator_generic_flan_t5_large|
|Compatibility:|Healthcare NLP 4.3.2+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|2.9 GB|</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="text_generation" /><category term="tensorflow" /><summary type="html">Description This model is based on google’s Flan-T5 Large, and can generate conditional text. Sequence length is 512 tokens. Predicted Entities Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;prompt&quot;)\ .setOutputCol(&quot;document_prompt&quot;) med_text_generator = MedicalTextGenerator.pretrained(&quot;text_generator_generic_flan_t5_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols(&quot;document_prompt&quot;)\ .setOutputCol(&quot;answer&quot;)\ .setMaxNewTokens(256)\ .setDoSample(True)\ .setTopK(3)\ .setRandomSeed(42) pipeline = Pipeline(stages=[document_assembler, med_text_generator]) data = spark.createDataFrame([[&quot;&quot;&quot;Classify the following review as negative or positive: Not a huge fan of her acting, but the movie was actually quite good!&quot;&quot;&quot;]]).toDF(&quot;prompt&quot;) pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;prompt&quot;) .setOutputCol(&quot;document_prompt&quot;) val med_text_generator = MedicalTextGenerator.pretrained(&quot;text_generator_generic_flan_t5_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(&quot;document_prompt&quot;) .setOutputCol(&quot;answer&quot;) .setMaxNewTokens(256) .setDoSample(true) .setTopK(3) .setRandomSeed(42) val pipeline = new Pipeline().setStages(Array(document_assembler, med_text_generator)) val data = Seq(Array(&quot;&quot;&quot;Classify the following review as negative or positive: Not a huge fan of her acting, but the movie was actually quite good!&quot;&quot;&quot;)).toDS.toDF(&quot;prompt&quot;) val result = pipeline.fit(data).transform(data) Results positive Model Information Model Name: text_generator_generic_flan_t5_large Compatibility: Healthcare NLP 4.3.2+ License: Licensed Edition: Official Language: en Size: 2.9 GB</summary></entry><entry><title type="html">Summarize Clinical Notes (PubMed)</title><link href="/2023/04/03/summarizer_biomedical_pubmed_en.html" rel="alternate" type="text/html" title="Summarize Clinical Notes (PubMed)" /><published>2023-04-03T00:00:00+00:00</published><updated>2023-04-03T00:00:00+00:00</updated><id>/2023/04/03/summarizer_biomedical_pubmed_en</id><content type="html" xml:base="/2023/04/03/summarizer_biomedical_pubmed_en.html">## Description

This model is a modified version of Flan-T5 (LLM) based summarization model that is finetuned with biomedical datasets (Pubmed abstracts) by John Snow Labs.  It can generate summaries up to 512 tokens given an input text (max 1024 tokens).

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/summarizer_biomedical_pubmed_en_4.3.2_3.0_1680523127672.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/summarizer_biomedical_pubmed_en_4.3.2_3.0_1680523127672.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}

```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

summarizer = MedicalSummarizer.pretrained(&quot;summarizer_biomedical_pubmed&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;document&quot;])\
    .setOutputCol(&quot;summary&quot;)\
    .setMaxTextLength(512)\
    .setMaxNewTokens(512)

pipeline = sparknlp.base.Pipeline(stages=[
    document_assembler,
    summarizer  
])

text = &quot;&quot;&quot;Residual disease after initial surgery for ovarian cancer is the strongest prognostic factor for survival. However, the extent of surgical resection required to achieve optimal cytoreduction is controversial. Our goal was to estimate the effect of aggressive surgical resection on ovarian cancer patient survival.\\n A retrospective cohort study of consecutive patients with International Federation of Gynecology and Obstetrics stage IIIC ovarian cancer undergoing primary surgery was conducted between January 1, 1994, and December 31, 1998. The main outcome measures were residual disease after cytoreduction, frequency of radical surgical resection, and 5-year disease-specific survival.\\n The study comprised 194 patients, including 144 with carcinomatosis. The mean patient age and follow-up time were 64.4 and 3.5 years, respectively. After surgery, 131 (67.5%) of the 194 patients had less than 1 cm of residual disease (definition of optimal cytoreduction). Considering all patients, residual disease was the only independent predictor of survival; the need to perform radical procedures to achieve optimal cytoreduction was not associated with a decrease in survival. For the subgroup of patients with carcinomatosis, residual disease and the performance of radical surgical procedures were the only independent predictors. Disease-specific survival was markedly improved for patients with carcinomatosis operated on by surgeons who most frequently used radical procedures compared with those least likely to use radical procedures (44% versus 17%, P &lt; .001).\\n Overall, residual disease was the only independent predictor of survival. Minimizing residual disease through aggressive surgical resection was beneficial, especially in patients with carcinomatosis.&quot;&quot;&quot;

data = spark.createDataFrame([[text]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val summarizer  = MedicalSummarizer.pretrained(&quot;summarizer_biomedical_pubmed&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(&quot;document_prompt&quot;)
    .setOutputCol(&quot;answer&quot;)
    .setMaxTextLength(512)
    .setMaxNewTokens(512)

val pipeline = new Pipeline().setStages(Array(document_assembler, summarizer))

val text = &quot;&quot;&quot;Residual disease after initial surgery for ovarian cancer is the strongest prognostic factor for survival. However, the extent of surgical resection required to achieve optimal cytoreduction is controversial. Our goal was to estimate the effect of aggressive surgical resection on ovarian cancer patient survival.\\n A retrospective cohort study of consecutive patients with International Federation of Gynecology and Obstetrics stage IIIC ovarian cancer undergoing primary surgery was conducted between January 1, 1994, and December 31, 1998. The main outcome measures were residual disease after cytoreduction, frequency of radical surgical resection, and 5-year disease-specific survival.\\n The study comprised 194 patients, including 144 with carcinomatosis. The mean patient age and follow-up time were 64.4 and 3.5 years, respectively. After surgery, 131 (67.5%) of the 194 patients had less than 1 cm of residual disease (definition of optimal cytoreduction). Considering all patients, residual disease was the only independent predictor of survival; the need to perform radical procedures to achieve optimal cytoreduction was not associated with a decrease in survival. For the subgroup of patients with carcinomatosis, residual disease and the performance of radical surgical procedures were the only independent predictors. Disease-specific survival was markedly improved for patients with carcinomatosis operated on by surgeons who most frequently used radical procedures compared with those least likely to use radical procedures (44% versus 17%, P &lt; .001).\\n Overall, residual disease was the only independent predictor of survival. Minimizing residual disease through aggressive surgical resection was beneficial, especially in patients with carcinomatosis.&quot;&quot;&quot;

val data = Seq(Array(text)).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)

```
&lt;/div&gt;

## Results

```bash

['The results of this review suggest that aggressive ovarian cancer surgery is associated with a significant reduction in the risk of recurrence and a reduction in the number of radical versus conservative surgical resections. However, the results of this review are based on only one small trial. Further research is needed to determine the role of aggressive ovarian cancer surgery in women with stage IIIC ovarian cancer.']
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|summarizer_biomedical_pubmed|
|Compatibility:|Healthcare NLP 4.3.2+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|920.0 MB|</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="clinical" /><category term="summarization" /><category term="tensorflow" /><summary type="html">Description This model is a modified version of Flan-T5 (LLM) based summarization model that is finetuned with biomedical datasets (Pubmed abstracts) by John Snow Labs.  It can generate summaries up to 512 tokens given an input text (max 1024 tokens). Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) summarizer = MedicalSummarizer.pretrained(&quot;summarizer_biomedical_pubmed&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;document&quot;])\ .setOutputCol(&quot;summary&quot;)\ .setMaxTextLength(512)\ .setMaxNewTokens(512) pipeline = sparknlp.base.Pipeline(stages=[ document_assembler, summarizer ]) text = &quot;&quot;&quot;Residual disease after initial surgery for ovarian cancer is the strongest prognostic factor for survival. However, the extent of surgical resection required to achieve optimal cytoreduction is controversial. Our goal was to estimate the effect of aggressive surgical resection on ovarian cancer patient survival.\\n A retrospective cohort study of consecutive patients with International Federation of Gynecology and Obstetrics stage IIIC ovarian cancer undergoing primary surgery was conducted between January 1, 1994, and December 31, 1998. The main outcome measures were residual disease after cytoreduction, frequency of radical surgical resection, and 5-year disease-specific survival.\\n The study comprised 194 patients, including 144 with carcinomatosis. The mean patient age and follow-up time were 64.4 and 3.5 years, respectively. After surgery, 131 (67.5%) of the 194 patients had less than 1 cm of residual disease (definition of optimal cytoreduction). Considering all patients, residual disease was the only independent predictor of survival; the need to perform radical procedures to achieve optimal cytoreduction was not associated with a decrease in survival. For the subgroup of patients with carcinomatosis, residual disease and the performance of radical surgical procedures were the only independent predictors. Disease-specific survival was markedly improved for patients with carcinomatosis operated on by surgeons who most frequently used radical procedures compared with those least likely to use radical procedures (44% versus 17%, P &amp;lt; .001).\\n Overall, residual disease was the only independent predictor of survival. Minimizing residual disease through aggressive surgical resection was beneficial, especially in patients with carcinomatosis.&quot;&quot;&quot; data = spark.createDataFrame([[text]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val summarizer = MedicalSummarizer.pretrained(&quot;summarizer_biomedical_pubmed&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(&quot;document_prompt&quot;) .setOutputCol(&quot;answer&quot;) .setMaxTextLength(512) .setMaxNewTokens(512) val pipeline = new Pipeline().setStages(Array(document_assembler, summarizer)) val text = &quot;&quot;&quot;Residual disease after initial surgery for ovarian cancer is the strongest prognostic factor for survival. However, the extent of surgical resection required to achieve optimal cytoreduction is controversial. Our goal was to estimate the effect of aggressive surgical resection on ovarian cancer patient survival.\\n A retrospective cohort study of consecutive patients with International Federation of Gynecology and Obstetrics stage IIIC ovarian cancer undergoing primary surgery was conducted between January 1, 1994, and December 31, 1998. The main outcome measures were residual disease after cytoreduction, frequency of radical surgical resection, and 5-year disease-specific survival.\\n The study comprised 194 patients, including 144 with carcinomatosis. The mean patient age and follow-up time were 64.4 and 3.5 years, respectively. After surgery, 131 (67.5%) of the 194 patients had less than 1 cm of residual disease (definition of optimal cytoreduction). Considering all patients, residual disease was the only independent predictor of survival; the need to perform radical procedures to achieve optimal cytoreduction was not associated with a decrease in survival. For the subgroup of patients with carcinomatosis, residual disease and the performance of radical surgical procedures were the only independent predictors. Disease-specific survival was markedly improved for patients with carcinomatosis operated on by surgeons who most frequently used radical procedures compared with those least likely to use radical procedures (44% versus 17%, P &amp;lt; .001).\\n Overall, residual disease was the only independent predictor of survival. Minimizing residual disease through aggressive surgical resection was beneficial, especially in patients with carcinomatosis.&quot;&quot;&quot; val data = Seq(Array(text)).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Results ['The results of this review suggest that aggressive ovarian cancer surgery is associated with a significant reduction in the risk of recurrence and a reduction in the number of radical versus conservative surgical resections. However, the results of this review are based on only one small trial. Further research is needed to determine the role of aggressive ovarian cancer surgery in women with stage IIIC ovarian cancer.'] Model Information Model Name: summarizer_biomedical_pubmed Compatibility: Healthcare NLP 4.3.2+ License: Licensed Edition: Official Language: en Size: 920.0 MB</summary></entry><entry><title type="html">Summarize Clinical Question Notes</title><link href="/2023/04/03/summarizer_clinical_questions_en.html" rel="alternate" type="text/html" title="Summarize Clinical Question Notes" /><published>2023-04-03T00:00:00+00:00</published><updated>2023-04-03T00:00:00+00:00</updated><id>/2023/04/03/summarizer_clinical_questions_en</id><content type="html" xml:base="/2023/04/03/summarizer_clinical_questions_en.html">## Description

This model is a modified version of Flan-T5 (LLM) based summarization model that is finetuned with medical questions exchanged in clinical mediums (clinic, email, call center etc.) by John Snow Labs.  It can generate summaries up to 512 tokens given an input text (max 1024 tokens).

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/summarizer_clinical_questions_en_4.3.2_3.0_1680550227628.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/summarizer_clinical_questions_en_4.3.2_3.0_1680550227628.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}

```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

summarizer = MedicalSummarizer.pretrained(&quot;summarizer_clinical_questions&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;document&quot;])\
    .setOutputCol(&quot;summary&quot;)\
    .setMaxTextLength(512)\
    .setMaxNewTokens(512)

pipeline = sparknlp.base.Pipeline(stages=[
    document_assembler,
    summarizer  
])

text = &quot;&quot;&quot; 
Hello,I'm 20 year old girl. I'm diagnosed with hyperthyroid 1 month ago. I was feeling weak, light headed,poor digestion, panic attacks, depression, left chest pain, increased heart rate, rapidly weight loss, from 4 months. Because of this, I stayed in the hospital and just discharged from hospital. I had many other blood tests, brain mri, ultrasound scan, endoscopy because of some dumb doctors bcs they were not able to diagnose actual problem. Finally I got an appointment with a homeopathy doctor finally he find that i was suffering from hyperthyroid and my TSH was 0.15 T3 and T4 is normal . Also i have b12 deficiency and vitamin D deficiency so I'm taking weekly supplement of vitamin D and 1000 mcg b12 daily. I'm taking homeopathy medicine for 40 days and took 2nd test after 30 days. My TSH is 0.5 now. I feel a little bit relief from weakness and depression but I'm facing with 2 new problem from last week that is breathtaking problem and very rapid heartrate. I just want to know if i should start allopathy medicine or homeopathy is okay? Bcs i heard that thyroid take time to start recover. So please let me know if both of medicines take same time. Because some of my friends advising me to start allopathy and never take a chance as i can develop some serious problems.Sorry for my poor english😐Thank you.
&quot;&quot;&quot;

data = spark.createDataFrame([[text]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val summarizer  = MedicalSummarizer.pretrained(&quot;summarizer_clinical_questions&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(&quot;document_prompt&quot;)
    .setOutputCol(&quot;answer&quot;)
    .setMaxTextLength(512)
    .setMaxNewTokens(512)

val pipeline = new Pipeline().setStages(Array(document_assembler, summarizer))

val text = &quot;&quot;&quot;Hello,I'm 20 year old girl. I'm diagnosed with hyperthyroid 1 month ago. I was feeling weak, light headed,poor digestion, panic attacks, depression, left chest pain, increased heart rate, rapidly weight loss, from 4 months. Because of this, I stayed in the hospital and just discharged from hospital. I had many other blood tests, brain mri, ultrasound scan, endoscopy because of some dumb doctors bcs they were not able to diagnose actual problem. Finally I got an appointment with a homeopathy doctor finally he find that i was suffering from hyperthyroid and my TSH was 0.15 T3 and T4 is normal . Also i have b12 deficiency and vitamin D deficiency so I'm taking weekly supplement of vitamin D and 1000 mcg b12 daily. I'm taking homeopathy medicine for 40 days and took 2nd test after 30 days. My TSH is 0.5 now. I feel a little bit relief from weakness and depression but I'm facing with 2 new problem from last week that is breathtaking problem and very rapid heartrate. I just want to know if i should start allopathy medicine or homeopathy is okay? Bcs i heard that thyroid take time to start recover. So please let me know if both of medicines take same time. Because some of my friends advising me to start allopathy and never take a chance as i can develop some serious problems.Sorry for my poor english😐Thank you.
&quot;&quot;&quot;

val data = Seq(Array(text)).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)

```
&lt;/div&gt;

## Results

```bash

['What are the treatments for hyperthyroidism?']

```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|summarizer_clinical_questions|
|Compatibility:|Healthcare NLP 4.3.2+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|920.0 MB|</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="clinical" /><category term="summarization" /><category term="tensorflow" /><summary type="html">Description This model is a modified version of Flan-T5 (LLM) based summarization model that is finetuned with medical questions exchanged in clinical mediums (clinic, email, call center etc.) by John Snow Labs.  It can generate summaries up to 512 tokens given an input text (max 1024 tokens). Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) summarizer = MedicalSummarizer.pretrained(&quot;summarizer_clinical_questions&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;document&quot;])\ .setOutputCol(&quot;summary&quot;)\ .setMaxTextLength(512)\ .setMaxNewTokens(512) pipeline = sparknlp.base.Pipeline(stages=[ document_assembler, summarizer ]) text = &quot;&quot;&quot; Hello,I'm 20 year old girl. I'm diagnosed with hyperthyroid 1 month ago. I was feeling weak, light headed,poor digestion, panic attacks, depression, left chest pain, increased heart rate, rapidly weight loss, from 4 months. Because of this, I stayed in the hospital and just discharged from hospital. I had many other blood tests, brain mri, ultrasound scan, endoscopy because of some dumb doctors bcs they were not able to diagnose actual problem. Finally I got an appointment with a homeopathy doctor finally he find that i was suffering from hyperthyroid and my TSH was 0.15 T3 and T4 is normal . Also i have b12 deficiency and vitamin D deficiency so I'm taking weekly supplement of vitamin D and 1000 mcg b12 daily. I'm taking homeopathy medicine for 40 days and took 2nd test after 30 days. My TSH is 0.5 now. I feel a little bit relief from weakness and depression but I'm facing with 2 new problem from last week that is breathtaking problem and very rapid heartrate. I just want to know if i should start allopathy medicine or homeopathy is okay? Bcs i heard that thyroid take time to start recover. So please let me know if both of medicines take same time. Because some of my friends advising me to start allopathy and never take a chance as i can develop some serious problems.Sorry for my poor english😐Thank you. &quot;&quot;&quot; data = spark.createDataFrame([[text]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val summarizer = MedicalSummarizer.pretrained(&quot;summarizer_clinical_questions&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(&quot;document_prompt&quot;) .setOutputCol(&quot;answer&quot;) .setMaxTextLength(512) .setMaxNewTokens(512) val pipeline = new Pipeline().setStages(Array(document_assembler, summarizer)) val text = &quot;&quot;&quot;Hello,I'm 20 year old girl. I'm diagnosed with hyperthyroid 1 month ago. I was feeling weak, light headed,poor digestion, panic attacks, depression, left chest pain, increased heart rate, rapidly weight loss, from 4 months. Because of this, I stayed in the hospital and just discharged from hospital. I had many other blood tests, brain mri, ultrasound scan, endoscopy because of some dumb doctors bcs they were not able to diagnose actual problem. Finally I got an appointment with a homeopathy doctor finally he find that i was suffering from hyperthyroid and my TSH was 0.15 T3 and T4 is normal . Also i have b12 deficiency and vitamin D deficiency so I'm taking weekly supplement of vitamin D and 1000 mcg b12 daily. I'm taking homeopathy medicine for 40 days and took 2nd test after 30 days. My TSH is 0.5 now. I feel a little bit relief from weakness and depression but I'm facing with 2 new problem from last week that is breathtaking problem and very rapid heartrate. I just want to know if i should start allopathy medicine or homeopathy is okay? Bcs i heard that thyroid take time to start recover. So please let me know if both of medicines take same time. Because some of my friends advising me to start allopathy and never take a chance as i can develop some serious problems.Sorry for my poor english😐Thank you. &quot;&quot;&quot; val data = Seq(Array(text)).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Results ['What are the treatments for hyperthyroidism?'] Model Information Model Name: summarizer_clinical_questions Compatibility: Healthcare NLP 4.3.2+ License: Licensed Edition: Official Language: en Size: 920.0 MB</summary></entry><entry><title type="html">Medical Text Generation (BioGPT-based)</title><link href="/2023/04/03/text_generator_biomedical_biogpt_base_en.html" rel="alternate" type="text/html" title="Medical Text Generation (BioGPT-based)" /><published>2023-04-03T00:00:00+00:00</published><updated>2023-04-03T00:00:00+00:00</updated><id>/2023/04/03/text_generator_biomedical_biogpt_base_en</id><content type="html" xml:base="/2023/04/03/text_generator_biomedical_biogpt_base_en.html">## Description

This model is a BioGPT (LLM) based text generation model that is finetuned with biomedical datasets (Pubmed abstracts) by John Snow Labs.  Given a few tokens as an intro, it can generate human-like, conceptually meaningful texts  up to 1024 tokens given an input text (max 1024 tokens).

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/text_generator_biomedical_biogpt_base_en_4.3.2_3.0_1680514919715.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/text_generator_biomedical_biogpt_base_en_4.3.2_3.0_1680514919715.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}

```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;prompt&quot;)\
    .setOutputCol(&quot;document_prompt&quot;)

med_text_generator  = MedicalTextGenerator.pretrained(&quot;text_generator_biomedical_biogpt_base&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols(&quot;document_prompt&quot;)\
    .setOutputCol(&quot;answer&quot;)\
    .setMaxNewTokens(256)\
    .setDoSample(True)\
    .setTopK(3)\
    .setRandomSeed(42)

pipeline = Pipeline(stages=[document_assembler, med_text_generator])

data = spark.createDataFrame([[&quot;Covid 19 is&quot;], [&quot;The most common cause of stomach pain is&quot;]]).toDF(&quot;prompt&quot;)

pipeline.fit(data).transform(data)

```
```scala
val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;prompt&quot;)
    .setOutputCol(&quot;document_prompt&quot;)

val med_text_generator  = MedicalTextGenerator.pretrained(&quot;text_generator_biomedical_biogpt_base&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(&quot;document_prompt&quot;)
    .setOutputCol(&quot;answer&quot;)
    .setMaxNewTokens(256)
    .setDoSample(true)
    .setTopK(3)
    .setRandomSeed(42)

val pipeline = new Pipeline().setStages(Array(document_assembler, med_text_generator))

val data = Seq(Array(&quot;Covid 19 is&quot;, &quot;The most common cause of stomach pain is&quot;)).toDS.toDF(&quot;prompt&quot;)

val result = pipeline.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash

[Covid 19 is a pandemic with high rates in both mortality ( around 5 to 8 percent in the United States ) and economic loss, which are likely related to the disruption of social life. The COVID - 19 crisis has caused a significant reduction in healthcare capacity and has led to an increased risk of infection in healthcare facilities and patients with underlying conditions, which has increased morbidity, increased mortality rates in patients, and increased healthcare costs. The COVID - 19 pandemic has also led to a significant increase in the number of patients with chronic diseases, which has led to an increase in the number of patients with chronic conditions who are at high cardiovascular ( cardiovascular diseases &amp;#91; CDs &amp;#93; ) risk and therefore require intensive care. &amp;quot; This review will discuss the impact of this COVID pandemic in the healthcare system, the potential impact in healthcare providers caring and treating patients with CDs, and the potential impact on the healthcare system. The COVID Pandemias- A Review of the Current Literature. The COVID - 19 pandemic has resulted in a significant increase in the number of patients with cardiovascular disease ( CVD ). The number of patients with CVD is expected to increase by approximately 20 percent by the end of 2020. The number of patients with CVD will also increase by approximately 20 percent by the end of 2020]

[The most common cause of stomach pain is peptic ulcer disease. The diagnosis of gastric ulcer is based on the presence and severity ( as determined by endoscopy ) of the ulcer, as confirmed on the basis ofendoscopic biopsy and gastric mucosal biopsy with urease tests, and by the presence of Helicobacter pylori. The treatment of gastric ulcer is based on the eradication of H. pylori. The aim of this study, conducted on the population aged over 40 in the city of Szczecin, was to determine the prevalence of H. pylori infection in patients with gastric ulcer and to assess the effectiveness of the eradication therapy. MATERIAL AND METHODS: The study involved patients aged over 40 who were admitted to the Gastroenterology Clinic of the Medical University of Szczecin with a diagnosis of gastric ulcer. The study was conducted on the population of patients with gastric ulcer, who were admitted to the Gastroenterology Clinic of the Medical University of Szczecin between January and December 2014. The study included patients with gastric ulcer who were admitted to the Gastroenterology Clinic of the Medical University of Szczecin between January and December 2014. The study was conducted on the population of patients aged over 40 who were admitted to the Gastroenterology Clinic of the] 

```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|text_generator_biomedical_biogpt_base|
|Compatibility:|Healthcare NLP 4.3.2+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|917.9 MB|
|Case sensitive:|true|</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="clinical" /><category term="text_generation" /><category term="biogpt" /><category term="tensorflow" /><summary type="html">Description This model is a BioGPT (LLM) based text generation model that is finetuned with biomedical datasets (Pubmed abstracts) by John Snow Labs.  Given a few tokens as an intro, it can generate human-like, conceptually meaningful texts  up to 1024 tokens given an input text (max 1024 tokens). Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;prompt&quot;)\ .setOutputCol(&quot;document_prompt&quot;) med_text_generator = MedicalTextGenerator.pretrained(&quot;text_generator_biomedical_biogpt_base&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols(&quot;document_prompt&quot;)\ .setOutputCol(&quot;answer&quot;)\ .setMaxNewTokens(256)\ .setDoSample(True)\ .setTopK(3)\ .setRandomSeed(42) pipeline = Pipeline(stages=[document_assembler, med_text_generator]) data = spark.createDataFrame([[&quot;Covid 19 is&quot;], [&quot;The most common cause of stomach pain is&quot;]]).toDF(&quot;prompt&quot;) pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;prompt&quot;) .setOutputCol(&quot;document_prompt&quot;) val med_text_generator = MedicalTextGenerator.pretrained(&quot;text_generator_biomedical_biogpt_base&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(&quot;document_prompt&quot;) .setOutputCol(&quot;answer&quot;) .setMaxNewTokens(256) .setDoSample(true) .setTopK(3) .setRandomSeed(42) val pipeline = new Pipeline().setStages(Array(document_assembler, med_text_generator)) val data = Seq(Array(&quot;Covid 19 is&quot;, &quot;The most common cause of stomach pain is&quot;)).toDS.toDF(&quot;prompt&quot;) val result = pipeline.fit(data).transform(data) Results [Covid 19 is a pandemic with high rates in both mortality ( around 5 to 8 percent in the United States ) and economic loss, which are likely related to the disruption of social life. The COVID - 19 crisis has caused a significant reduction in healthcare capacity and has led to an increased risk of infection in healthcare facilities and patients with underlying conditions, which has increased morbidity, increased mortality rates in patients, and increased healthcare costs. The COVID - 19 pandemic has also led to a significant increase in the number of patients with chronic diseases, which has led to an increase in the number of patients with chronic conditions who are at high cardiovascular ( cardiovascular diseases &amp;amp;#91; CDs &amp;amp;#93; ) risk and therefore require intensive care. &amp;amp;quot; This review will discuss the impact of this COVID pandemic in the healthcare system, the potential impact in healthcare providers caring and treating patients with CDs, and the potential impact on the healthcare system. The COVID Pandemias- A Review of the Current Literature. The COVID - 19 pandemic has resulted in a significant increase in the number of patients with cardiovascular disease ( CVD ). The number of patients with CVD is expected to increase by approximately 20 percent by the end of 2020. The number of patients with CVD will also increase by approximately 20 percent by the end of 2020] [The most common cause of stomach pain is peptic ulcer disease. The diagnosis of gastric ulcer is based on the presence and severity ( as determined by endoscopy ) of the ulcer, as confirmed on the basis ofendoscopic biopsy and gastric mucosal biopsy with urease tests, and by the presence of Helicobacter pylori. The treatment of gastric ulcer is based on the eradication of H. pylori. The aim of this study, conducted on the population aged over 40 in the city of Szczecin, was to determine the prevalence of H. pylori infection in patients with gastric ulcer and to assess the effectiveness of the eradication therapy. MATERIAL AND METHODS: The study involved patients aged over 40 who were admitted to the Gastroenterology Clinic of the Medical University of Szczecin with a diagnosis of gastric ulcer. The study was conducted on the population of patients with gastric ulcer, who were admitted to the Gastroenterology Clinic of the Medical University of Szczecin between January and December 2014. The study included patients with gastric ulcer who were admitted to the Gastroenterology Clinic of the Medical University of Szczecin between January and December 2014. The study was conducted on the population of patients aged over 40 who were admitted to the Gastroenterology Clinic of the] Model Information Model Name: text_generator_biomedical_biogpt_base Compatibility: Healthcare NLP 4.3.2+ License: Licensed Edition: Official Language: en Size: 917.9 MB Case sensitive: true</summary></entry><entry><title type="html">Medical Text Generation (T5-based)</title><link href="/2023/04/03/text_generator_generic_flan_base_en.html" rel="alternate" type="text/html" title="Medical Text Generation (T5-based)" /><published>2023-04-03T00:00:00+00:00</published><updated>2023-04-03T00:00:00+00:00</updated><id>/2023/04/03/text_generator_generic_flan_base_en</id><content type="html" xml:base="/2023/04/03/text_generator_generic_flan_base_en.html">## Description

This model is a modified version of Flan-T5 (LLM) based text generation model, which is basically the same as official [Flan-T5-base model](https://huggingface.co/google/flan-t5-base) released by Google.  Given a few tokens as an intro, it can generate human-like, conceptually meaningful texts  up to 512 tokens given an input text (max 1024 tokens).

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/text_generator_generic_flan_base_en_4.3.2_3.0_1680522827259.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/text_generator_generic_flan_base_en_4.3.2_3.0_1680522827259.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}

```python

document_assembler = DocumentAssembler()\
    .setInputCol(&quot;prompt&quot;)\
    .setOutputCol(&quot;document_prompt&quot;)

med_text_generator  = MedicalTextGenerator.pretrained(&quot;text_generator_generic_flan_base&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols(&quot;document_prompt&quot;)\
    .setOutputCol(&quot;answer&quot;)\
    .setMaxNewTokens(256)\
    .setDoSample(True)\
    .setTopK(3)\
    .setRandomSeed(42)

pipeline = Pipeline(stages=[document_assembler, med_text_generator])

data = spark.createDataFrame([[&quot;the patient is admitted to the clinic with a severe back pain and &quot;]]).toDF(&quot;prompt&quot;)

pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;prompt&quot;)
    .setOutputCol(&quot;document_prompt&quot;)

val med_text_generator  = MedicalTextGenerator.pretrained(&quot;text_generator_generic_flan_base&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(&quot;document_prompt&quot;)
    .setOutputCol(&quot;answer&quot;)
    .setMaxNewTokens(256)
    .setDoSample(true)
    .setTopK(3)
    .setRandomSeed(42)

val pipeline = new Pipeline().setStages(Array(document_assembler, med_text_generator))

val data = Seq(Array(&quot;the patient is admitted to the clinic with a severe back pain and &quot;)).toDS.toDF(&quot;prompt&quot;)

val result = pipeline.fit(data).transform(data)

```
&lt;/div&gt;

## Results

```bash

['the patient is admitted to the clinic with a severe back pain and a severe left - sided leg pain. The patient was diagnosed with a lumbar disc herniation and underwent a discectomy. The patient was discharged on the third postoperative day. The patient was followed up for a period of 6 months and was found to be asymptomatic. A rare case of a giant cell tumor of the sacrum. Giant cell tumors ( GCTs ) are benign, locally aggressive tumors that are most commonly found in the long bones of the extremities. They are rarely found in the spine. We report a case of a GCT of the sacrum in a young female patient. The patient presented with a history of progressive lower back pain and a palpable mass in the left buttock. The patient underwent a left hemilaminectomy and biopsy. The histopathological examination revealed a GCT. The patient was treated with a combination of surgery and radiation therapy. The patient was followed up for 2 years and no recurrence was observed. A rare case of a giant cell tumor of the sacrum. Giant cell tumors ( GCTs ) are benign, locally aggressive tumors that are most commonly found in the long bones of the extremities. They are rarely found in the spine. We report a case of a GCT']

```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|text_generator_generic_flan_base|
|Compatibility:|Healthcare NLP 4.3.2+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|920.9 MB|</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="clinical" /><category term="text_generation" /><category term="tensorflow" /><summary type="html">Description This model is a modified version of Flan-T5 (LLM) based text generation model, which is basically the same as official Flan-T5-base model released by Google.  Given a few tokens as an intro, it can generate human-like, conceptually meaningful texts  up to 512 tokens given an input text (max 1024 tokens). Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;prompt&quot;)\ .setOutputCol(&quot;document_prompt&quot;) med_text_generator = MedicalTextGenerator.pretrained(&quot;text_generator_generic_flan_base&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols(&quot;document_prompt&quot;)\ .setOutputCol(&quot;answer&quot;)\ .setMaxNewTokens(256)\ .setDoSample(True)\ .setTopK(3)\ .setRandomSeed(42) pipeline = Pipeline(stages=[document_assembler, med_text_generator]) data = spark.createDataFrame([[&quot;the patient is admitted to the clinic with a severe back pain and &quot;]]).toDF(&quot;prompt&quot;) pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;prompt&quot;) .setOutputCol(&quot;document_prompt&quot;) val med_text_generator = MedicalTextGenerator.pretrained(&quot;text_generator_generic_flan_base&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(&quot;document_prompt&quot;) .setOutputCol(&quot;answer&quot;) .setMaxNewTokens(256) .setDoSample(true) .setTopK(3) .setRandomSeed(42) val pipeline = new Pipeline().setStages(Array(document_assembler, med_text_generator)) val data = Seq(Array(&quot;the patient is admitted to the clinic with a severe back pain and &quot;)).toDS.toDF(&quot;prompt&quot;) val result = pipeline.fit(data).transform(data) Results ['the patient is admitted to the clinic with a severe back pain and a severe left - sided leg pain. The patient was diagnosed with a lumbar disc herniation and underwent a discectomy. The patient was discharged on the third postoperative day. The patient was followed up for a period of 6 months and was found to be asymptomatic. A rare case of a giant cell tumor of the sacrum. Giant cell tumors ( GCTs ) are benign, locally aggressive tumors that are most commonly found in the long bones of the extremities. They are rarely found in the spine. We report a case of a GCT of the sacrum in a young female patient. The patient presented with a history of progressive lower back pain and a palpable mass in the left buttock. The patient underwent a left hemilaminectomy and biopsy. The histopathological examination revealed a GCT. The patient was treated with a combination of surgery and radiation therapy. The patient was followed up for 2 years and no recurrence was observed. A rare case of a giant cell tumor of the sacrum. Giant cell tumors ( GCTs ) are benign, locally aggressive tumors that are most commonly found in the long bones of the extremities. They are rarely found in the spine. We report a case of a GCT'] Model Information Model Name: text_generator_generic_flan_base Compatibility: Healthcare NLP 4.3.2+ License: Licensed Edition: Official Language: en Size: 920.9 MB</summary></entry></feed>