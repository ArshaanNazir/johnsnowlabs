<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2023-04-13T10:35:47+00:00</updated><id>/feed.xml</id><title type="html">Spark NLP</title><subtitle>High Performance NLP with Apache Spark
</subtitle><author><name>{&quot;type&quot;=&gt;nil, &quot;name&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;avatar&quot;=&gt;nil, &quot;bio&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;facebook&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil, &quot;weibo&quot;=&gt;nil, &quot;googleplus&quot;=&gt;nil, &quot;telegram&quot;=&gt;nil, &quot;medium&quot;=&gt;nil, &quot;zhihu&quot;=&gt;nil, &quot;douban&quot;=&gt;nil, &quot;linkedin&quot;=&gt;nil, &quot;github&quot;=&gt;nil, &quot;npm&quot;=&gt;nil}</name></author><entry><title type="html">Clinical QA BioGPT (JSL)</title><link href="/2023/04/12/biogpt_chat_jsl_en.html" rel="alternate" type="text/html" title="Clinical QA BioGPT (JSL)" /><published>2023-04-12T00:00:00+00:00</published><updated>2023-04-12T00:00:00+00:00</updated><id>/2023/04/12/biogpt_chat_jsl_en</id><content type="html" xml:base="/2023/04/12/biogpt_chat_jsl_en.html">## Description

This model is based on BioGPT finetuned with medical conversations happening in a clinical settings and can answer clinical questions related to symptoms, drugs, tests, and diseases.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/biogpt_chat_jsl_en_4.3.2_3.0_1681319163583.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/biogpt_chat_jsl_en_4.3.2_3.0_1681319163583.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

document_assembler = DocumentAssembler() \
    .setInputCol(&quot;text&quot;) \
    .setOutputCol(&quot;documents&quot;)
    
gpt_qa = MedicalTextGenerator.pretrained(&quot;biogpt_chat_jsl&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols(&quot;documents&quot;)\
    .setOutputCol(&quot;answer&quot;)
    
pipeline = Pipeline().setStages([document_assembler, gpt_qa])

data = spark.createDataFrame([[&quot;How to treat asthma ?&quot;]]).toDF(&quot;text&quot;)

pipeline.fit(data).transform(data)

```
```scala

val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val summarizer  = MedicalTextGenerator.pretrained(&quot;biogpt_chat_jsl&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(&quot;documents&quot;)
    .setOutputCol(&quot;answer&quot;)

val pipeline = new Pipeline().setStages(Array(document_assembler, summarizer))

val text = &quot;How to treat asthma ?&quot;

val data = Seq(Array(text)).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)

```
&lt;/div&gt;

## Results

```bash

['Asthma is itself an allergic disease due to cold or dust or pollen or grass etc. irrespective of the triggering factor. You can go for pulmonary function tests if not done. Treatment is mainly symptomatic which might require inhalation steroids, beta agonists, anticholinergics as MDI or rota haler as a regular treatment. To decrease the inflammation of bronchi and bronchioles, you might be given oral antihistamines with mast cell stabilizers (montelukast) and steroids (prednisolone) with nebulization and frequently steam inhalation. To decrease the bronchoconstriction caused by allergens, you might be given oral antihistamines with mast cell stabilizers (montelukast) and steroids (prednisolone) with nebulization and frequently steam inhalation. The best way to cure any allergy is a complete avoidance of allergen or triggering factor. Consult your pulmonologist for further advise.']

```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|biogpt_chat_jsl|
|Compatibility:|Healthcare NLP 4.3.2+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|1.4 GB|
|Case sensitive:|true|</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="clinical" /><category term="text_generation" /><category term="biogpt" /><category term="tensorflow" /><summary type="html">Description This model is based on BioGPT finetuned with medical conversations happening in a clinical settings and can answer clinical questions related to symptoms, drugs, tests, and diseases. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler() \ .setInputCol(&quot;text&quot;) \ .setOutputCol(&quot;documents&quot;) gpt_qa = MedicalTextGenerator.pretrained(&quot;biogpt_chat_jsl&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols(&quot;documents&quot;)\ .setOutputCol(&quot;answer&quot;) pipeline = Pipeline().setStages([document_assembler, gpt_qa]) data = spark.createDataFrame([[&quot;How to treat asthma ?&quot;]]).toDF(&quot;text&quot;) pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val summarizer = MedicalTextGenerator.pretrained(&quot;biogpt_chat_jsl&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(&quot;documents&quot;) .setOutputCol(&quot;answer&quot;) val pipeline = new Pipeline().setStages(Array(document_assembler, summarizer)) val text = &quot;How to treat asthma ?&quot; val data = Seq(Array(text)).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Results ['Asthma is itself an allergic disease due to cold or dust or pollen or grass etc. irrespective of the triggering factor. You can go for pulmonary function tests if not done. Treatment is mainly symptomatic which might require inhalation steroids, beta agonists, anticholinergics as MDI or rota haler as a regular treatment. To decrease the inflammation of bronchi and bronchioles, you might be given oral antihistamines with mast cell stabilizers (montelukast) and steroids (prednisolone) with nebulization and frequently steam inhalation. To decrease the bronchoconstriction caused by allergens, you might be given oral antihistamines with mast cell stabilizers (montelukast) and steroids (prednisolone) with nebulization and frequently steam inhalation. The best way to cure any allergy is a complete avoidance of allergen or triggering factor. Consult your pulmonologist for further advise.'] Model Information Model Name: biogpt_chat_jsl Compatibility: Healthcare NLP 4.3.2+ License: Licensed Edition: Official Language: en Size: 1.4 GB Case sensitive: true</summary></entry><entry><title type="html">Detect Clinical Entities (clinical_large)</title><link href="/2023/04/12/ner_jsl_emb_clinical_large_en.html" rel="alternate" type="text/html" title="Detect Clinical Entities (clinical_large)" /><published>2023-04-12T00:00:00+00:00</published><updated>2023-04-12T00:00:00+00:00</updated><id>/2023/04/12/ner_jsl_emb_clinical_large_en</id><content type="html" xml:base="/2023/04/12/ner_jsl_emb_clinical_large_en.html">## Description

Pretrained named entity recognition deep learning model for clinical terminology. The SparkNLP deep learning model (MedicalNerModel) is inspired by a former state-of-the-art model for NER: Chiu &amp; Nicols, Named Entity Recognition with Bidirectional LSTM-CNN. This model is the official version of jsl_ner_wip_clinical model.

Definitions of Predicted Entities: 

- `Injury_or_Poisoning`: Physical harm or injury caused to the body, including those caused by accidents, falls, or poisoning of a patient or someone else. 
- `Direction`: All the information relating to the laterality of the internal and external organs. 
- `Test`: Mentions of laboratory, pathology, and radiological tests. 
- `Admission_Discharge`: Terms that indicate the admission and/or the discharge of a patient. 
- `Death_Entity`: Mentions that indicate the death of a patient. 
- `Relationship_Status`: State of patients romantic or social relationships (e.g. single, married, divorced). 
- `Duration`: The duration of a medical treatment or medication use. 
- `Respiration`: Number of breaths per minute. 
- `Hyperlipidemia`: Terms that indicate hyperlipidemia with relevant subtypes and synonims.  
- `Birth_Entity`: Mentions that indicate giving birth. 
- `Age`: All mention of ages, past or present, related to the patient or with anybody else. 
- `Labour_Delivery`: Extractions include stages of labor and delivery. 
- `Family_History_Header`: identifies section headers that correspond to Family History of the patient. 
- `BMI`: Numeric values and other text information related to Body Mass Index. 
- `Temperature`: All mentions that refer to body temperature. 
- `Alcohol`: Terms that indicate alcohol use, abuse or drinking issues of a patient or someone else. 
- `Kidney_Disease`: Terms that refer to any kidney diseases (includes mentions of modifiers such as &quot;Acute&quot; or &quot;Chronic&quot;). 
- `Oncological`: All the cancer, tumor or metastasis related extractions mentioned in the document, of the patient or someone else. 
- `Medical_History_Header`: Identifies section headers that correspond to Past Medical History of a patient. 
- `Cerebrovascular_Disease`: All terms that refer to cerebrovascular diseases and events.  
- `Oxygen_Therapy`: Breathing support triggered by patient or entirely or partially by machine (e.g. ventilator, BPAP, CPAP). 
- `O2_Saturation`: Systemic arterial, venous or peripheral oxygen saturation measurements. 
- `Psychological_Condition`: All the Mental health diagnosis, disorders, conditions or syndromes of a patient or someone else. 
- `Heart_Disease`: All mentions of acquired, congenital or degenerative heart diseases. 
- `Employment`: All mentions of patient or provider occupational titles and employment status . 
- `Obesity`: Terms related to a patient being obese (overweight and BMI are extracted as different labels). 
- `Disease_Syndrome_Disorder`: All the diseases mentioned in the document, of the patient or someone else (excluding diseases that are extracted with their specific labels, such as &quot;Heart_Disease&quot; etc.). 
- `Pregnancy`: All terms related to Pregnancy (excluding terms that are extracted with their specific labels, such as &quot;Labour_Delivery&quot; etc.). 
- `ImagingFindings`: All mentions of radiographic and imagistic findings. 
- `Procedure`: All mentions of invasive medical or surgical procedures or treatments. 
- `Medical_Device`: All mentions related to medical devices and supplies. 
- `Race_Ethnicity`: All terms that refer to racial and national origin of sociocultural groups. 
- `Section_Header`: All the section headers present in the text  (Medical History, Family History, Social History, Physical Examination and Vital signs Headers are extracted separately with their specific labels). 
- `Symptom`: All the symptoms mentioned in the document, of a patient or someone else. 
- `Treatment`: Includes therapeutic and minimally invasive treatment and procedures (invasive treatments or procedures are extracted as &quot;Procedure&quot;). 
- `Substance`: All mentions of substance use related to the patient or someone else (recreational drugs, illicit drugs). 
- `Route`: Drug and medication administration routes available described by [FDA](http://wayback.archive-it.org/7993/20171115111313/https:/www.fda.gov/Drugs/DevelopmentApprovalProcess/FormsSubmissionRequirements/ElectronicSubmissions/DataStandardsManualmonographs/ucm071667.htm). 
- `Drug_Ingredient`: Active ingredient/s found in drug products. 
- `Blood_Pressure`: Systemic blood pressure, mean arterial pressure, systolic and/or diastolic are extracted. 
- `Diet`: All mentions and information regarding patients dietary habits. 
- `External_body_part_or_region`: All mentions related to external body parts or organs that can be examined by naked eye. 
- `LDL`: All mentions related to the lab test and results for LDL (Low Density Lipoprotein). 
- `VS_Finding`: Qualitative data (e.g. Fever, Cyanosis, Tachycardia) and any other symptoms that refers to vital signs. 
- `Allergen`: Allergen related extractions mentioned in the document. 
- `EKG_Findings`: All mentions of EKG readings. 
- `Imaging_Technique`: All mentions of special radiographic views or special imaging techniques used in radiology. 
- `Triglycerides`: All mentions terms related to specific lab test for Triglycerides. 
- `RelativeTime`: Time references that are relative to different times or events (e.g. words such as &quot;approximately&quot;, &quot;in the morning&quot;). 
- `Gender`: Gender-specific nouns and pronouns. 
- `Pulse`: Peripheral heart rate, without advanced information like measurement location. 
- `Social_History_Header`: Identifies section headers that correspond to Social History of a patient. 
- `Substance_Quantity`: All mentions of substance quantity (quantitative information related to illicit/recreational drugs). 
- `Diabetes`: All terms related to diabetes mellitus. 
- `Modifier`: Terms that modify the symptoms, diseases or risk factors. If a modifier is included in ICD-10 name of a specific disease, the respective modifier is not extracted separately. 
- `Internal_organ_or_component`: All mentions related to internal body parts or organs that can not be examined by naked eye. 
- `Clinical_Dept`: Terms that indicate the medical and/or surgical departments. 
- `Form`: Drug and medication forms available described by [FDA](http://wayback.archive-it.org/7993/20171115111313/https:/www.fda.gov/Drugs/DevelopmentApprovalProcess/FormsSubmissionRequirements/ElectronicSubmissions/DataStandardsManualmonographs/ucm071667.htm). 
- `Drug_BrandName`: Commercial labeling name chosen by the labeler or the drug manufacturer for a drug containing a single or multiple drug active ingredients. 
- `Strength`: Potency of one unit of drug (or a combination of drugs) the measurement units available are described by [FDA](http://wayback.archive-it.org/7993/20171115111313/https:/www.fda.gov/Drugs/DevelopmentApprovalProcess/FormsSubmissionRequirements/ElectronicSubmissions/DataStandardsManualmonographs/ucm071667.htm). 
- `Fetus_NewBorn`: All terms related to fetus, infant, new born (excluding terms that are extracted with their specific labels, such as &quot;Labour_Delivery&quot;, &quot;Pregnancy&quot; etc.). 
- `RelativeDate`: Temporal references that are relative to the date of the text or to any other specific date (e.g. &quot;approximately two years ago&quot;, &quot;about two days ago&quot;). 
- `Height`: All mentions related to a patients height. 
- `Test_Result`: Terms related to all the test results present in the document (clinical tests results are included). 
- `Sexually_Active_or_Sexual_Orientation`: All terms that are related to sexuality, sexual orientations and sexual activity. 
- `Frequency`: Frequency of administration for a dose prescribed. 
- `Time`: Specific time references (hour and/or minutes). 
- `Weight`: All mentions related to a patients weight. 
- `Vaccine`: Generic and brand name of vaccines or vaccination procedure. 
- `Vital_Signs_Header`: Identifies section headers that correspond to Vital Signs of a patient. 
- `Communicable_Disease`: Includes all mentions of communicable diseases. 
- `Dosage`: Quantity prescribed by the physician for an active ingredient; measurement units are available described by [FDA](http://wayback.archive-it.org/7993/20171115111313/https:/www.fda.gov/Drugs/DevelopmentApprovalProcess/FormsSubmissionRequirements/ElectronicSubmissions/DataStandardsManualmonographs/ucm071667.htm). 
- `Overweight`: Terms related to the patient being overweight (BMI and Obesity is extracted separately). 
- `Hypertension`: All terms related to Hypertension (quantitative data such as 150/100 is extracted as Blood_Pressure). 
- `HDL`: Terms related to the lab test for HDL (High Density Lipoprotein). 
- `Total_Cholesterol`: Terms related to the lab test and results for cholesterol. 
- `Smoking`: All mentions of smoking status of a patient. 
- `Date`: Mentions of an exact date, in any format, including day number, month and/or year.

## Predicted Entities

`Injury_or_Poisoning`, `Direction`, `Test`, `Admission_Discharge`, `Death_Entity`, `Relationship_Status`, `Duration`, `Respiration`, `Hyperlipidemia`, `Birth_Entity`, `Age`, `Labour_Delivery`, `Family_History_Header`, `BMI`, `Temperature`, `Alcohol`, `Kidney_Disease`, `Oncological`, `Medical_History_Header`, `Cerebrovascular_Disease`, `Oxygen_Therapy`, `O2_Saturation`, `Psychological_Condition`, `Heart_Disease`, `Employment`, `Obesity`, `Disease_Syndrome_Disorder`, `Pregnancy`, `ImagingFindings`, `Procedure`, `Medical_Device`, `Race_Ethnicity`, `Section_Header`, `Symptom`, `Treatment`, `Substance`, `Route`, `Drug_Ingredient`, `Blood_Pressure`, `Diet`, `External_body_part_or_region`, `LDL`, `VS_Finding`, `Allergen`, `EKG_Findings`, `Imaging_Technique`, `Triglycerides`, `RelativeTime`, `Gender`, `Pulse`, `Social_History_Header`, `Substance_Quantity`, `Diabetes`, `Modifier`, `Internal_organ_or_component`, `Clinical_Dept`, `Form`, `Drug_BrandName`, `Strength`, `Fetus_NewBorn`, `RelativeDate`, `Height`, `Test_Result`, `Sexually_Active_or_Sexual_Orientation`, `Frequency`, `Time`, `Weight`, `Vaccine`, `Vaccine_Name`, `Vital_Signs_Header`, `Communicable_Disease`, `Dosage`, `Overweight`, `Hypertension`, `HDL`, `Total_Cholesterol`, `Smoking`, `Date`

{:.btn-box}
[Live Demo](https://demo.johnsnowlabs.com/healthcare/NER_JSL/){:.button.button-orange}
[Open in Colab](https://colab.research.google.com/github/JohnSnowLabs/spark-nlp-workshop/blob/master/tutorials/Certification_Trainings/Healthcare/1.Clinical_Named_Entity_Recognition_Model.ipynb){:.button.button-orange.button-orange-trans.co.button-icon}
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_jsl_emb_clinical_large_en_4.3.2_3.0_1681313273872.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_jsl_emb_clinical_large_en_4.3.2_3.0_1681313273872.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python
documentAssembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) \
    .setInputCols([&quot;document&quot;])\
    .setOutputCol(&quot;sentence&quot;) 

tokenizer = Tokenizer()\
    .setInputCols([&quot;sentence&quot;])\
    .setOutputCol(&quot;token&quot;)

word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\
    .setOutputCol(&quot;embeddings&quot;)

ner = MedicalNerModel.pretrained(&quot;ner_jsl_emb_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;sentence&quot;,&quot;token&quot;,&quot;embeddings&quot;])\
    .setOutputCol(&quot;ner&quot;)
    
ner_converter = NerConverter()\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;])\
    .setOutputCol(&quot;ner_chunk&quot;)

ner_pipeline = Pipeline(stages=[
    documentAssembler, 
    sentenceDetector,
    tokenizer,
    word_embeddings,
    ner,
    ner_converter])


data = spark.createDataFrame([[&quot;&quot;&quot;The patient is a 21-day-old Caucasian male here for 2 days of congestion - mom has been suctioning yellow discharge from the patient's nares, plus she has noticed some mild problems with his breathing while feeding (but negative for any perioral cyanosis or retractions). Additionally, there is no side effect observed after Influenza vaccine. One day ago, mom also noticed a tactile temperature and gave the patient Tylenol. Baby also has had some decreased p.o. intake. His normal breast-feeding is down from 20 minutes q.2h. to 5 to 10 minutes secondary to his respiratory congestion. He sleeps well, but has been more tired and has been fussy over the past 2 days. The parents noticed no improvement with albuterol treatments given in the ER. His urine output has also decreased; normally he has 8 to 10 wet and 5 dirty diapers per 24 hours, now he has down to 4 wet diapers per 24 hours. Mom denies any diarrhea. His bowel movements are yellow colored and soft in nature.
&quot;&quot;&quot;]]).toDF(&quot;text&quot;)

result = ner_pipeline.fit(data).transform(data)
```
```scala
val documentAssembler = new DocumentAssembler()
        .setInputCol(&quot;text&quot;)
        .setOutputCol(&quot;document&quot;)

val sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
        .setInputCols(&quot;document&quot;) 
        .setOutputCol(&quot;sentence&quot;)

val tokenizer = new Tokenizer()
        .setInputCols(&quot;sentence&quot;)
        .setOutputCol(&quot;token&quot;)

val embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
        .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))
        .setOutputCol(&quot;embeddings&quot;)

val jsl_ner = MedicalNerModel.pretrained(&quot;ner_jsl_emb_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
        .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;))
        .setOutputCol(&quot;ner&quot;)

val jsl_ner_converter = new NerConverter()
        .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;))
        .setOutputCol(&quot;ner_chunk&quot;)

val jsl_ner_pipeline = new Pipeline().setStages(Array(
            documentAssembler, 
            sentenceDetector, 
            tokenizer, 
            embeddings, 
            jsl_ner, 
            jsl_ner_converter))


val data = Seq(&quot;&quot;&quot;The patient is a 21-day-old Caucasian male here for 2 days of congestion - mom has been suctioning yellow discharge from the patient's nares, plus she has noticed some mild problems with his breathing while feeding (but negative for any perioral cyanosis or retractions). Additionally, there is no side effect observed after Influenza vaccine. One day ago, mom also noticed a tactile temperature and gave the patient Tylenol. Baby also has had some decreased p.o. intake. His normal breast-feeding is down from 20 minutes q.2h. to 5 to 10 minutes secondary to his respiratory congestion. He sleeps well, but has been more tired and has been fussy over the past 2 days. The parents noticed no improvement with albuterol treatments given in the ER. His urine output has also decreased; normally he has 8 to 10 wet and 5 dirty diapers per 24 hours, now he has down to 4 wet diapers per 24 hours. Mom denies any diarrhea. His bowel movements are yellow colored and soft in nature.&quot;&quot;&quot;).toDS.toDF(&quot;text&quot;)

val result = jsl_ner_pipeline.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
+-----------------------------------------+-----+---+----------------------------+
|chunk                                    |begin|end|ner_label                   |
+-----------------------------------------+-----+---+----------------------------+
|21-day-old                               |17   |26 |Age                         |
|Caucasian                                |28   |36 |Race_Ethnicity              |
|male                                     |38   |41 |Gender                      |
|for 2 days                               |48   |57 |Duration                    |
|congestion                               |62   |71 |Symptom                     |
|mom                                      |75   |77 |Gender                      |
|suctioning                               |88   |97 |Modifier                    |
|yellow                                   |99   |104|Modifier                    |
|discharge                                |106  |114|Symptom                     |
|nares                                    |135  |139|External_body_part_or_region|
|she                                      |147  |149|Gender                      |
|mild                                     |168  |171|Modifier                    |
|problems with his breathing while feeding|173  |213|Symptom                     |
|perioral cyanosis                        |237  |253|Symptom                     |
|retractions                              |258  |268|Symptom                     |
|Influenza vaccine                        |325  |341|Vaccine_Name                |
|One day ago                              |344  |354|RelativeDate                |
|mom                                      |357  |359|Gender                      |
|tactile temperature                      |376  |394|Symptom                     |
|Tylenol                                  |417  |423|Drug_BrandName              |
+-----------------------------------------+-----+---+----------------------------+
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_jsl_emb_clinical_large|
|Compatibility:|Healthcare NLP 4.3.2+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[sentence, token, word_embeddings]|
|Output Labels:|[ner]|
|Language:|en|
|Size:|1.2 MB|

## Benchmarking

```bash
                                label  precision    recall  f1-score   support
          Internal_organ_or_component       0.88      0.90      0.89     10419
                  Injury_or_Poisoning       0.90      0.78      0.83       945
                             Diabetes       0.99      0.97      0.98       146
                      Drug_Ingredient       0.92      0.92      0.92      1988
                            Frequency       0.91      0.91      0.91      1110
                               Height       0.97      0.88      0.92        81
            Disease_Syndrome_Disorder       0.83      0.90      0.86      4909
                             Strength       0.96      0.90      0.93       848
                                 Form       0.85      0.79      0.82       261
                              Symptom       0.87      0.80      0.83     11966
                                Route       0.91      0.92      0.91       976
                            Procedure       0.88      0.88      0.88      6395
                               Gender       0.99      0.99      0.99      5686
                         RelativeTime       0.82      0.68      0.75       367
                              Vaccine       0.50      0.14      0.22        14
              Psychological_Condition       0.89      0.70      0.78       186
                            Direction       0.89      0.92      0.90      4447
         External_body_part_or_region       0.88      0.84      0.86      3246
                       Section_Header       0.98      0.96      0.97      9564
                                  Age       0.90      0.92      0.91       750
                             Modifier       0.85      0.76      0.81      3027
                        Heart_Disease       0.97      0.82      0.89       849
                       Drug_BrandName       0.92      0.93      0.92      1011
                       Hyperlipidemia       0.93      0.84      0.88        31
                                 Test       0.89      0.83      0.86      4337
                          Oncological       0.93      0.94      0.94       781
                      Labour_Delivery       0.78      0.68      0.73       158
                        Clinical_Dept       0.94      0.91      0.93      1714
                            Treatment       0.84      0.78      0.81       347
                       Oxygen_Therapy       0.81      0.80      0.81       120
                             Duration       0.81      0.87      0.84       927
                  Admission_Discharge       0.94      0.94      0.94       343
                         RelativeDate       0.91      0.86      0.89      1403
                         Hypertension       0.87      0.97      0.91       122
                           Employment       0.90      0.76      0.83       369
                               Dosage       0.87      0.84      0.85       461
                       Medical_Device       0.88      0.92      0.90      5499
                          Test_Result       0.85      0.78      0.81      1321
                                 Time       0.73      0.65      0.69        34
                                 Date       0.97      0.94      0.95       591
                              Obesity       0.88      1.00      0.94        45
                       Race_Ethnicity       0.99      0.99      0.99       120
                    Imaging_Technique       0.75      0.42      0.54        91
                      ImagingFindings       0.69      0.40      0.50       291
              Cerebrovascular_Disease       0.85      0.65      0.74       133
                                 Diet       0.78      0.52      0.62       114
                        Fetus_NewBorn       0.75      0.53      0.62       180
                       Kidney_Disease       0.95      0.94      0.94       168
                               Weight       0.90      0.91      0.91       243
                       Blood_Pressure       0.84      0.84      0.84       336
                                Pulse       0.83      0.96      0.89       311
                          Temperature       0.88      0.96      0.92       182
                        O2_Saturation       0.90      0.64      0.75        95
                           VS_Finding       0.72      0.74      0.73       311
                         Death_Entity       0.79      0.66      0.72        50
                    Total_Cholesterol       0.72      0.87      0.79        30
                            Substance       0.94      0.89      0.92       103
                  Relationship_Status       0.93      0.81      0.87        48
                              Alcohol       0.92      0.87      0.90        84
                   Vital_Signs_Header       0.93      0.99      0.96       656
                          Respiration       0.94      0.95      0.95       156
                Family_History_Header       0.97      0.99      0.98       224
                            Pregnancy       0.82      0.69      0.75       203
                              Smoking       0.98      0.98      0.98       109
                         Vaccine_Name       0.89      0.55      0.68        31
                         EKG_Findings       0.64      0.27      0.38       154
                             Allergen       0.60      0.75      0.67        12
               Medical_History_Header       0.95      0.96      0.95       411
                Social_History_Header       0.91      0.97      0.94       213
                           Overweight       0.83      0.83      0.83         6
                 Communicable_Disease       0.73      0.51      0.60        47
                         Birth_Entity       0.00      0.00      0.00         6
                        Triglycerides       1.00      1.00      1.00         4
                                  HDL       0.62      1.00      0.77         5
                                  LDL       1.00      1.00      1.00         5
                                  BMI       1.00      1.00      1.00        17
Sexually_Active_or_Sexual_Orientation       1.00      0.57      0.73         7
                            micro-avg       0.90      0.88      0.89     92950
                            macro-avg       0.86      0.81      0.83     92950
                         weighted-avg       0.90      0.88      0.89     92950
```</content><author><name>John Snow Labs</name></author><category term="ner" /><category term="clinical_large" /><category term="en" /><category term="licensed" /><summary type="html">Description Pretrained named entity recognition deep learning model for clinical terminology. The SparkNLP deep learning model (MedicalNerModel) is inspired by a former state-of-the-art model for NER: Chiu &amp;amp; Nicols, Named Entity Recognition with Bidirectional LSTM-CNN. This model is the official version of jsl_ner_wip_clinical model. Definitions of Predicted Entities: Injury_or_Poisoning: Physical harm or injury caused to the body, including those caused by accidents, falls, or poisoning of a patient or someone else. Direction: All the information relating to the laterality of the internal and external organs. Test: Mentions of laboratory, pathology, and radiological tests. Admission_Discharge: Terms that indicate the admission and/or the discharge of a patient. Death_Entity: Mentions that indicate the death of a patient. Relationship_Status: State of patients romantic or social relationships (e.g. single, married, divorced). Duration: The duration of a medical treatment or medication use. Respiration: Number of breaths per minute. Hyperlipidemia: Terms that indicate hyperlipidemia with relevant subtypes and synonims. Birth_Entity: Mentions that indicate giving birth. Age: All mention of ages, past or present, related to the patient or with anybody else. Labour_Delivery: Extractions include stages of labor and delivery. Family_History_Header: identifies section headers that correspond to Family History of the patient. BMI: Numeric values and other text information related to Body Mass Index. Temperature: All mentions that refer to body temperature. Alcohol: Terms that indicate alcohol use, abuse or drinking issues of a patient or someone else. Kidney_Disease: Terms that refer to any kidney diseases (includes mentions of modifiers such as “Acute” or “Chronic”). Oncological: All the cancer, tumor or metastasis related extractions mentioned in the document, of the patient or someone else. Medical_History_Header: Identifies section headers that correspond to Past Medical History of a patient. Cerebrovascular_Disease: All terms that refer to cerebrovascular diseases and events. Oxygen_Therapy: Breathing support triggered by patient or entirely or partially by machine (e.g. ventilator, BPAP, CPAP). O2_Saturation: Systemic arterial, venous or peripheral oxygen saturation measurements. Psychological_Condition: All the Mental health diagnosis, disorders, conditions or syndromes of a patient or someone else. Heart_Disease: All mentions of acquired, congenital or degenerative heart diseases. Employment: All mentions of patient or provider occupational titles and employment status . Obesity: Terms related to a patient being obese (overweight and BMI are extracted as different labels). Disease_Syndrome_Disorder: All the diseases mentioned in the document, of the patient or someone else (excluding diseases that are extracted with their specific labels, such as “Heart_Disease” etc.). Pregnancy: All terms related to Pregnancy (excluding terms that are extracted with their specific labels, such as “Labour_Delivery” etc.). ImagingFindings: All mentions of radiographic and imagistic findings. Procedure: All mentions of invasive medical or surgical procedures or treatments. Medical_Device: All mentions related to medical devices and supplies. Race_Ethnicity: All terms that refer to racial and national origin of sociocultural groups. Section_Header: All the section headers present in the text (Medical History, Family History, Social History, Physical Examination and Vital signs Headers are extracted separately with their specific labels). Symptom: All the symptoms mentioned in the document, of a patient or someone else. Treatment: Includes therapeutic and minimally invasive treatment and procedures (invasive treatments or procedures are extracted as “Procedure”). Substance: All mentions of substance use related to the patient or someone else (recreational drugs, illicit drugs). Route: Drug and medication administration routes available described by FDA. Drug_Ingredient: Active ingredient/s found in drug products. Blood_Pressure: Systemic blood pressure, mean arterial pressure, systolic and/or diastolic are extracted. Diet: All mentions and information regarding patients dietary habits. External_body_part_or_region: All mentions related to external body parts or organs that can be examined by naked eye. LDL: All mentions related to the lab test and results for LDL (Low Density Lipoprotein). VS_Finding: Qualitative data (e.g. Fever, Cyanosis, Tachycardia) and any other symptoms that refers to vital signs. Allergen: Allergen related extractions mentioned in the document. EKG_Findings: All mentions of EKG readings. Imaging_Technique: All mentions of special radiographic views or special imaging techniques used in radiology. Triglycerides: All mentions terms related to specific lab test for Triglycerides. RelativeTime: Time references that are relative to different times or events (e.g. words such as “approximately”, “in the morning”). Gender: Gender-specific nouns and pronouns. Pulse: Peripheral heart rate, without advanced information like measurement location. Social_History_Header: Identifies section headers that correspond to Social History of a patient. Substance_Quantity: All mentions of substance quantity (quantitative information related to illicit/recreational drugs). Diabetes: All terms related to diabetes mellitus. Modifier: Terms that modify the symptoms, diseases or risk factors. If a modifier is included in ICD-10 name of a specific disease, the respective modifier is not extracted separately. Internal_organ_or_component: All mentions related to internal body parts or organs that can not be examined by naked eye. Clinical_Dept: Terms that indicate the medical and/or surgical departments. Form: Drug and medication forms available described by FDA. Drug_BrandName: Commercial labeling name chosen by the labeler or the drug manufacturer for a drug containing a single or multiple drug active ingredients. Strength: Potency of one unit of drug (or a combination of drugs) the measurement units available are described by FDA. Fetus_NewBorn: All terms related to fetus, infant, new born (excluding terms that are extracted with their specific labels, such as “Labour_Delivery”, “Pregnancy” etc.). RelativeDate: Temporal references that are relative to the date of the text or to any other specific date (e.g. “approximately two years ago”, “about two days ago”). Height: All mentions related to a patients height. Test_Result: Terms related to all the test results present in the document (clinical tests results are included). Sexually_Active_or_Sexual_Orientation: All terms that are related to sexuality, sexual orientations and sexual activity. Frequency: Frequency of administration for a dose prescribed. Time: Specific time references (hour and/or minutes). Weight: All mentions related to a patients weight. Vaccine: Generic and brand name of vaccines or vaccination procedure. Vital_Signs_Header: Identifies section headers that correspond to Vital Signs of a patient. Communicable_Disease: Includes all mentions of communicable diseases. Dosage: Quantity prescribed by the physician for an active ingredient; measurement units are available described by FDA. Overweight: Terms related to the patient being overweight (BMI and Obesity is extracted separately). Hypertension: All terms related to Hypertension (quantitative data such as 150/100 is extracted as Blood_Pressure). HDL: Terms related to the lab test for HDL (High Density Lipoprotein). Total_Cholesterol: Terms related to the lab test and results for cholesterol. Smoking: All mentions of smoking status of a patient. Date: Mentions of an exact date, in any format, including day number, month and/or year. Predicted Entities Injury_or_Poisoning, Direction, Test, Admission_Discharge, Death_Entity, Relationship_Status, Duration, Respiration, Hyperlipidemia, Birth_Entity, Age, Labour_Delivery, Family_History_Header, BMI, Temperature, Alcohol, Kidney_Disease, Oncological, Medical_History_Header, Cerebrovascular_Disease, Oxygen_Therapy, O2_Saturation, Psychological_Condition, Heart_Disease, Employment, Obesity, Disease_Syndrome_Disorder, Pregnancy, ImagingFindings, Procedure, Medical_Device, Race_Ethnicity, Section_Header, Symptom, Treatment, Substance, Route, Drug_Ingredient, Blood_Pressure, Diet, External_body_part_or_region, LDL, VS_Finding, Allergen, EKG_Findings, Imaging_Technique, Triglycerides, RelativeTime, Gender, Pulse, Social_History_Header, Substance_Quantity, Diabetes, Modifier, Internal_organ_or_component, Clinical_Dept, Form, Drug_BrandName, Strength, Fetus_NewBorn, RelativeDate, Height, Test_Result, Sexually_Active_or_Sexual_Orientation, Frequency, Time, Weight, Vaccine, Vaccine_Name, Vital_Signs_Header, Communicable_Disease, Dosage, Overweight, Hypertension, HDL, Total_Cholesterol, Smoking, Date Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU documentAssembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) \ .setInputCols([&quot;document&quot;])\ .setOutputCol(&quot;sentence&quot;) tokenizer = Tokenizer()\ .setInputCols([&quot;sentence&quot;])\ .setOutputCol(&quot;token&quot;) word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\ .setOutputCol(&quot;embeddings&quot;) ner = MedicalNerModel.pretrained(&quot;ner_jsl_emb_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;,&quot;token&quot;,&quot;embeddings&quot;])\ .setOutputCol(&quot;ner&quot;) ner_converter = NerConverter()\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;])\ .setOutputCol(&quot;ner_chunk&quot;) ner_pipeline = Pipeline(stages=[ documentAssembler, sentenceDetector, tokenizer, word_embeddings, ner, ner_converter]) data = spark.createDataFrame([[&quot;&quot;&quot;The patient is a 21-day-old Caucasian male here for 2 days of congestion - mom has been suctioning yellow discharge from the patient's nares, plus she has noticed some mild problems with his breathing while feeding (but negative for any perioral cyanosis or retractions). Additionally, there is no side effect observed after Influenza vaccine. One day ago, mom also noticed a tactile temperature and gave the patient Tylenol. Baby also has had some decreased p.o. intake. His normal breast-feeding is down from 20 minutes q.2h. to 5 to 10 minutes secondary to his respiratory congestion. He sleeps well, but has been more tired and has been fussy over the past 2 days. The parents noticed no improvement with albuterol treatments given in the ER. His urine output has also decreased; normally he has 8 to 10 wet and 5 dirty diapers per 24 hours, now he has down to 4 wet diapers per 24 hours. Mom denies any diarrhea. His bowel movements are yellow colored and soft in nature. &quot;&quot;&quot;]]).toDF(&quot;text&quot;) result = ner_pipeline.fit(data).transform(data) val documentAssembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols(&quot;document&quot;) .setOutputCol(&quot;sentence&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;sentence&quot;) .setOutputCol(&quot;token&quot;) val embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;)) .setOutputCol(&quot;embeddings&quot;) val jsl_ner = MedicalNerModel.pretrained(&quot;ner_jsl_emb_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;)) .setOutputCol(&quot;ner&quot;) val jsl_ner_converter = new NerConverter() .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;)) .setOutputCol(&quot;ner_chunk&quot;) val jsl_ner_pipeline = new Pipeline().setStages(Array( documentAssembler, sentenceDetector, tokenizer, embeddings, jsl_ner, jsl_ner_converter)) val data = Seq(&quot;&quot;&quot;The patient is a 21-day-old Caucasian male here for 2 days of congestion - mom has been suctioning yellow discharge from the patient's nares, plus she has noticed some mild problems with his breathing while feeding (but negative for any perioral cyanosis or retractions). Additionally, there is no side effect observed after Influenza vaccine. One day ago, mom also noticed a tactile temperature and gave the patient Tylenol. Baby also has had some decreased p.o. intake. His normal breast-feeding is down from 20 minutes q.2h. to 5 to 10 minutes secondary to his respiratory congestion. He sleeps well, but has been more tired and has been fussy over the past 2 days. The parents noticed no improvement with albuterol treatments given in the ER. His urine output has also decreased; normally he has 8 to 10 wet and 5 dirty diapers per 24 hours, now he has down to 4 wet diapers per 24 hours. Mom denies any diarrhea. His bowel movements are yellow colored and soft in nature.&quot;&quot;&quot;).toDS.toDF(&quot;text&quot;) val result = jsl_ner_pipeline.fit(data).transform(data) Results +-----------------------------------------+-----+---+----------------------------+ |chunk |begin|end|ner_label | +-----------------------------------------+-----+---+----------------------------+ |21-day-old |17 |26 |Age | |Caucasian |28 |36 |Race_Ethnicity | |male |38 |41 |Gender | |for 2 days |48 |57 |Duration | |congestion |62 |71 |Symptom | |mom |75 |77 |Gender | |suctioning |88 |97 |Modifier | |yellow |99 |104|Modifier | |discharge |106 |114|Symptom | |nares |135 |139|External_body_part_or_region| |she |147 |149|Gender | |mild |168 |171|Modifier | |problems with his breathing while feeding|173 |213|Symptom | |perioral cyanosis |237 |253|Symptom | |retractions |258 |268|Symptom | |Influenza vaccine |325 |341|Vaccine_Name | |One day ago |344 |354|RelativeDate | |mom |357 |359|Gender | |tactile temperature |376 |394|Symptom | |Tylenol |417 |423|Drug_BrandName | +-----------------------------------------+-----+---+----------------------------+ Model Information Model Name: ner_jsl_emb_clinical_large Compatibility: Healthcare NLP 4.3.2+ License: Licensed Edition: Official Input Labels: [sentence, token, word_embeddings] Output Labels: [ner] Language: en Size: 1.2 MB Benchmarking label precision recall f1-score support Internal_organ_or_component 0.88 0.90 0.89 10419 Injury_or_Poisoning 0.90 0.78 0.83 945 Diabetes 0.99 0.97 0.98 146 Drug_Ingredient 0.92 0.92 0.92 1988 Frequency 0.91 0.91 0.91 1110 Height 0.97 0.88 0.92 81 Disease_Syndrome_Disorder 0.83 0.90 0.86 4909 Strength 0.96 0.90 0.93 848 Form 0.85 0.79 0.82 261 Symptom 0.87 0.80 0.83 11966 Route 0.91 0.92 0.91 976 Procedure 0.88 0.88 0.88 6395 Gender 0.99 0.99 0.99 5686 RelativeTime 0.82 0.68 0.75 367 Vaccine 0.50 0.14 0.22 14 Psychological_Condition 0.89 0.70 0.78 186 Direction 0.89 0.92 0.90 4447 External_body_part_or_region 0.88 0.84 0.86 3246 Section_Header 0.98 0.96 0.97 9564 Age 0.90 0.92 0.91 750 Modifier 0.85 0.76 0.81 3027 Heart_Disease 0.97 0.82 0.89 849 Drug_BrandName 0.92 0.93 0.92 1011 Hyperlipidemia 0.93 0.84 0.88 31 Test 0.89 0.83 0.86 4337 Oncological 0.93 0.94 0.94 781 Labour_Delivery 0.78 0.68 0.73 158 Clinical_Dept 0.94 0.91 0.93 1714 Treatment 0.84 0.78 0.81 347 Oxygen_Therapy 0.81 0.80 0.81 120 Duration 0.81 0.87 0.84 927 Admission_Discharge 0.94 0.94 0.94 343 RelativeDate 0.91 0.86 0.89 1403 Hypertension 0.87 0.97 0.91 122 Employment 0.90 0.76 0.83 369 Dosage 0.87 0.84 0.85 461 Medical_Device 0.88 0.92 0.90 5499 Test_Result 0.85 0.78 0.81 1321 Time 0.73 0.65 0.69 34 Date 0.97 0.94 0.95 591 Obesity 0.88 1.00 0.94 45 Race_Ethnicity 0.99 0.99 0.99 120 Imaging_Technique 0.75 0.42 0.54 91 ImagingFindings 0.69 0.40 0.50 291 Cerebrovascular_Disease 0.85 0.65 0.74 133 Diet 0.78 0.52 0.62 114 Fetus_NewBorn 0.75 0.53 0.62 180 Kidney_Disease 0.95 0.94 0.94 168 Weight 0.90 0.91 0.91 243 Blood_Pressure 0.84 0.84 0.84 336 Pulse 0.83 0.96 0.89 311 Temperature 0.88 0.96 0.92 182 O2_Saturation 0.90 0.64 0.75 95 VS_Finding 0.72 0.74 0.73 311 Death_Entity 0.79 0.66 0.72 50 Total_Cholesterol 0.72 0.87 0.79 30 Substance 0.94 0.89 0.92 103 Relationship_Status 0.93 0.81 0.87 48 Alcohol 0.92 0.87 0.90 84 Vital_Signs_Header 0.93 0.99 0.96 656 Respiration 0.94 0.95 0.95 156 Family_History_Header 0.97 0.99 0.98 224 Pregnancy 0.82 0.69 0.75 203 Smoking 0.98 0.98 0.98 109 Vaccine_Name 0.89 0.55 0.68 31 EKG_Findings 0.64 0.27 0.38 154 Allergen 0.60 0.75 0.67 12 Medical_History_Header 0.95 0.96 0.95 411 Social_History_Header 0.91 0.97 0.94 213 Overweight 0.83 0.83 0.83 6 Communicable_Disease 0.73 0.51 0.60 47 Birth_Entity 0.00 0.00 0.00 6 Triglycerides 1.00 1.00 1.00 4 HDL 0.62 1.00 0.77 5 LDL 1.00 1.00 1.00 5 BMI 1.00 1.00 1.00 17 Sexually_Active_or_Sexual_Orientation 1.00 0.57 0.73 7 micro-avg 0.90 0.88 0.89 92950 macro-avg 0.86 0.81 0.83 92950 weighted-avg 0.90 0.88 0.89 92950</summary></entry><entry><title type="html">Detect Clinical Entities (clinical_medium)</title><link href="/2023/04/12/ner_jsl_emb_clinical_medium_en.html" rel="alternate" type="text/html" title="Detect Clinical Entities (clinical_medium)" /><published>2023-04-12T00:00:00+00:00</published><updated>2023-04-12T00:00:00+00:00</updated><id>/2023/04/12/ner_jsl_emb_clinical_medium_en</id><content type="html" xml:base="/2023/04/12/ner_jsl_emb_clinical_medium_en.html">## Description

Pretrained named entity recognition deep learning model for clinical terminology. The SparkNLP deep learning model (MedicalNerModel) is inspired by a former state-of-the-art model for NER: Chiu &amp; Nicols, Named Entity Recognition with Bidirectional LSTM-CNN. This model is the official version of jsl_ner_wip_clinical model.

Definitions of Predicted Entities: 

- `Injury_or_Poisoning`: Physical harm or injury caused to the body, including those caused by accidents, falls, or poisoning of a patient or someone else. 
- `Direction`: All the information relating to the laterality of the internal and external organs. 
- `Test`: Mentions of laboratory, pathology, and radiological tests. 
- `Admission_Discharge`: Terms that indicate the admission and/or the discharge of a patient. 
- `Death_Entity`: Mentions that indicate the death of a patient. 
- `Relationship_Status`: State of patients romantic or social relationships (e.g. single, married, divorced). 
- `Duration`: The duration of a medical treatment or medication use. 
- `Respiration`: Number of breaths per minute. 
- `Hyperlipidemia`: Terms that indicate hyperlipidemia with relevant subtypes and synonims.  
- `Birth_Entity`: Mentions that indicate giving birth. 
- `Age`: All mention of ages, past or present, related to the patient or with anybody else. 
- `Labour_Delivery`: Extractions include stages of labor and delivery. 
- `Family_History_Header`: identifies section headers that correspond to Family History of the patient. 
- `BMI`: Numeric values and other text information related to Body Mass Index. 
- `Temperature`: All mentions that refer to body temperature. 
- `Alcohol`: Terms that indicate alcohol use, abuse or drinking issues of a patient or someone else. 
- `Kidney_Disease`: Terms that refer to any kidney diseases (includes mentions of modifiers such as &quot;Acute&quot; or &quot;Chronic&quot;). 
- `Oncological`: All the cancer, tumor or metastasis related extractions mentioned in the document, of the patient or someone else. 
- `Medical_History_Header`: Identifies section headers that correspond to Past Medical History of a patient. 
- `Cerebrovascular_Disease`: All terms that refer to cerebrovascular diseases and events.  
- `Oxygen_Therapy`: Breathing support triggered by patient or entirely or partially by machine (e.g. ventilator, BPAP, CPAP). 
- `O2_Saturation`: Systemic arterial, venous or peripheral oxygen saturation measurements. 
- `Psychological_Condition`: All the Mental health diagnosis, disorders, conditions or syndromes of a patient or someone else. 
- `Heart_Disease`: All mentions of acquired, congenital or degenerative heart diseases. 
- `Employment`: All mentions of patient or provider occupational titles and employment status . 
- `Obesity`: Terms related to a patient being obese (overweight and BMI are extracted as different labels). 
- `Disease_Syndrome_Disorder`: All the diseases mentioned in the document, of the patient or someone else (excluding diseases that are extracted with their specific labels, such as &quot;Heart_Disease&quot; etc.). 
- `Pregnancy`: All terms related to Pregnancy (excluding terms that are extracted with their specific labels, such as &quot;Labour_Delivery&quot; etc.). 
- `ImagingFindings`: All mentions of radiographic and imagistic findings. 
- `Procedure`: All mentions of invasive medical or surgical procedures or treatments. 
- `Medical_Device`: All mentions related to medical devices and supplies. 
- `Race_Ethnicity`: All terms that refer to racial and national origin of sociocultural groups. 
- `Section_Header`: All the section headers present in the text  (Medical History, Family History, Social History, Physical Examination and Vital signs Headers are extracted separately with their specific labels). 
- `Symptom`: All the symptoms mentioned in the document, of a patient or someone else. 
- `Treatment`: Includes therapeutic and minimally invasive treatment and procedures (invasive treatments or procedures are extracted as &quot;Procedure&quot;). 
- `Substance`: All mentions of substance use related to the patient or someone else (recreational drugs, illicit drugs). 
- `Route`: Drug and medication administration routes available described by [FDA](http://wayback.archive-it.org/7993/20171115111313/https:/www.fda.gov/Drugs/DevelopmentApprovalProcess/FormsSubmissionRequirements/ElectronicSubmissions/DataStandardsManualmonographs/ucm071667.htm). 
- `Drug_Ingredient`: Active ingredient/s found in drug products. 
- `Blood_Pressure`: Systemic blood pressure, mean arterial pressure, systolic and/or diastolic are extracted. 
- `Diet`: All mentions and information regarding patients dietary habits. 
- `External_body_part_or_region`: All mentions related to external body parts or organs that can be examined by naked eye. 
- `LDL`: All mentions related to the lab test and results for LDL (Low Density Lipoprotein). 
- `VS_Finding`: Qualitative data (e.g. Fever, Cyanosis, Tachycardia) and any other symptoms that refers to vital signs. 
- `Allergen`: Allergen related extractions mentioned in the document. 
- `EKG_Findings`: All mentions of EKG readings. 
- `Imaging_Technique`: All mentions of special radiographic views or special imaging techniques used in radiology. 
- `Triglycerides`: All mentions terms related to specific lab test for Triglycerides. 
- `RelativeTime`: Time references that are relative to different times or events (e.g. words such as &quot;approximately&quot;, &quot;in the morning&quot;). 
- `Gender`: Gender-specific nouns and pronouns. 
- `Pulse`: Peripheral heart rate, without advanced information like measurement location. 
- `Social_History_Header`: Identifies section headers that correspond to Social History of a patient. 
- `Substance_Quantity`: All mentions of substance quantity (quantitative information related to illicit/recreational drugs). 
- `Diabetes`: All terms related to diabetes mellitus. 
- `Modifier`: Terms that modify the symptoms, diseases or risk factors. If a modifier is included in ICD-10 name of a specific disease, the respective modifier is not extracted separately. 
- `Internal_organ_or_component`: All mentions related to internal body parts or organs that can not be examined by naked eye. 
- `Clinical_Dept`: Terms that indicate the medical and/or surgical departments. 
- `Form`: Drug and medication forms available described by [FDA](http://wayback.archive-it.org/7993/20171115111313/https:/www.fda.gov/Drugs/DevelopmentApprovalProcess/FormsSubmissionRequirements/ElectronicSubmissions/DataStandardsManualmonographs/ucm071667.htm). 
- `Drug_BrandName`: Commercial labeling name chosen by the labeler or the drug manufacturer for a drug containing a single or multiple drug active ingredients. 
- `Strength`: Potency of one unit of drug (or a combination of drugs) the measurement units available are described by [FDA](http://wayback.archive-it.org/7993/20171115111313/https:/www.fda.gov/Drugs/DevelopmentApprovalProcess/FormsSubmissionRequirements/ElectronicSubmissions/DataStandardsManualmonographs/ucm071667.htm). 
- `Fetus_NewBorn`: All terms related to fetus, infant, new born (excluding terms that are extracted with their specific labels, such as &quot;Labour_Delivery&quot;, &quot;Pregnancy&quot; etc.). 
- `RelativeDate`: Temporal references that are relative to the date of the text or to any other specific date (e.g. &quot;approximately two years ago&quot;, &quot;about two days ago&quot;). 
- `Height`: All mentions related to a patients height. 
- `Test_Result`: Terms related to all the test results present in the document (clinical tests results are included). 
- `Sexually_Active_or_Sexual_Orientation`: All terms that are related to sexuality, sexual orientations and sexual activity. 
- `Frequency`: Frequency of administration for a dose prescribed. 
- `Time`: Specific time references (hour and/or minutes). 
- `Weight`: All mentions related to a patients weight. 
- `Vaccine`: Generic and brand name of vaccines or vaccination procedure. 
- `Vital_Signs_Header`: Identifies section headers that correspond to Vital Signs of a patient. 
- `Communicable_Disease`: Includes all mentions of communicable diseases. 
- `Dosage`: Quantity prescribed by the physician for an active ingredient; measurement units are available described by [FDA](http://wayback.archive-it.org/7993/20171115111313/https:/www.fda.gov/Drugs/DevelopmentApprovalProcess/FormsSubmissionRequirements/ElectronicSubmissions/DataStandardsManualmonographs/ucm071667.htm). 
- `Overweight`: Terms related to the patient being overweight (BMI and Obesity is extracted separately). 
- `Hypertension`: All terms related to Hypertension (quantitative data such as 150/100 is extracted as Blood_Pressure). 
- `HDL`: Terms related to the lab test for HDL (High Density Lipoprotein). 
- `Total_Cholesterol`: Terms related to the lab test and results for cholesterol. 
- `Smoking`: All mentions of smoking status of a patient. 
- `Date`: Mentions of an exact date, in any format, including day number, month and/or year.

## Predicted Entities

`Injury_or_Poisoning`, `Direction`, `Test`, `Admission_Discharge`, `Death_Entity`, `Relationship_Status`, `Duration`, `Respiration`, `Hyperlipidemia`, `Birth_Entity`, `Age`, `Labour_Delivery`, `Family_History_Header`, `BMI`, `Temperature`, `Alcohol`, `Kidney_Disease`, `Oncological`, `Medical_History_Header`, `Cerebrovascular_Disease`, `Oxygen_Therapy`, `O2_Saturation`, `Psychological_Condition`, `Heart_Disease`, `Employment`, `Obesity`, `Disease_Syndrome_Disorder`, `Pregnancy`, `ImagingFindings`, `Procedure`, `Medical_Device`, `Race_Ethnicity`, `Section_Header`, `Symptom`, `Treatment`, `Substance`, `Route`, `Drug_Ingredient`, `Blood_Pressure`, `Diet`, `External_body_part_or_region`, `LDL`, `VS_Finding`, `Allergen`, `EKG_Findings`, `Imaging_Technique`, `Triglycerides`, `RelativeTime`, `Gender`, `Pulse`, `Social_History_Header`, `Substance_Quantity`, `Diabetes`, `Modifier`, `Internal_organ_or_component`, `Clinical_Dept`, `Form`, `Drug_BrandName`, `Strength`, `Fetus_NewBorn`, `RelativeDate`, `Height`, `Test_Result`, `Sexually_Active_or_Sexual_Orientation`, `Frequency`, `Time`, `Weight`, `Vaccine`, `Vaccine_Name`, `Vital_Signs_Header`, `Communicable_Disease`, `Dosage`, `Overweight`, `Hypertension`, `HDL`, `Total_Cholesterol`, `Smoking`, `Date`

{:.btn-box}
[Live Demo](https://demo.johnsnowlabs.com/healthcare/NER_JSL/){:.button.button-orange}
[Open in Colab](https://colab.research.google.com/github/JohnSnowLabs/spark-nlp-workshop/blob/master/tutorials/Certification_Trainings/Healthcare/1.Clinical_Named_Entity_Recognition_Model.ipynb){:.button.button-orange.button-orange-trans.co.button-icon}
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_jsl_emb_clinical_medium_en_4.3.2_3.0_1681306334405.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_jsl_emb_clinical_medium_en_4.3.2_3.0_1681306334405.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python
documentAssembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) \
    .setInputCols([&quot;document&quot;])\
    .setOutputCol(&quot;sentence&quot;) 

tokenizer = Tokenizer()\
    .setInputCols([&quot;sentence&quot;])\
    .setOutputCol(&quot;token&quot;)

word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\
    .setOutputCol(&quot;embeddings&quot;)

ner = MedicalNerModel.pretrained(&quot;ner_jsl_emb_clinical_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;sentence&quot;,&quot;token&quot;,&quot;embeddings&quot;])\
    .setOutputCol(&quot;ner&quot;)
    
ner_converter = NerConverter()\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;])\
    .setOutputCol(&quot;ner_chunk&quot;)

ner_pipeline = Pipeline(stages=[
    documentAssembler, 
    sentenceDetector,
    tokenizer,
    word_embeddings,
    ner,
    ner_converter])


data = spark.createDataFrame([[&quot;&quot;&quot;The patient is a 21-day-old Caucasian male here for 2 days of congestion - mom has been suctioning yellow discharge from the patient's nares, plus she has noticed some mild problems with his breathing while feeding (but negative for any perioral cyanosis or retractions). Additionally, there is no side effect observed after Influenza vaccine. One day ago, mom also noticed a tactile temperature and gave the patient Tylenol. Baby also has had some decreased p.o. intake. His normal breast-feeding is down from 20 minutes q.2h. to 5 to 10 minutes secondary to his respiratory congestion. He sleeps well, but has been more tired and has been fussy over the past 2 days. The parents noticed no improvement with albuterol treatments given in the ER. His urine output has also decreased; normally he has 8 to 10 wet and 5 dirty diapers per 24 hours, now he has down to 4 wet diapers per 24 hours. Mom denies any diarrhea. His bowel movements are yellow colored and soft in nature.
&quot;&quot;&quot;]]).toDF(&quot;text&quot;)

result = ner_pipeline.fit(data).transform(data)
```
```scala
val documentAssembler = new DocumentAssembler()
        .setInputCol(&quot;text&quot;)
        .setOutputCol(&quot;document&quot;)

val sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
        .setInputCols(&quot;document&quot;) 
        .setOutputCol(&quot;sentence&quot;)

val tokenizer = new Tokenizer()
        .setInputCols(&quot;sentence&quot;)
        .setOutputCol(&quot;token&quot;)

val embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
        .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))
        .setOutputCol(&quot;embeddings&quot;)

val jsl_ner = MedicalNerModel.pretrained(&quot;ner_jsl_emb_clinical_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
        .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;))
        .setOutputCol(&quot;ner&quot;)

val jsl_ner_converter = new NerConverter()
        .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;))
        .setOutputCol(&quot;ner_chunk&quot;)

val jsl_ner_pipeline = new Pipeline().setStages(Array(
            documentAssembler, 
            sentenceDetector, 
            tokenizer, 
            embeddings, 
            jsl_ner, 
            jsl_ner_converter))


val data = Seq(&quot;&quot;&quot;The patient is a 21-day-old Caucasian male here for 2 days of congestion - mom has been suctioning yellow discharge from the patient's nares, plus she has noticed some mild problems with his breathing while feeding (but negative for any perioral cyanosis or retractions). Additionally, there is no side effect observed after Influenza vaccine. One day ago, mom also noticed a tactile temperature and gave the patient Tylenol. Baby also has had some decreased p.o. intake. His normal breast-feeding is down from 20 minutes q.2h. to 5 to 10 minutes secondary to his respiratory congestion. He sleeps well, but has been more tired and has been fussy over the past 2 days. The parents noticed no improvement with albuterol treatments given in the ER. His urine output has also decreased; normally he has 8 to 10 wet and 5 dirty diapers per 24 hours, now he has down to 4 wet diapers per 24 hours. Mom denies any diarrhea. His bowel movements are yellow colored and soft in nature.&quot;&quot;&quot;).toDS.toDF(&quot;text&quot;)

val result = jsl_ner_pipeline.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
+-----------------------------------------+-----+---+----------------------------+
|chunk                                    |begin|end|ner_label                   |
+-----------------------------------------+-----+---+----------------------------+
|21-day-old                               |17   |26 |Age                         |
|Caucasian                                |28   |36 |Race_Ethnicity              |
|male                                     |38   |41 |Gender                      |
|2 days                                   |52   |57 |Duration                    |
|congestion                               |62   |71 |Symptom                     |
|mom                                      |75   |77 |Gender                      |
|suctioning yellow discharge              |88   |114|Symptom                     |
|nares                                    |135  |139|External_body_part_or_region|
|she                                      |147  |149|Gender                      |
|mild                                     |168  |171|Modifier                    |
|problems with his breathing while feeding|173  |213|Symptom                     |
|perioral cyanosis                        |237  |253|Symptom                     |
|retractions                              |258  |268|Symptom                     |
|Influenza vaccine                        |325  |341|Vaccine_Name                |
|One day ago                              |344  |354|RelativeDate                |
|mom                                      |357  |359|Gender                      |
|tactile temperature                      |376  |394|Symptom                     |
|Tylenol                                  |417  |423|Drug_BrandName              |
|Baby                                     |426  |429|Age                         |
|decreased p.o                            |449  |461|Symptom                     |
+-----------------------------------------+-----+---+----------------------------+
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_jsl_emb_clinical_medium|
|Compatibility:|Healthcare NLP 4.3.2+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[sentence, token, embeddings]|
|Output Labels:|[ner]|
|Language:|en|
|Size:|15.2 MB|

## Benchmarking

```bash
                                label  precision    recall  f1-score   support
                      Drug_Ingredient       0.91      0.94      0.93      1905
            Disease_Syndrome_Disorder       0.85      0.89      0.87      4949
                       Drug_BrandName       0.94      0.92      0.93       963
                             Strength       0.95      0.93      0.94       759
                                Route       0.90      0.94      0.92       943
          Internal_organ_or_component       0.89      0.90      0.89     10310
                               Dosage       0.95      0.78      0.86       478
                            Frequency       0.90      0.87      0.88      1016
                            Treatment       0.90      0.70      0.78       332
                            Procedure       0.85      0.91      0.88      6433
                               Gender       0.98      0.99      0.99      5586
                         RelativeTime       0.79      0.70      0.74       306
                            Direction       0.91      0.90      0.91      4344
                             Modifier       0.84      0.82      0.83      2863
                              Symptom       0.84      0.83      0.84     11599
                                 Date       0.94      0.98      0.96       546
         External_body_part_or_region       0.89      0.85      0.87      3270
                       Section_Header       0.98      0.97      0.98      9320
                                  Age       0.85      0.92      0.88       757
                            Substance       0.91      0.85      0.88       113
                           VS_Finding       0.86      0.60      0.70       304
                       Medical_Device       0.87      0.93      0.90      5475
                       Oxygen_Therapy       0.89      0.85      0.87       117
                                 Test       0.87      0.87      0.87      4491
                             Diabetes       0.95      0.97      0.96       149
                             Duration       0.86      0.86      0.86      1009
                      ImagingFindings       0.83      0.50      0.63       353
                       Hyperlipidemia       0.80      0.87      0.84        47
                         Hypertension       0.97      0.94      0.96       152
                         RelativeDate       0.90      0.89      0.89      1338
                        Clinical_Dept       0.92      0.94      0.93      1771
                       Kidney_Disease       0.90      0.96      0.93       228
                        Heart_Disease       0.93      0.85      0.89       967
                                 Diet       0.67      0.62      0.65       106
                               Weight       0.93      0.93      0.93       254
                          Test_Result       0.79      0.81      0.80      1470
                                 Form       0.85      0.85      0.85       254
                                 Time       0.80      0.72      0.76        76
              Psychological_Condition       0.81      0.76      0.79       187
                  Injury_or_Poisoning       0.84      0.80      0.82       889
                  Admission_Discharge       0.91      0.97      0.94       301
                      Labour_Delivery       0.74      0.73      0.73       110
                           Employment       0.90      0.73      0.81       389
                              Vaccine       0.83      0.33      0.48        15
                              Obesity       0.92      0.91      0.92        54
                          Oncological       0.92      0.93      0.93       784
                              Smoking       0.96      0.94      0.95       106
                    Imaging_Technique       0.70      0.53      0.60        98
                       Blood_Pressure       0.86      0.87      0.86       314
                                Pulse       0.87      0.92      0.89       278
                          Respiration       0.96      0.94      0.95       180
                        O2_Saturation       0.86      0.77      0.81        96
               Medical_History_Header       0.93      0.99      0.96       396
                    Total_Cholesterol       0.88      0.37      0.52        19
              Cerebrovascular_Disease       0.75      0.78      0.76       108
                            Pregnancy       0.90      0.71      0.79       201
                         Death_Entity       0.85      0.76      0.80        46
                         EKG_Findings       0.78      0.43      0.56       186
                       Race_Ethnicity       0.97      0.99      0.98       118
                Family_History_Header       0.97      0.99      0.98       273
                              Alcohol       0.84      0.95      0.89        84
                        Fetus_NewBorn       0.75      0.54      0.63       235
                   Vital_Signs_Header       0.96      0.94      0.95       710
                  Relationship_Status       0.93      0.95      0.94        41
                               Height       0.98      0.85      0.91        68
                          Temperature       0.91      0.96      0.94       141
                        Triglycerides       0.40      0.40      0.40        10
                                  LDL       0.94      0.68      0.79        22
                Social_History_Header       0.98      0.97      0.98       259
                 Communicable_Disease       0.79      0.62      0.70        50
                           Overweight       0.86      0.86      0.86         7
                             Allergen       0.00      0.00      0.00        23
                   Substance_Quantity       0.33      1.00      0.50         2
                         Vaccine_Name       0.68      1.00      0.81        15
                         Birth_Entity       0.00      0.00      0.00         3
                                  BMI       1.00      0.67      0.80        15
Sexually_Active_or_Sexual_Orientation       1.00      0.80      0.89         5
                                  HDL       1.00      1.00      1.00         2
                            micro-avg       0.89      0.89      0.89     92193
                            macro-avg       0.85      0.81      0.82     92193
                         weighted-avg       0.89      0.89      0.89     92193
```</content><author><name>John Snow Labs</name></author><category term="ner" /><category term="licensed" /><category term="clinical" /><category term="en" /><category term="clinical_medium" /><summary type="html">Description Pretrained named entity recognition deep learning model for clinical terminology. The SparkNLP deep learning model (MedicalNerModel) is inspired by a former state-of-the-art model for NER: Chiu &amp;amp; Nicols, Named Entity Recognition with Bidirectional LSTM-CNN. This model is the official version of jsl_ner_wip_clinical model. Definitions of Predicted Entities: Injury_or_Poisoning: Physical harm or injury caused to the body, including those caused by accidents, falls, or poisoning of a patient or someone else. Direction: All the information relating to the laterality of the internal and external organs. Test: Mentions of laboratory, pathology, and radiological tests. Admission_Discharge: Terms that indicate the admission and/or the discharge of a patient. Death_Entity: Mentions that indicate the death of a patient. Relationship_Status: State of patients romantic or social relationships (e.g. single, married, divorced). Duration: The duration of a medical treatment or medication use. Respiration: Number of breaths per minute. Hyperlipidemia: Terms that indicate hyperlipidemia with relevant subtypes and synonims. Birth_Entity: Mentions that indicate giving birth. Age: All mention of ages, past or present, related to the patient or with anybody else. Labour_Delivery: Extractions include stages of labor and delivery. Family_History_Header: identifies section headers that correspond to Family History of the patient. BMI: Numeric values and other text information related to Body Mass Index. Temperature: All mentions that refer to body temperature. Alcohol: Terms that indicate alcohol use, abuse or drinking issues of a patient or someone else. Kidney_Disease: Terms that refer to any kidney diseases (includes mentions of modifiers such as “Acute” or “Chronic”). Oncological: All the cancer, tumor or metastasis related extractions mentioned in the document, of the patient or someone else. Medical_History_Header: Identifies section headers that correspond to Past Medical History of a patient. Cerebrovascular_Disease: All terms that refer to cerebrovascular diseases and events. Oxygen_Therapy: Breathing support triggered by patient or entirely or partially by machine (e.g. ventilator, BPAP, CPAP). O2_Saturation: Systemic arterial, venous or peripheral oxygen saturation measurements. Psychological_Condition: All the Mental health diagnosis, disorders, conditions or syndromes of a patient or someone else. Heart_Disease: All mentions of acquired, congenital or degenerative heart diseases. Employment: All mentions of patient or provider occupational titles and employment status . Obesity: Terms related to a patient being obese (overweight and BMI are extracted as different labels). Disease_Syndrome_Disorder: All the diseases mentioned in the document, of the patient or someone else (excluding diseases that are extracted with their specific labels, such as “Heart_Disease” etc.). Pregnancy: All terms related to Pregnancy (excluding terms that are extracted with their specific labels, such as “Labour_Delivery” etc.). ImagingFindings: All mentions of radiographic and imagistic findings. Procedure: All mentions of invasive medical or surgical procedures or treatments. Medical_Device: All mentions related to medical devices and supplies. Race_Ethnicity: All terms that refer to racial and national origin of sociocultural groups. Section_Header: All the section headers present in the text (Medical History, Family History, Social History, Physical Examination and Vital signs Headers are extracted separately with their specific labels). Symptom: All the symptoms mentioned in the document, of a patient or someone else. Treatment: Includes therapeutic and minimally invasive treatment and procedures (invasive treatments or procedures are extracted as “Procedure”). Substance: All mentions of substance use related to the patient or someone else (recreational drugs, illicit drugs). Route: Drug and medication administration routes available described by FDA. Drug_Ingredient: Active ingredient/s found in drug products. Blood_Pressure: Systemic blood pressure, mean arterial pressure, systolic and/or diastolic are extracted. Diet: All mentions and information regarding patients dietary habits. External_body_part_or_region: All mentions related to external body parts or organs that can be examined by naked eye. LDL: All mentions related to the lab test and results for LDL (Low Density Lipoprotein). VS_Finding: Qualitative data (e.g. Fever, Cyanosis, Tachycardia) and any other symptoms that refers to vital signs. Allergen: Allergen related extractions mentioned in the document. EKG_Findings: All mentions of EKG readings. Imaging_Technique: All mentions of special radiographic views or special imaging techniques used in radiology. Triglycerides: All mentions terms related to specific lab test for Triglycerides. RelativeTime: Time references that are relative to different times or events (e.g. words such as “approximately”, “in the morning”). Gender: Gender-specific nouns and pronouns. Pulse: Peripheral heart rate, without advanced information like measurement location. Social_History_Header: Identifies section headers that correspond to Social History of a patient. Substance_Quantity: All mentions of substance quantity (quantitative information related to illicit/recreational drugs). Diabetes: All terms related to diabetes mellitus. Modifier: Terms that modify the symptoms, diseases or risk factors. If a modifier is included in ICD-10 name of a specific disease, the respective modifier is not extracted separately. Internal_organ_or_component: All mentions related to internal body parts or organs that can not be examined by naked eye. Clinical_Dept: Terms that indicate the medical and/or surgical departments. Form: Drug and medication forms available described by FDA. Drug_BrandName: Commercial labeling name chosen by the labeler or the drug manufacturer for a drug containing a single or multiple drug active ingredients. Strength: Potency of one unit of drug (or a combination of drugs) the measurement units available are described by FDA. Fetus_NewBorn: All terms related to fetus, infant, new born (excluding terms that are extracted with their specific labels, such as “Labour_Delivery”, “Pregnancy” etc.). RelativeDate: Temporal references that are relative to the date of the text or to any other specific date (e.g. “approximately two years ago”, “about two days ago”). Height: All mentions related to a patients height. Test_Result: Terms related to all the test results present in the document (clinical tests results are included). Sexually_Active_or_Sexual_Orientation: All terms that are related to sexuality, sexual orientations and sexual activity. Frequency: Frequency of administration for a dose prescribed. Time: Specific time references (hour and/or minutes). Weight: All mentions related to a patients weight. Vaccine: Generic and brand name of vaccines or vaccination procedure. Vital_Signs_Header: Identifies section headers that correspond to Vital Signs of a patient. Communicable_Disease: Includes all mentions of communicable diseases. Dosage: Quantity prescribed by the physician for an active ingredient; measurement units are available described by FDA. Overweight: Terms related to the patient being overweight (BMI and Obesity is extracted separately). Hypertension: All terms related to Hypertension (quantitative data such as 150/100 is extracted as Blood_Pressure). HDL: Terms related to the lab test for HDL (High Density Lipoprotein). Total_Cholesterol: Terms related to the lab test and results for cholesterol. Smoking: All mentions of smoking status of a patient. Date: Mentions of an exact date, in any format, including day number, month and/or year. Predicted Entities Injury_or_Poisoning, Direction, Test, Admission_Discharge, Death_Entity, Relationship_Status, Duration, Respiration, Hyperlipidemia, Birth_Entity, Age, Labour_Delivery, Family_History_Header, BMI, Temperature, Alcohol, Kidney_Disease, Oncological, Medical_History_Header, Cerebrovascular_Disease, Oxygen_Therapy, O2_Saturation, Psychological_Condition, Heart_Disease, Employment, Obesity, Disease_Syndrome_Disorder, Pregnancy, ImagingFindings, Procedure, Medical_Device, Race_Ethnicity, Section_Header, Symptom, Treatment, Substance, Route, Drug_Ingredient, Blood_Pressure, Diet, External_body_part_or_region, LDL, VS_Finding, Allergen, EKG_Findings, Imaging_Technique, Triglycerides, RelativeTime, Gender, Pulse, Social_History_Header, Substance_Quantity, Diabetes, Modifier, Internal_organ_or_component, Clinical_Dept, Form, Drug_BrandName, Strength, Fetus_NewBorn, RelativeDate, Height, Test_Result, Sexually_Active_or_Sexual_Orientation, Frequency, Time, Weight, Vaccine, Vaccine_Name, Vital_Signs_Header, Communicable_Disease, Dosage, Overweight, Hypertension, HDL, Total_Cholesterol, Smoking, Date Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU documentAssembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) \ .setInputCols([&quot;document&quot;])\ .setOutputCol(&quot;sentence&quot;) tokenizer = Tokenizer()\ .setInputCols([&quot;sentence&quot;])\ .setOutputCol(&quot;token&quot;) word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\ .setOutputCol(&quot;embeddings&quot;) ner = MedicalNerModel.pretrained(&quot;ner_jsl_emb_clinical_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;,&quot;token&quot;,&quot;embeddings&quot;])\ .setOutputCol(&quot;ner&quot;) ner_converter = NerConverter()\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;])\ .setOutputCol(&quot;ner_chunk&quot;) ner_pipeline = Pipeline(stages=[ documentAssembler, sentenceDetector, tokenizer, word_embeddings, ner, ner_converter]) data = spark.createDataFrame([[&quot;&quot;&quot;The patient is a 21-day-old Caucasian male here for 2 days of congestion - mom has been suctioning yellow discharge from the patient's nares, plus she has noticed some mild problems with his breathing while feeding (but negative for any perioral cyanosis or retractions). Additionally, there is no side effect observed after Influenza vaccine. One day ago, mom also noticed a tactile temperature and gave the patient Tylenol. Baby also has had some decreased p.o. intake. His normal breast-feeding is down from 20 minutes q.2h. to 5 to 10 minutes secondary to his respiratory congestion. He sleeps well, but has been more tired and has been fussy over the past 2 days. The parents noticed no improvement with albuterol treatments given in the ER. His urine output has also decreased; normally he has 8 to 10 wet and 5 dirty diapers per 24 hours, now he has down to 4 wet diapers per 24 hours. Mom denies any diarrhea. His bowel movements are yellow colored and soft in nature. &quot;&quot;&quot;]]).toDF(&quot;text&quot;) result = ner_pipeline.fit(data).transform(data) val documentAssembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols(&quot;document&quot;) .setOutputCol(&quot;sentence&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;sentence&quot;) .setOutputCol(&quot;token&quot;) val embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;)) .setOutputCol(&quot;embeddings&quot;) val jsl_ner = MedicalNerModel.pretrained(&quot;ner_jsl_emb_clinical_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;)) .setOutputCol(&quot;ner&quot;) val jsl_ner_converter = new NerConverter() .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;)) .setOutputCol(&quot;ner_chunk&quot;) val jsl_ner_pipeline = new Pipeline().setStages(Array( documentAssembler, sentenceDetector, tokenizer, embeddings, jsl_ner, jsl_ner_converter)) val data = Seq(&quot;&quot;&quot;The patient is a 21-day-old Caucasian male here for 2 days of congestion - mom has been suctioning yellow discharge from the patient's nares, plus she has noticed some mild problems with his breathing while feeding (but negative for any perioral cyanosis or retractions). Additionally, there is no side effect observed after Influenza vaccine. One day ago, mom also noticed a tactile temperature and gave the patient Tylenol. Baby also has had some decreased p.o. intake. His normal breast-feeding is down from 20 minutes q.2h. to 5 to 10 minutes secondary to his respiratory congestion. He sleeps well, but has been more tired and has been fussy over the past 2 days. The parents noticed no improvement with albuterol treatments given in the ER. His urine output has also decreased; normally he has 8 to 10 wet and 5 dirty diapers per 24 hours, now he has down to 4 wet diapers per 24 hours. Mom denies any diarrhea. His bowel movements are yellow colored and soft in nature.&quot;&quot;&quot;).toDS.toDF(&quot;text&quot;) val result = jsl_ner_pipeline.fit(data).transform(data) Results +-----------------------------------------+-----+---+----------------------------+ |chunk |begin|end|ner_label | +-----------------------------------------+-----+---+----------------------------+ |21-day-old |17 |26 |Age | |Caucasian |28 |36 |Race_Ethnicity | |male |38 |41 |Gender | |2 days |52 |57 |Duration | |congestion |62 |71 |Symptom | |mom |75 |77 |Gender | |suctioning yellow discharge |88 |114|Symptom | |nares |135 |139|External_body_part_or_region| |she |147 |149|Gender | |mild |168 |171|Modifier | |problems with his breathing while feeding|173 |213|Symptom | |perioral cyanosis |237 |253|Symptom | |retractions |258 |268|Symptom | |Influenza vaccine |325 |341|Vaccine_Name | |One day ago |344 |354|RelativeDate | |mom |357 |359|Gender | |tactile temperature |376 |394|Symptom | |Tylenol |417 |423|Drug_BrandName | |Baby |426 |429|Age | |decreased p.o |449 |461|Symptom | +-----------------------------------------+-----+---+----------------------------+ Model Information Model Name: ner_jsl_emb_clinical_medium Compatibility: Healthcare NLP 4.3.2+ License: Licensed Edition: Official Input Labels: [sentence, token, embeddings] Output Labels: [ner] Language: en Size: 15.2 MB Benchmarking label precision recall f1-score support Drug_Ingredient 0.91 0.94 0.93 1905 Disease_Syndrome_Disorder 0.85 0.89 0.87 4949 Drug_BrandName 0.94 0.92 0.93 963 Strength 0.95 0.93 0.94 759 Route 0.90 0.94 0.92 943 Internal_organ_or_component 0.89 0.90 0.89 10310 Dosage 0.95 0.78 0.86 478 Frequency 0.90 0.87 0.88 1016 Treatment 0.90 0.70 0.78 332 Procedure 0.85 0.91 0.88 6433 Gender 0.98 0.99 0.99 5586 RelativeTime 0.79 0.70 0.74 306 Direction 0.91 0.90 0.91 4344 Modifier 0.84 0.82 0.83 2863 Symptom 0.84 0.83 0.84 11599 Date 0.94 0.98 0.96 546 External_body_part_or_region 0.89 0.85 0.87 3270 Section_Header 0.98 0.97 0.98 9320 Age 0.85 0.92 0.88 757 Substance 0.91 0.85 0.88 113 VS_Finding 0.86 0.60 0.70 304 Medical_Device 0.87 0.93 0.90 5475 Oxygen_Therapy 0.89 0.85 0.87 117 Test 0.87 0.87 0.87 4491 Diabetes 0.95 0.97 0.96 149 Duration 0.86 0.86 0.86 1009 ImagingFindings 0.83 0.50 0.63 353 Hyperlipidemia 0.80 0.87 0.84 47 Hypertension 0.97 0.94 0.96 152 RelativeDate 0.90 0.89 0.89 1338 Clinical_Dept 0.92 0.94 0.93 1771 Kidney_Disease 0.90 0.96 0.93 228 Heart_Disease 0.93 0.85 0.89 967 Diet 0.67 0.62 0.65 106 Weight 0.93 0.93 0.93 254 Test_Result 0.79 0.81 0.80 1470 Form 0.85 0.85 0.85 254 Time 0.80 0.72 0.76 76 Psychological_Condition 0.81 0.76 0.79 187 Injury_or_Poisoning 0.84 0.80 0.82 889 Admission_Discharge 0.91 0.97 0.94 301 Labour_Delivery 0.74 0.73 0.73 110 Employment 0.90 0.73 0.81 389 Vaccine 0.83 0.33 0.48 15 Obesity 0.92 0.91 0.92 54 Oncological 0.92 0.93 0.93 784 Smoking 0.96 0.94 0.95 106 Imaging_Technique 0.70 0.53 0.60 98 Blood_Pressure 0.86 0.87 0.86 314 Pulse 0.87 0.92 0.89 278 Respiration 0.96 0.94 0.95 180 O2_Saturation 0.86 0.77 0.81 96 Medical_History_Header 0.93 0.99 0.96 396 Total_Cholesterol 0.88 0.37 0.52 19 Cerebrovascular_Disease 0.75 0.78 0.76 108 Pregnancy 0.90 0.71 0.79 201 Death_Entity 0.85 0.76 0.80 46 EKG_Findings 0.78 0.43 0.56 186 Race_Ethnicity 0.97 0.99 0.98 118 Family_History_Header 0.97 0.99 0.98 273 Alcohol 0.84 0.95 0.89 84 Fetus_NewBorn 0.75 0.54 0.63 235 Vital_Signs_Header 0.96 0.94 0.95 710 Relationship_Status 0.93 0.95 0.94 41 Height 0.98 0.85 0.91 68 Temperature 0.91 0.96 0.94 141 Triglycerides 0.40 0.40 0.40 10 LDL 0.94 0.68 0.79 22 Social_History_Header 0.98 0.97 0.98 259 Communicable_Disease 0.79 0.62 0.70 50 Overweight 0.86 0.86 0.86 7 Allergen 0.00 0.00 0.00 23 Substance_Quantity 0.33 1.00 0.50 2 Vaccine_Name 0.68 1.00 0.81 15 Birth_Entity 0.00 0.00 0.00 3 BMI 1.00 0.67 0.80 15 Sexually_Active_or_Sexual_Orientation 1.00 0.80 0.89 5 HDL 1.00 1.00 1.00 2 micro-avg 0.89 0.89 0.89 92193 macro-avg 0.85 0.81 0.82 92193 weighted-avg 0.89 0.89 0.89 92193</summary></entry><entry><title type="html">Detect Oncology-Specific Entities (clinical_large)</title><link href="/2023/04/12/ner_oncology_emb_clinical_large_en.html" rel="alternate" type="text/html" title="Detect Oncology-Specific Entities (clinical_large)" /><published>2023-04-12T00:00:00+00:00</published><updated>2023-04-12T00:00:00+00:00</updated><id>/2023/04/12/ner_oncology_emb_clinical_large_en</id><content type="html" xml:base="/2023/04/12/ner_oncology_emb_clinical_large_en.html">## Description

This model extracts more than 40 oncology-related entities, including therapies, tests and staging.

Definitions of Predicted Entities:

`Adenopathy:` Mentions of pathological findings of the lymph nodes.
`Age:` All mention of ages, past or present, related to the patient or with anybody else.
`Biomarker:` Biological molecules that indicate the presence or absence of cancer, or the type of cancer. Oncogenes are excluded from this category.
`Biomarker_Result:` Terms or values that are identified as the result of a biomarkers.
`Cancer_Dx:` Mentions of cancer diagnoses (such as “breast cancer”) or pathological types that are usually used as synonyms for “cancer” (e.g. “carcinoma”). When anatomical references are present, they are included in the Cancer_Dx extraction.
`Cancer_Score:` Clinical or imaging scores that are specific for cancer settings (e.g. “BI-RADS” or “Allred score”).
`Cancer_Surgery:` Terms that indicate surgery as a form of cancer treatment.
`Chemotherapy:` Mentions of chemotherapy drugs, or unspecific words such as “chemotherapy”.
`Cycle_Coun:` The total number of cycles being administered of an oncological therapy (e.g. “5 cycles”).
`Cycle_Day:` References to the day of the cycle of oncological therapy (e.g. “day 5”).
`Cycle_Number:` The number of the cycle of an oncological therapy that is being applied (e.g. “third cycle”).
`Date:` Mentions of exact dates, in any format, including day number, month and/or year.
`Death_Entity:` Words that indicate the death of the patient or someone else (including family members), such as “died” or “passed away”.
`Direction:` Directional and laterality terms, such as “left”, “right”, “bilateral”, “upper” and “lower”.
`Dosage:` The quantity prescribed by the physician for an active ingredient.
`Duration:` Words indicating the duration of a treatment (e.g. “for 2 weeks”).
`Frequency:` Words indicating the frequency of treatment administration (e.g. “daily” or “bid”).
`Gender:` Gender-specific nouns and pronouns (including words such as “him” or “she”, and family members such as “father”).
`Grade:` All pathological grading of tumors (e.g. “grade 1”) or degrees of cellular differentiation (e.g. “well-differentiated”)
`Histological_Type:` Histological variants or cancer subtypes, such as “papillary”, “clear cell” or “medullary”.
`Hormonal_Therapy:` Mentions of hormonal drugs used to treat cancer, or unspecific words such as “hormonal therapy”.
`Imaging_Test:` Imaging tests mentioned in texts, such as “chest CT scan”.
`Immunotherapy:` Mentions of immunotherapy drugs, or unspecific words such as “immunotherapy”.
`Invasion:` Mentions that refer to tumor invasion, such as “invasion” or “involvement”. Metastases or lymph node involvement are excluded from this category.
`Line_Of_Therapy:` Explicit references to the line of therapy of an oncological therapy (e.g. “first-line treatment”).
`Metastasis:` Terms that indicate a metastatic disease. Anatomical references are not included in these extractions.
`Oncogene:` Mentions of genes that are implicated in the etiology of cancer.
`Pathology_Result:` The findings of a biopsy from the pathology report that is not covered by another entity (e.g. “malignant ductal cells”).
`Pathology_Test:` Mentions of biopsies or tests that use tissue samples.
`Performance_Status:` Mentions of performance status scores, such as ECOG and Karnofsky. The name of the score is extracted together with the result (e.g. “ECOG performance status of 4”).
`Race_Ethnicity:` The race and ethnicity categories include racial and national origin or sociocultural groups.
`Radiotherapy:` Terms that indicate the use of Radiotherapy.
`Response_To_Treatment:` Terms related to clinical progress of the patient related to cancer treatment, including “recurrence”, “bad response” or “improvement”.
`Relative_Date:` Temporal references that are relative to the date of the text or to any other specific date (e.g. “yesterday” or “three years later”).
`Route:` Words indicating the type of administration route (such as “PO” or “transdermal”).
`Site_Bone:` Anatomical terms that refer to the human skeleton.
`Site_Brain:` Anatomical terms that refer to the central nervous system (including the brain stem and the cerebellum).
`Site_Breast:` Anatomical terms that refer to the breasts.
`Site_Liver:` Anatomical terms that refer to the liver.
`Site_Lung:` Anatomical terms that refer to the lungs.
`Site_Lymph_Node:` Anatomical terms that refer to lymph nodes, excluding adenopathies.
`Site_Other_Body_Part:` Relevant anatomical terms that are not included in the rest of the anatomical entities.
`Smoking_Status:` All mentions of smoking related to the patient or to someone else.
`Staging:` Mentions of cancer stage such as “stage 2b” or “T2N1M0”. It also includes words such as “in situ”, “early-stage” or “advanced”.
`Targeted_Therapy:` Mentions of targeted therapy drugs, or unspecific words such as “targeted therapy”.
`Tumor_Finding:` All nonspecific terms that may be related to tumors, either malignant or benign (for example: “mass”, “tumor”, “lesion”, or “neoplasm”).
`Tumor_Size:` Size of the tumor, including numerical value and unit of measurement (e.g. “3 cm”).
`Unspecific_Therapy:` Terms that indicate a known cancer therapy but that is not specific to any other therapy entity (e.g. “chemoradiotherapy” or “adjuvant therapy”).

## Predicted Entities

`Histological_Type`, `Direction`, `Staging`, `Cancer_Score`, `Imaging_Test`, `Cycle_Number`, `Tumor_Finding`, `Site_Lymph_Node`, `Invasion`, `Response_To_Treatment`, `Smoking_Status`, `Tumor_Size`, `Cycle_Count`, `Adenopathy`, `Age`, `Biomarker_Result`, `Unspecific_Therapy`, `Site_Breast`, `Chemotherapy`, `Targeted_Therapy`, `Radiotherapy`, `Performance_Status`, `Pathology_Test`, `Site_Other_Body_Part`, `Cancer_Surgery`, `Line_Of_Therapy`, `Pathology_Result`, `Hormonal_Therapy`, `Site_Bone`, `Biomarker`, `Immunotherapy`, `Cycle_Day`, `Frequency`, `Route`, `Duration`, `Death_Entity`, `Metastasis`, `Site_Liver`, `Cancer_Dx`, `Grade`, `Date`, `Site_Lung`, `Site_Brain`, `Relative_Date`, `Race_Ethnicity`, `Gender`, `Oncogene`, `Dosage`, `Radiation_Dose`

{:.btn-box}
[Live Demo](https://demo.johnsnowlabs.com/healthcare/NER_ONCOLOGY_CLINICAL/){:.button.button-orange}
[Open in Colab](https://colab.research.google.com/github/JohnSnowLabs/spark-nlp-workshop/blob/master/tutorials/Certification_Trainings/Healthcare/27.Oncology_Model.ipynb){:.button.button-orange.button-orange-trans.co.button-icon}
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_oncology_emb_clinical_large_en_4.3.2_3.0_1681316109615.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_oncology_emb_clinical_large_en_4.3.2_3.0_1681316109615.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python
document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\
    .setInputCols([&quot;document&quot;])\
    .setOutputCol(&quot;sentence&quot;)

tokenizer = Tokenizer() \
    .setInputCols([&quot;sentence&quot;]) \
    .setOutputCol(&quot;token&quot;)

embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\
        .setInputCols([&quot;sentence&quot;,&quot;token&quot;])\
        .setOutputCol(&quot;word_embeddings&quot;)    

ner = MedicalNerModel.pretrained(&quot;ner_oncology_emb_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;word_embeddings&quot;]) \
    .setOutputCol(&quot;ner&quot;)

ner_converter = NerConverterInternal() \
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;]) \
    .setOutputCol(&quot;ner_chunk&quot;)

pipeline = Pipeline(stages=[document_assembler,
                            sentence_detector,
                            tokenizer,
                            embeddings,
                            ner,
                            ner_converter])

data = spark.createDataFrame([[&quot;&quot;&quot;The had previously undergone a left mastectomy and an axillary lymph node dissection for a left breast cancer twenty years ago.
The tumor was positive for ER and PR. Postoperatively, radiotherapy was administered to the residual breast.
The cancer recurred as a right lung metastasis 13 years later. The patient underwent a regimen consisting of adriamycin (60 mg/m2) and cyclophosphamide (600 mg/m2) over six courses, as first line therapy.&quot;&quot;&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)
```
```scala
val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
    .setInputCols(&quot;document&quot;)
    .setOutputCol(&quot;sentence&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;sentence&quot;)
    .setOutputCol(&quot;token&quot;)

val embeddings = WordEmbeddingsModel().pretrained(&quot;embeddings_clinical_large&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))
    .setOutputCol(&quot;word_embeddings&quot;)                

val ner = MedicalNerModel.pretrained(&quot;ner_oncology_emb_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;word_embeddings&quot;))
    .setOutputCol(&quot;ner&quot;)

val ner_converter = new NerConverterInternal()
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;))
    .setOutputCol(&quot;ner_chunk&quot;)

val pipeline = new Pipeline().setStages(Array(document_assembler,
                            sentence_detector,
                            tokenizer,
                            embeddings,
                            ner,
                            ner_converter))    

val data = Seq(&quot;The had previously undergone a left mastectomy and an axillary lymph node dissection for a left breast cancer twenty years ago.
The tumor was positive for ER and PR. Postoperatively, radiotherapy was administered to the residual breast.
The cancer recurred as a right lung metastasis 13 years later. The patient underwent a regimen consisting of adriamycin (60 mg/m2) and cyclophosphamide (600 mg/m2) over six courses, as first line therapy.&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
+------------------------------+-----+---+---------------------+
|chunk                         |begin|end|ner_label            |
+------------------------------+-----+---+---------------------+
|left                          |31   |34 |Direction            |
|mastectomy                    |36   |45 |Cancer_Surgery       |
|axillary lymph node dissection|54   |83 |Cancer_Surgery       |
|left                          |91   |94 |Direction            |
|breast cancer                 |96   |108|Cancer_Dx            |
|twenty years ago              |110  |125|Relative_Date        |
|tumor                         |132  |136|Tumor_Finding        |
|positive                      |142  |149|Biomarker_Result     |
|ER                            |155  |156|Biomarker            |
|PR                            |162  |163|Biomarker            |
|radiotherapy                  |183  |194|Radiotherapy         |
|breast                        |229  |234|Site_Breast          |
|cancer                        |241  |246|Cancer_Dx            |
|recurred                      |248  |255|Response_To_Treatment|
|right                         |262  |266|Direction            |
|lung                          |268  |271|Site_Lung            |
|metastasis                    |273  |282|Metastasis           |
|13 years later                |284  |297|Relative_Date        |
|adriamycin                    |346  |355|Chemotherapy         |
|60 mg/m2                      |358  |365|Dosage               |
|cyclophosphamide              |372  |387|Chemotherapy         |
|600 mg/m2                     |390  |398|Dosage               |
|six courses                   |406  |416|Cycle_Count          |
|first line                    |422  |431|Line_Of_Therapy      |
+------------------------------+-----+---+---------------------+
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_oncology_emb_clinical_large|
|Compatibility:|Healthcare NLP 4.3.2+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[sentence, token, word_embeddings]|
|Output Labels:|[ner]|
|Language:|en|
|Size:|15.3 MB|

## Benchmarking

```bash
               label     tp    fp    fn  total precision recall     f1
   Histological_Type  141.0  40.0  70.0  211.0     0.779 0.6682 0.7194
           Direction  672.0 150.0 159.0  831.0    0.8175 0.8087 0.8131
             Staging  102.0  27.0  36.0  138.0    0.7907 0.7391  0.764
        Cancer_Score   10.0   2.0  11.0   21.0    0.8333 0.4762 0.6061
        Imaging_Test  754.0 147.0 146.0  900.0    0.8368 0.8378 0.8373
        Cycle_Number   48.0  43.0  12.0   60.0    0.5275    0.8 0.6358
       Tumor_Finding  970.0  89.0 109.0 1079.0     0.916  0.899 0.9074
     Site_Lymph_Node  210.0  68.0  61.0  271.0    0.7554 0.7749  0.765
            Invasion  146.0  39.0  21.0  167.0    0.7892 0.8743 0.8295
Response_To_Treat...  280.0 146.0  90.0  370.0    0.6573 0.7568 0.7035
      Smoking_Status   42.0  11.0   6.0   48.0    0.7925  0.875 0.8317
         Cycle_Count  104.0  23.0  40.0  144.0    0.8189 0.7222 0.7675
          Tumor_Size  197.0  37.0  41.0  238.0    0.8419 0.8277 0.8347
          Adenopathy   30.0  13.0  13.0   43.0    0.6977 0.6977 0.6977
                 Age  205.0  15.0  23.0  228.0    0.9318 0.8991 0.9152
    Biomarker_Result  564.0 160.0 121.0  685.0     0.779 0.8234 0.8006
  Unspecific_Therapy  108.0  30.0  66.0  174.0    0.7826 0.6207 0.6923
         Site_Breast   92.0  18.0  18.0  110.0    0.8364 0.8364 0.8364
        Chemotherapy  687.0  59.0  55.0  742.0    0.9209 0.9259 0.9234
    Targeted_Therapy  178.0  29.0  28.0  206.0    0.8599 0.8641  0.862
        Radiotherapy  143.0  22.0  18.0  161.0    0.8667 0.8882 0.8773
  Performance_Status   17.0  15.0  15.0   32.0    0.5313 0.5313 0.5313
      Pathology_Test  387.0 197.0  99.0  486.0    0.6627 0.7963 0.7234
Site_Other_Body_Part  678.0 287.0 460.0 1138.0    0.7026 0.5958 0.6448
      Cancer_Surgery  398.0  82.0  95.0  493.0    0.8292 0.8073 0.8181
     Line_Of_Therapy   38.0   9.0  10.0   48.0    0.8085 0.7917    0.8
    Pathology_Result  180.0 206.0 161.0  341.0    0.4663 0.5279 0.4952
    Hormonal_Therapy   98.0  12.0  25.0  123.0    0.8909 0.7967 0.8412
           Site_Bone  172.0  43.0  51.0  223.0       0.8 0.7713 0.7854
           Biomarker  693.0 144.0 138.0  831.0     0.828 0.8339 0.8309
       Immunotherapy   66.0  17.0  16.0   82.0    0.7952 0.8049    0.8
           Cycle_Day   85.0  44.0  43.0  128.0    0.6589 0.6641 0.6615
           Frequency  199.0  37.0  36.0  235.0    0.8432 0.8468  0.845
               Route   91.0  10.0  25.0  116.0     0.901 0.7845 0.8387
            Duration  179.0  57.0 117.0  296.0    0.7585 0.6047 0.6729
        Death_Entity   40.0  10.0   4.0   44.0       0.8 0.9091 0.8511
          Metastasis  337.0  27.0  25.0  362.0    0.9258 0.9309 0.9284
          Site_Liver  149.0  56.0  25.0  174.0    0.7268 0.8563 0.7863
           Cancer_Dx  723.0 114.0 107.0  830.0    0.8638 0.8711 0.8674
               Grade   47.0  21.0  19.0   66.0    0.6912 0.7121 0.7015
                Date  403.0  15.0  14.0  417.0    0.9641 0.9664 0.9653
           Site_Lung  338.0 134.0  64.0  402.0    0.7161 0.8408 0.7735
          Site_Brain  165.0  53.0  41.0  206.0    0.7569  0.801 0.7783
       Relative_Date  376.0 271.0  84.0  460.0    0.5811 0.8174 0.6793
      Race_Ethnicity   42.0   0.0  13.0   55.0       1.0 0.7636  0.866
              Gender 1255.0  17.0   7.0 1262.0    0.9866 0.9945 0.9905
              Dosage  417.0  53.0  68.0  485.0    0.8872 0.8598 0.8733
            Oncogene  178.0  83.0  57.0  235.0     0.682 0.7574 0.7177
      Radiation_Dose   41.0   4.0  11.0   52.0    0.9111 0.7885 0.8454
               macro     -     -     -     -        -      -    0.7863
               micro     -     -     -     -        -      -    0.8145
```</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="clinical" /><category term="en" /><category term="oncology" /><category term="biomarker" /><category term="treatment" /><category term="ner" /><category term="clinical_large" /><summary type="html">Description This model extracts more than 40 oncology-related entities, including therapies, tests and staging. Definitions of Predicted Entities: Adenopathy: Mentions of pathological findings of the lymph nodes. Age: All mention of ages, past or present, related to the patient or with anybody else. Biomarker: Biological molecules that indicate the presence or absence of cancer, or the type of cancer. Oncogenes are excluded from this category. Biomarker_Result: Terms or values that are identified as the result of a biomarkers. Cancer_Dx: Mentions of cancer diagnoses (such as “breast cancer”) or pathological types that are usually used as synonyms for “cancer” (e.g. “carcinoma”). When anatomical references are present, they are included in the Cancer_Dx extraction. Cancer_Score: Clinical or imaging scores that are specific for cancer settings (e.g. “BI-RADS” or “Allred score”). Cancer_Surgery: Terms that indicate surgery as a form of cancer treatment. Chemotherapy: Mentions of chemotherapy drugs, or unspecific words such as “chemotherapy”. Cycle_Coun: The total number of cycles being administered of an oncological therapy (e.g. “5 cycles”). Cycle_Day: References to the day of the cycle of oncological therapy (e.g. “day 5”). Cycle_Number: The number of the cycle of an oncological therapy that is being applied (e.g. “third cycle”). Date: Mentions of exact dates, in any format, including day number, month and/or year. Death_Entity: Words that indicate the death of the patient or someone else (including family members), such as “died” or “passed away”. Direction: Directional and laterality terms, such as “left”, “right”, “bilateral”, “upper” and “lower”. Dosage: The quantity prescribed by the physician for an active ingredient. Duration: Words indicating the duration of a treatment (e.g. “for 2 weeks”). Frequency: Words indicating the frequency of treatment administration (e.g. “daily” or “bid”). Gender: Gender-specific nouns and pronouns (including words such as “him” or “she”, and family members such as “father”). Grade: All pathological grading of tumors (e.g. “grade 1”) or degrees of cellular differentiation (e.g. “well-differentiated”) Histological_Type: Histological variants or cancer subtypes, such as “papillary”, “clear cell” or “medullary”. Hormonal_Therapy: Mentions of hormonal drugs used to treat cancer, or unspecific words such as “hormonal therapy”. Imaging_Test: Imaging tests mentioned in texts, such as “chest CT scan”. Immunotherapy: Mentions of immunotherapy drugs, or unspecific words such as “immunotherapy”. Invasion: Mentions that refer to tumor invasion, such as “invasion” or “involvement”. Metastases or lymph node involvement are excluded from this category. Line_Of_Therapy: Explicit references to the line of therapy of an oncological therapy (e.g. “first-line treatment”). Metastasis: Terms that indicate a metastatic disease. Anatomical references are not included in these extractions. Oncogene: Mentions of genes that are implicated in the etiology of cancer. Pathology_Result: The findings of a biopsy from the pathology report that is not covered by another entity (e.g. “malignant ductal cells”). Pathology_Test: Mentions of biopsies or tests that use tissue samples. Performance_Status: Mentions of performance status scores, such as ECOG and Karnofsky. The name of the score is extracted together with the result (e.g. “ECOG performance status of 4”). Race_Ethnicity: The race and ethnicity categories include racial and national origin or sociocultural groups. Radiotherapy: Terms that indicate the use of Radiotherapy. Response_To_Treatment: Terms related to clinical progress of the patient related to cancer treatment, including “recurrence”, “bad response” or “improvement”. Relative_Date: Temporal references that are relative to the date of the text or to any other specific date (e.g. “yesterday” or “three years later”). Route: Words indicating the type of administration route (such as “PO” or “transdermal”). Site_Bone: Anatomical terms that refer to the human skeleton. Site_Brain: Anatomical terms that refer to the central nervous system (including the brain stem and the cerebellum). Site_Breast: Anatomical terms that refer to the breasts. Site_Liver: Anatomical terms that refer to the liver. Site_Lung: Anatomical terms that refer to the lungs. Site_Lymph_Node: Anatomical terms that refer to lymph nodes, excluding adenopathies. Site_Other_Body_Part: Relevant anatomical terms that are not included in the rest of the anatomical entities. Smoking_Status: All mentions of smoking related to the patient or to someone else. Staging: Mentions of cancer stage such as “stage 2b” or “T2N1M0”. It also includes words such as “in situ”, “early-stage” or “advanced”. Targeted_Therapy: Mentions of targeted therapy drugs, or unspecific words such as “targeted therapy”. Tumor_Finding: All nonspecific terms that may be related to tumors, either malignant or benign (for example: “mass”, “tumor”, “lesion”, or “neoplasm”). Tumor_Size: Size of the tumor, including numerical value and unit of measurement (e.g. “3 cm”). Unspecific_Therapy: Terms that indicate a known cancer therapy but that is not specific to any other therapy entity (e.g. “chemoradiotherapy” or “adjuvant therapy”). Predicted Entities Histological_Type, Direction, Staging, Cancer_Score, Imaging_Test, Cycle_Number, Tumor_Finding, Site_Lymph_Node, Invasion, Response_To_Treatment, Smoking_Status, Tumor_Size, Cycle_Count, Adenopathy, Age, Biomarker_Result, Unspecific_Therapy, Site_Breast, Chemotherapy, Targeted_Therapy, Radiotherapy, Performance_Status, Pathology_Test, Site_Other_Body_Part, Cancer_Surgery, Line_Of_Therapy, Pathology_Result, Hormonal_Therapy, Site_Bone, Biomarker, Immunotherapy, Cycle_Day, Frequency, Route, Duration, Death_Entity, Metastasis, Site_Liver, Cancer_Dx, Grade, Date, Site_Lung, Site_Brain, Relative_Date, Race_Ethnicity, Gender, Oncogene, Dosage, Radiation_Dose Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\ .setInputCols([&quot;document&quot;])\ .setOutputCol(&quot;sentence&quot;) tokenizer = Tokenizer() \ .setInputCols([&quot;sentence&quot;]) \ .setOutputCol(&quot;token&quot;) embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;,&quot;token&quot;])\ .setOutputCol(&quot;word_embeddings&quot;) ner = MedicalNerModel.pretrained(&quot;ner_oncology_emb_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;word_embeddings&quot;]) \ .setOutputCol(&quot;ner&quot;) ner_converter = NerConverterInternal() \ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;]) \ .setOutputCol(&quot;ner_chunk&quot;) pipeline = Pipeline(stages=[document_assembler, sentence_detector, tokenizer, embeddings, ner, ner_converter]) data = spark.createDataFrame([[&quot;&quot;&quot;The had previously undergone a left mastectomy and an axillary lymph node dissection for a left breast cancer twenty years ago. The tumor was positive for ER and PR. Postoperatively, radiotherapy was administered to the residual breast. The cancer recurred as a right lung metastasis 13 years later. The patient underwent a regimen consisting of adriamycin (60 mg/m2) and cyclophosphamide (600 mg/m2) over six courses, as first line therapy.&quot;&quot;&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols(&quot;document&quot;) .setOutputCol(&quot;sentence&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;sentence&quot;) .setOutputCol(&quot;token&quot;) val embeddings = WordEmbeddingsModel().pretrained(&quot;embeddings_clinical_large&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;)) .setOutputCol(&quot;word_embeddings&quot;) val ner = MedicalNerModel.pretrained(&quot;ner_oncology_emb_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;word_embeddings&quot;)) .setOutputCol(&quot;ner&quot;) val ner_converter = new NerConverterInternal() .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;)) .setOutputCol(&quot;ner_chunk&quot;) val pipeline = new Pipeline().setStages(Array(document_assembler, sentence_detector, tokenizer, embeddings, ner, ner_converter)) val data = Seq(&quot;The had previously undergone a left mastectomy and an axillary lymph node dissection for a left breast cancer twenty years ago. The tumor was positive for ER and PR. Postoperatively, radiotherapy was administered to the residual breast. The cancer recurred as a right lung metastasis 13 years later. The patient underwent a regimen consisting of adriamycin (60 mg/m2) and cyclophosphamide (600 mg/m2) over six courses, as first line therapy.&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Results +------------------------------+-----+---+---------------------+ |chunk |begin|end|ner_label | +------------------------------+-----+---+---------------------+ |left |31 |34 |Direction | |mastectomy |36 |45 |Cancer_Surgery | |axillary lymph node dissection|54 |83 |Cancer_Surgery | |left |91 |94 |Direction | |breast cancer |96 |108|Cancer_Dx | |twenty years ago |110 |125|Relative_Date | |tumor |132 |136|Tumor_Finding | |positive |142 |149|Biomarker_Result | |ER |155 |156|Biomarker | |PR |162 |163|Biomarker | |radiotherapy |183 |194|Radiotherapy | |breast |229 |234|Site_Breast | |cancer |241 |246|Cancer_Dx | |recurred |248 |255|Response_To_Treatment| |right |262 |266|Direction | |lung |268 |271|Site_Lung | |metastasis |273 |282|Metastasis | |13 years later |284 |297|Relative_Date | |adriamycin |346 |355|Chemotherapy | |60 mg/m2 |358 |365|Dosage | |cyclophosphamide |372 |387|Chemotherapy | |600 mg/m2 |390 |398|Dosage | |six courses |406 |416|Cycle_Count | |first line |422 |431|Line_Of_Therapy | +------------------------------+-----+---+---------------------+ Model Information Model Name: ner_oncology_emb_clinical_large Compatibility: Healthcare NLP 4.3.2+ License: Licensed Edition: Official Input Labels: [sentence, token, word_embeddings] Output Labels: [ner] Language: en Size: 15.3 MB Benchmarking label tp fp fn total precision recall f1 Histological_Type 141.0 40.0 70.0 211.0 0.779 0.6682 0.7194 Direction 672.0 150.0 159.0 831.0 0.8175 0.8087 0.8131 Staging 102.0 27.0 36.0 138.0 0.7907 0.7391 0.764 Cancer_Score 10.0 2.0 11.0 21.0 0.8333 0.4762 0.6061 Imaging_Test 754.0 147.0 146.0 900.0 0.8368 0.8378 0.8373 Cycle_Number 48.0 43.0 12.0 60.0 0.5275 0.8 0.6358 Tumor_Finding 970.0 89.0 109.0 1079.0 0.916 0.899 0.9074 Site_Lymph_Node 210.0 68.0 61.0 271.0 0.7554 0.7749 0.765 Invasion 146.0 39.0 21.0 167.0 0.7892 0.8743 0.8295 Response_To_Treat... 280.0 146.0 90.0 370.0 0.6573 0.7568 0.7035 Smoking_Status 42.0 11.0 6.0 48.0 0.7925 0.875 0.8317 Cycle_Count 104.0 23.0 40.0 144.0 0.8189 0.7222 0.7675 Tumor_Size 197.0 37.0 41.0 238.0 0.8419 0.8277 0.8347 Adenopathy 30.0 13.0 13.0 43.0 0.6977 0.6977 0.6977 Age 205.0 15.0 23.0 228.0 0.9318 0.8991 0.9152 Biomarker_Result 564.0 160.0 121.0 685.0 0.779 0.8234 0.8006 Unspecific_Therapy 108.0 30.0 66.0 174.0 0.7826 0.6207 0.6923 Site_Breast 92.0 18.0 18.0 110.0 0.8364 0.8364 0.8364 Chemotherapy 687.0 59.0 55.0 742.0 0.9209 0.9259 0.9234 Targeted_Therapy 178.0 29.0 28.0 206.0 0.8599 0.8641 0.862 Radiotherapy 143.0 22.0 18.0 161.0 0.8667 0.8882 0.8773 Performance_Status 17.0 15.0 15.0 32.0 0.5313 0.5313 0.5313 Pathology_Test 387.0 197.0 99.0 486.0 0.6627 0.7963 0.7234 Site_Other_Body_Part 678.0 287.0 460.0 1138.0 0.7026 0.5958 0.6448 Cancer_Surgery 398.0 82.0 95.0 493.0 0.8292 0.8073 0.8181 Line_Of_Therapy 38.0 9.0 10.0 48.0 0.8085 0.7917 0.8 Pathology_Result 180.0 206.0 161.0 341.0 0.4663 0.5279 0.4952 Hormonal_Therapy 98.0 12.0 25.0 123.0 0.8909 0.7967 0.8412 Site_Bone 172.0 43.0 51.0 223.0 0.8 0.7713 0.7854 Biomarker 693.0 144.0 138.0 831.0 0.828 0.8339 0.8309 Immunotherapy 66.0 17.0 16.0 82.0 0.7952 0.8049 0.8 Cycle_Day 85.0 44.0 43.0 128.0 0.6589 0.6641 0.6615 Frequency 199.0 37.0 36.0 235.0 0.8432 0.8468 0.845 Route 91.0 10.0 25.0 116.0 0.901 0.7845 0.8387 Duration 179.0 57.0 117.0 296.0 0.7585 0.6047 0.6729 Death_Entity 40.0 10.0 4.0 44.0 0.8 0.9091 0.8511 Metastasis 337.0 27.0 25.0 362.0 0.9258 0.9309 0.9284 Site_Liver 149.0 56.0 25.0 174.0 0.7268 0.8563 0.7863 Cancer_Dx 723.0 114.0 107.0 830.0 0.8638 0.8711 0.8674 Grade 47.0 21.0 19.0 66.0 0.6912 0.7121 0.7015 Date 403.0 15.0 14.0 417.0 0.9641 0.9664 0.9653 Site_Lung 338.0 134.0 64.0 402.0 0.7161 0.8408 0.7735 Site_Brain 165.0 53.0 41.0 206.0 0.7569 0.801 0.7783 Relative_Date 376.0 271.0 84.0 460.0 0.5811 0.8174 0.6793 Race_Ethnicity 42.0 0.0 13.0 55.0 1.0 0.7636 0.866 Gender 1255.0 17.0 7.0 1262.0 0.9866 0.9945 0.9905 Dosage 417.0 53.0 68.0 485.0 0.8872 0.8598 0.8733 Oncogene 178.0 83.0 57.0 235.0 0.682 0.7574 0.7177 Radiation_Dose 41.0 4.0 11.0 52.0 0.9111 0.7885 0.8454 macro - - - - - - 0.7863 micro - - - - - - 0.8145</summary></entry><entry><title type="html">Detect Oncology-Specific Entities (clinical_medium)</title><link href="/2023/04/12/ner_oncology_emb_clinical_medium_en.html" rel="alternate" type="text/html" title="Detect Oncology-Specific Entities (clinical_medium)" /><published>2023-04-12T00:00:00+00:00</published><updated>2023-04-12T00:00:00+00:00</updated><id>/2023/04/12/ner_oncology_emb_clinical_medium_en</id><content type="html" xml:base="/2023/04/12/ner_oncology_emb_clinical_medium_en.html">## Description

This model extracts more than 40 oncology-related entities, including therapies, tests and staging.

Definitions of Predicted Entities:

`Adenopathy:` Mentions of pathological findings of the lymph nodes.
`Age:` All mention of ages, past or present, related to the patient or with anybody else.
`Biomarker:` Biological molecules that indicate the presence or absence of cancer, or the type of cancer. Oncogenes are excluded from this category.
`Biomarker_Result:` Terms or values that are identified as the result of a biomarkers.
`Cancer_Dx:` Mentions of cancer diagnoses (such as “breast cancer”) or pathological types that are usually used as synonyms for “cancer” (e.g. “carcinoma”). When anatomical references are present, they are included in the Cancer_Dx extraction.
`Cancer_Score:` Clinical or imaging scores that are specific for cancer settings (e.g. “BI-RADS” or “Allred score”).
`Cancer_Surgery:` Terms that indicate surgery as a form of cancer treatment.
`Chemotherapy:` Mentions of chemotherapy drugs, or unspecific words such as “chemotherapy”.
`Cycle_Coun:` The total number of cycles being administered of an oncological therapy (e.g. “5 cycles”).
`Cycle_Day:` References to the day of the cycle of oncological therapy (e.g. “day 5”).
`Cycle_Number:` The number of the cycle of an oncological therapy that is being applied (e.g. “third cycle”).
`Date:` Mentions of exact dates, in any format, including day number, month and/or year.
`Death_Entity:` Words that indicate the death of the patient or someone else (including family members), such as “died” or “passed away”.
`Direction:` Directional and laterality terms, such as “left”, “right”, “bilateral”, “upper” and “lower”.
`Dosage:` The quantity prescribed by the physician for an active ingredient.
`Duration:` Words indicating the duration of a treatment (e.g. “for 2 weeks”).
`Frequency:` Words indicating the frequency of treatment administration (e.g. “daily” or “bid”).
`Gender:` Gender-specific nouns and pronouns (including words such as “him” or “she”, and family members such as “father”).
`Grade:` All pathological grading of tumors (e.g. “grade 1”) or degrees of cellular differentiation (e.g. “well-differentiated”)
`Histological_Type:` Histological variants or cancer subtypes, such as “papillary”, “clear cell” or “medullary”.
`Hormonal_Therapy:` Mentions of hormonal drugs used to treat cancer, or unspecific words such as “hormonal therapy”.
`Imaging_Test:` Imaging tests mentioned in texts, such as “chest CT scan”.
`Immunotherapy:` Mentions of immunotherapy drugs, or unspecific words such as “immunotherapy”.
`Invasion:` Mentions that refer to tumor invasion, such as “invasion” or “involvement”. Metastases or lymph node involvement are excluded from this category.
`Line_Of_Therapy:` Explicit references to the line of therapy of an oncological therapy (e.g. “first-line treatment”).
`Metastasis:` Terms that indicate a metastatic disease. Anatomical references are not included in these extractions.
`Oncogene:` Mentions of genes that are implicated in the etiology of cancer.
`Pathology_Result:` The findings of a biopsy from the pathology report that is not covered by another entity (e.g. “malignant ductal cells”).
`Pathology_Test:` Mentions of biopsies or tests that use tissue samples.
`Performance_Status:` Mentions of performance status scores, such as ECOG and Karnofsky. The name of the score is extracted together with the result (e.g. “ECOG performance status of 4”).
`Race_Ethnicity:` The race and ethnicity categories include racial and national origin or sociocultural groups.
`Radiotherapy:` Terms that indicate the use of Radiotherapy.
`Response_To_Treatment:` Terms related to clinical progress of the patient related to cancer treatment, including “recurrence”, “bad response” or “improvement”.
`Relative_Date:` Temporal references that are relative to the date of the text or to any other specific date (e.g. “yesterday” or “three years later”).
`Route:` Words indicating the type of administration route (such as “PO” or “transdermal”).
`Site_Bone:` Anatomical terms that refer to the human skeleton.
`Site_Brain:` Anatomical terms that refer to the central nervous system (including the brain stem and the cerebellum).
`Site_Breast:` Anatomical terms that refer to the breasts.
`Site_Liver:` Anatomical terms that refer to the liver.
`Site_Lung:` Anatomical terms that refer to the lungs.
`Site_Lymph_Node:` Anatomical terms that refer to lymph nodes, excluding adenopathies.
`Site_Other_Body_Part:` Relevant anatomical terms that are not included in the rest of the anatomical entities.
`Smoking_Status:` All mentions of smoking related to the patient or to someone else.
`Staging:` Mentions of cancer stage such as “stage 2b” or “T2N1M0”. It also includes words such as “in situ”, “early-stage” or “advanced”.
`Targeted_Therapy:` Mentions of targeted therapy drugs, or unspecific words such as “targeted therapy”.
`Tumor_Finding:` All nonspecific terms that may be related to tumors, either malignant or benign (for example: “mass”, “tumor”, “lesion”, or “neoplasm”).
`Tumor_Size:` Size of the tumor, including numerical value and unit of measurement (e.g. “3 cm”).
`Unspecific_Therapy:` Terms that indicate a known cancer therapy but that is not specific to any other therapy entity (e.g. “chemoradiotherapy” or “adjuvant therapy”).

## Predicted Entities

`Histological_Type`, `Direction`, `Staging`, `Cancer_Score`, `Imaging_Test`, `Cycle_Number`, `Tumor_Finding`, `Site_Lymph_Node`, `Invasion`, `Response_To_Treatment`, `Smoking_Status`, `Tumor_Size`, `Cycle_Count`, `Adenopathy`, `Age`, `Biomarker_Result`, `Unspecific_Therapy`, `Site_Breast`, `Chemotherapy`, `Targeted_Therapy`, `Radiotherapy`, `Performance_Status`, `Pathology_Test`, `Site_Other_Body_Part`, `Cancer_Surgery`, `Line_Of_Therapy`, `Pathology_Result`, `Hormonal_Therapy`, `Site_Bone`, `Biomarker`, `Immunotherapy`, `Cycle_Day`, `Frequency`, `Route`, `Duration`, `Death_Entity`, `Metastasis`, `Site_Liver`, `Cancer_Dx`, `Grade`, `Date`, `Site_Lung`, `Site_Brain`, `Relative_Date`, `Race_Ethnicity`, `Gender`, `Oncogene`, `Dosage`, `Radiation_Dose`

{:.btn-box}
[Live Demo](https://demo.johnsnowlabs.com/healthcare/NER_ONCOLOGY_CLINICAL/){:.button.button-orange}
[Open in Colab](https://colab.research.google.com/github/JohnSnowLabs/spark-nlp-workshop/blob/master/tutorials/Certification_Trainings/Healthcare/27.Oncology_Model.ipynb){:.button.button-orange.button-orange-trans.co.button-icon}
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_oncology_emb_clinical_medium_en_4.3.2_3.0_1681316892301.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_oncology_emb_clinical_medium_en_4.3.2_3.0_1681316892301.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python
document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\
    .setInputCols([&quot;document&quot;])\
    .setOutputCol(&quot;sentence&quot;)

tokenizer = Tokenizer() \
    .setInputCols([&quot;sentence&quot;]) \
    .setOutputCol(&quot;token&quot;)

word_embeddings = WordEmbeddingsModel().pretrained(&quot;embeddings_clinical_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;]) \
    .setOutputCol(&quot;embeddings&quot;)                

ner = MedicalNerModel.pretrained(&quot;ner_oncology_emb_clinical_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;]) \
    .setOutputCol(&quot;ner&quot;)

ner_converter = NerConverterInternal() \
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;]) \
    .setOutputCol(&quot;ner_chunk&quot;)

pipeline = Pipeline(stages=[document_assembler,
                            sentence_detector,
                            tokenizer,
                            word_embeddings,
                            ner,
                            ner_converter])

data = spark.createDataFrame([[&quot;&quot;&quot;The had previously undergone a left mastectomy and an axillary lymph node dissection for a left breast cancer twenty years ago.
The tumor was positive for ER and PR. Postoperatively, radiotherapy was administered to the residual breast.
The cancer recurred as a right lung metastasis 13 years later. The patient underwent a regimen consisting of adriamycin (60 mg/m2) and cyclophosphamide (600 mg/m2) over six courses, as first line therapy.&quot;&quot;&quot;]]).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)
```
```scala
val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
    .setInputCols(&quot;document&quot;)
    .setOutputCol(&quot;sentence&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;sentence&quot;)
    .setOutputCol(&quot;token&quot;)

val word_embeddings = WordEmbeddingsModel().pretrained(&quot;embeddings_clinical_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))
    .setOutputCol(&quot;embeddings&quot;)                

val ner = MedicalNerModel.pretrained(&quot;ner_oncology_emb_clinical_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;))
    .setOutputCol(&quot;ner&quot;)

val ner_converter = new NerConverterInternal()
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;))
    .setOutputCol(&quot;ner_chunk&quot;)

val pipeline = new Pipeline().setStages(Array(document_assembler,
                            sentence_detector,
                            tokenizer,
                            word_embeddings,
                            ner,
                            ner_converter))    

val data = Seq(&quot;The had previously undergone a left mastectomy and an axillary lymph node dissection for a left breast cancer twenty years ago.
The tumor was positive for ER and PR. Postoperatively, radiotherapy was administered to the residual breast.
The cancer recurred as a right lung metastasis 13 years later. The patient underwent a regimen consisting of adriamycin (60 mg/m2) and cyclophosphamide (600 mg/m2) over six courses, as first line therapy.&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
+-------------------+-----+---+---------------------+
|chunk              |begin|end|ner_label            |
+-------------------+-----+---+---------------------+
|left               |31   |34 |Direction            |
|mastectomy         |36   |45 |Cancer_Surgery       |
|axillary lymph node|54   |72 |Site_Lymph_Node      |
|dissection         |74   |83 |Cancer_Surgery       |
|left               |91   |94 |Direction            |
|breast cancer      |96   |108|Cancer_Dx            |
|twenty years ago   |110  |125|Relative_Date        |
|tumor              |132  |136|Tumor_Finding        |
|positive           |142  |149|Biomarker_Result     |
|ER                 |155  |156|Biomarker            |
|PR                 |162  |163|Response_To_Treatment|
|radiotherapy       |183  |194|Radiotherapy         |
|breast             |229  |234|Site_Breast          |
|cancer             |241  |246|Cancer_Dx            |
|recurred           |248  |255|Response_To_Treatment|
|right              |262  |266|Direction            |
|lung               |268  |271|Site_Lung            |
|metastasis         |273  |282|Metastasis           |
|13 years later     |284  |297|Relative_Date        |
|adriamycin         |346  |355|Chemotherapy         |
|60 mg/m2           |358  |365|Chemotherapy         |
|cyclophosphamide   |372  |387|Chemotherapy         |
|600 mg/m2          |390  |398|Dosage               |
|six courses        |406  |416|Cycle_Count          |
|first line         |422  |431|Line_Of_Therapy      |
+-------------------+-----+---+---------------------+
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_oncology_emb_clinical_medium|
|Compatibility:|Healthcare NLP 4.3.2+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[sentence, token, embeddings]|
|Output Labels:|[ner]|
|Language:|en|
|Size:|15.4 MB|

## Benchmarking

```bash
               label     tp    fp    fn  total precision recall     f1
   Histological_Type  138.0  27.0  73.0  211.0    0.8364  0.654  0.734
           Direction  679.0 163.0 152.0  831.0    0.8064 0.8171 0.8117
             Staging  112.0  24.0  26.0  138.0    0.8235 0.8116 0.8175
        Cancer_Score    9.0   2.0  12.0   21.0    0.8182 0.4286 0.5625
        Imaging_Test  759.0 132.0 141.0  900.0    0.8519 0.8433 0.8476
        Cycle_Number   43.0  29.0  17.0   60.0    0.5972 0.7167 0.6515
       Tumor_Finding  971.0  98.0 108.0 1079.0    0.9083 0.8999 0.9041
     Site_Lymph_Node  210.0  80.0  61.0  271.0    0.7241 0.7749 0.7487
            Invasion  146.0  33.0  21.0  167.0    0.8156 0.8743 0.8439
Response_To_Treat...  224.0  98.0 146.0  370.0    0.6957 0.6054 0.6474
      Smoking_Status   39.0  14.0   9.0   48.0    0.7358 0.8125 0.7723
         Cycle_Count  113.0  34.0  31.0  144.0    0.7687 0.7847 0.7766
          Tumor_Size  203.0  44.0  35.0  238.0    0.8219 0.8529 0.8371
          Adenopathy   32.0  12.0  11.0   43.0    0.7273 0.7442 0.7356
                 Age  203.0  20.0  25.0  228.0    0.9103 0.8904 0.9002
    Biomarker_Result  537.0 117.0 148.0  685.0    0.8211 0.7839 0.8021
  Unspecific_Therapy  107.0  32.0  67.0  174.0    0.7698 0.6149 0.6837
         Site_Breast   95.0  17.0  15.0  110.0    0.8482 0.8636 0.8559
        Chemotherapy  684.0  72.0  58.0  742.0    0.9048 0.9218 0.9132
    Targeted_Therapy  170.0  31.0  36.0  206.0    0.8458 0.8252 0.8354
        Radiotherapy  141.0  43.0  20.0  161.0    0.7663 0.8758 0.8174
  Performance_Status   20.0  12.0  12.0   32.0     0.625  0.625  0.625
      Pathology_Test  359.0 159.0 127.0  486.0    0.6931 0.7387 0.7151
Site_Other_Body_Part  744.0 338.0 394.0 1138.0    0.6876 0.6538 0.6703
      Cancer_Surgery  380.0  83.0 113.0  493.0    0.8207 0.7708  0.795
     Line_Of_Therapy   38.0   7.0  10.0   48.0    0.8444 0.7917 0.8172
    Pathology_Result  124.0 144.0 217.0  341.0    0.4627 0.3636 0.4072
    Hormonal_Therapy   96.0  13.0  27.0  123.0    0.8807 0.7805 0.8276
           Site_Bone  167.0  50.0  56.0  223.0    0.7696 0.7489 0.7591
       Immunotherapy   61.0  13.0  21.0   82.0    0.8243 0.7439 0.7821
           Biomarker  681.0  88.0 150.0  831.0    0.8856 0.8195 0.8513
           Cycle_Day   85.0  43.0  43.0  128.0    0.6641 0.6641 0.6641
           Frequency  200.0  40.0  35.0  235.0    0.8333 0.8511 0.8421
               Route   98.0  13.0  18.0  116.0    0.8829 0.8448 0.8634
            Duration  195.0  57.0 101.0  296.0    0.7738 0.6588 0.7117
        Death_Entity   40.0   9.0   4.0   44.0    0.8163 0.9091 0.8602
          Metastasis  335.0  34.0  27.0  362.0    0.9079 0.9254 0.9166
          Site_Liver  146.0  64.0  28.0  174.0    0.6952 0.8391 0.7604
           Cancer_Dx  722.0  96.0 108.0  830.0    0.8826 0.8699 0.8762
               Grade   55.0  19.0  11.0   66.0    0.7432 0.8333 0.7857
                Date  403.0  16.0  14.0  417.0    0.9618 0.9664 0.9641
           Site_Lung  341.0 151.0  61.0  402.0    0.6931 0.8483 0.7629
          Site_Brain  184.0  82.0  22.0  206.0    0.6917 0.8932 0.7797
       Relative_Date  365.0 249.0  95.0  460.0    0.5945 0.7935 0.6797
      Race_Ethnicity   47.0   2.0   8.0   55.0    0.9592 0.8545 0.9038
              Gender 1260.0  15.0   2.0 1262.0    0.9882 0.9984 0.9933
              Dosage  425.0  76.0  60.0  485.0    0.8483 0.8763 0.8621
            Oncogene  178.0  89.0  57.0  235.0    0.6667 0.7574 0.7092
      Radiation_Dose   41.0   6.0  11.0   52.0    0.8723 0.7885 0.8283
               macro     -     -     -     -        -      -    0.7859
               micro     -     -     -     -        -      -    0.8130
```</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="clinical" /><category term="clinical_medium" /><category term="ner" /><category term="oncology" /><category term="biomarker" /><category term="treatment" /><summary type="html">Description This model extracts more than 40 oncology-related entities, including therapies, tests and staging. Definitions of Predicted Entities: Adenopathy: Mentions of pathological findings of the lymph nodes. Age: All mention of ages, past or present, related to the patient or with anybody else. Biomarker: Biological molecules that indicate the presence or absence of cancer, or the type of cancer. Oncogenes are excluded from this category. Biomarker_Result: Terms or values that are identified as the result of a biomarkers. Cancer_Dx: Mentions of cancer diagnoses (such as “breast cancer”) or pathological types that are usually used as synonyms for “cancer” (e.g. “carcinoma”). When anatomical references are present, they are included in the Cancer_Dx extraction. Cancer_Score: Clinical or imaging scores that are specific for cancer settings (e.g. “BI-RADS” or “Allred score”). Cancer_Surgery: Terms that indicate surgery as a form of cancer treatment. Chemotherapy: Mentions of chemotherapy drugs, or unspecific words such as “chemotherapy”. Cycle_Coun: The total number of cycles being administered of an oncological therapy (e.g. “5 cycles”). Cycle_Day: References to the day of the cycle of oncological therapy (e.g. “day 5”). Cycle_Number: The number of the cycle of an oncological therapy that is being applied (e.g. “third cycle”). Date: Mentions of exact dates, in any format, including day number, month and/or year. Death_Entity: Words that indicate the death of the patient or someone else (including family members), such as “died” or “passed away”. Direction: Directional and laterality terms, such as “left”, “right”, “bilateral”, “upper” and “lower”. Dosage: The quantity prescribed by the physician for an active ingredient. Duration: Words indicating the duration of a treatment (e.g. “for 2 weeks”). Frequency: Words indicating the frequency of treatment administration (e.g. “daily” or “bid”). Gender: Gender-specific nouns and pronouns (including words such as “him” or “she”, and family members such as “father”). Grade: All pathological grading of tumors (e.g. “grade 1”) or degrees of cellular differentiation (e.g. “well-differentiated”) Histological_Type: Histological variants or cancer subtypes, such as “papillary”, “clear cell” or “medullary”. Hormonal_Therapy: Mentions of hormonal drugs used to treat cancer, or unspecific words such as “hormonal therapy”. Imaging_Test: Imaging tests mentioned in texts, such as “chest CT scan”. Immunotherapy: Mentions of immunotherapy drugs, or unspecific words such as “immunotherapy”. Invasion: Mentions that refer to tumor invasion, such as “invasion” or “involvement”. Metastases or lymph node involvement are excluded from this category. Line_Of_Therapy: Explicit references to the line of therapy of an oncological therapy (e.g. “first-line treatment”). Metastasis: Terms that indicate a metastatic disease. Anatomical references are not included in these extractions. Oncogene: Mentions of genes that are implicated in the etiology of cancer. Pathology_Result: The findings of a biopsy from the pathology report that is not covered by another entity (e.g. “malignant ductal cells”). Pathology_Test: Mentions of biopsies or tests that use tissue samples. Performance_Status: Mentions of performance status scores, such as ECOG and Karnofsky. The name of the score is extracted together with the result (e.g. “ECOG performance status of 4”). Race_Ethnicity: The race and ethnicity categories include racial and national origin or sociocultural groups. Radiotherapy: Terms that indicate the use of Radiotherapy. Response_To_Treatment: Terms related to clinical progress of the patient related to cancer treatment, including “recurrence”, “bad response” or “improvement”. Relative_Date: Temporal references that are relative to the date of the text or to any other specific date (e.g. “yesterday” or “three years later”). Route: Words indicating the type of administration route (such as “PO” or “transdermal”). Site_Bone: Anatomical terms that refer to the human skeleton. Site_Brain: Anatomical terms that refer to the central nervous system (including the brain stem and the cerebellum). Site_Breast: Anatomical terms that refer to the breasts. Site_Liver: Anatomical terms that refer to the liver. Site_Lung: Anatomical terms that refer to the lungs. Site_Lymph_Node: Anatomical terms that refer to lymph nodes, excluding adenopathies. Site_Other_Body_Part: Relevant anatomical terms that are not included in the rest of the anatomical entities. Smoking_Status: All mentions of smoking related to the patient or to someone else. Staging: Mentions of cancer stage such as “stage 2b” or “T2N1M0”. It also includes words such as “in situ”, “early-stage” or “advanced”. Targeted_Therapy: Mentions of targeted therapy drugs, or unspecific words such as “targeted therapy”. Tumor_Finding: All nonspecific terms that may be related to tumors, either malignant or benign (for example: “mass”, “tumor”, “lesion”, or “neoplasm”). Tumor_Size: Size of the tumor, including numerical value and unit of measurement (e.g. “3 cm”). Unspecific_Therapy: Terms that indicate a known cancer therapy but that is not specific to any other therapy entity (e.g. “chemoradiotherapy” or “adjuvant therapy”). Predicted Entities Histological_Type, Direction, Staging, Cancer_Score, Imaging_Test, Cycle_Number, Tumor_Finding, Site_Lymph_Node, Invasion, Response_To_Treatment, Smoking_Status, Tumor_Size, Cycle_Count, Adenopathy, Age, Biomarker_Result, Unspecific_Therapy, Site_Breast, Chemotherapy, Targeted_Therapy, Radiotherapy, Performance_Status, Pathology_Test, Site_Other_Body_Part, Cancer_Surgery, Line_Of_Therapy, Pathology_Result, Hormonal_Therapy, Site_Bone, Biomarker, Immunotherapy, Cycle_Day, Frequency, Route, Duration, Death_Entity, Metastasis, Site_Liver, Cancer_Dx, Grade, Date, Site_Lung, Site_Brain, Relative_Date, Race_Ethnicity, Gender, Oncogene, Dosage, Radiation_Dose Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\ .setInputCols([&quot;document&quot;])\ .setOutputCol(&quot;sentence&quot;) tokenizer = Tokenizer() \ .setInputCols([&quot;sentence&quot;]) \ .setOutputCol(&quot;token&quot;) word_embeddings = WordEmbeddingsModel().pretrained(&quot;embeddings_clinical_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;]) \ .setOutputCol(&quot;embeddings&quot;) ner = MedicalNerModel.pretrained(&quot;ner_oncology_emb_clinical_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;]) \ .setOutputCol(&quot;ner&quot;) ner_converter = NerConverterInternal() \ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;]) \ .setOutputCol(&quot;ner_chunk&quot;) pipeline = Pipeline(stages=[document_assembler, sentence_detector, tokenizer, word_embeddings, ner, ner_converter]) data = spark.createDataFrame([[&quot;&quot;&quot;The had previously undergone a left mastectomy and an axillary lymph node dissection for a left breast cancer twenty years ago. The tumor was positive for ER and PR. Postoperatively, radiotherapy was administered to the residual breast. The cancer recurred as a right lung metastasis 13 years later. The patient underwent a regimen consisting of adriamycin (60 mg/m2) and cyclophosphamide (600 mg/m2) over six courses, as first line therapy.&quot;&quot;&quot;]]).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols(&quot;document&quot;) .setOutputCol(&quot;sentence&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;sentence&quot;) .setOutputCol(&quot;token&quot;) val word_embeddings = WordEmbeddingsModel().pretrained(&quot;embeddings_clinical_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;)) .setOutputCol(&quot;embeddings&quot;) val ner = MedicalNerModel.pretrained(&quot;ner_oncology_emb_clinical_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;)) .setOutputCol(&quot;ner&quot;) val ner_converter = new NerConverterInternal() .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;)) .setOutputCol(&quot;ner_chunk&quot;) val pipeline = new Pipeline().setStages(Array(document_assembler, sentence_detector, tokenizer, word_embeddings, ner, ner_converter)) val data = Seq(&quot;The had previously undergone a left mastectomy and an axillary lymph node dissection for a left breast cancer twenty years ago. The tumor was positive for ER and PR. Postoperatively, radiotherapy was administered to the residual breast. The cancer recurred as a right lung metastasis 13 years later. The patient underwent a regimen consisting of adriamycin (60 mg/m2) and cyclophosphamide (600 mg/m2) over six courses, as first line therapy.&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Results +-------------------+-----+---+---------------------+ |chunk |begin|end|ner_label | +-------------------+-----+---+---------------------+ |left |31 |34 |Direction | |mastectomy |36 |45 |Cancer_Surgery | |axillary lymph node|54 |72 |Site_Lymph_Node | |dissection |74 |83 |Cancer_Surgery | |left |91 |94 |Direction | |breast cancer |96 |108|Cancer_Dx | |twenty years ago |110 |125|Relative_Date | |tumor |132 |136|Tumor_Finding | |positive |142 |149|Biomarker_Result | |ER |155 |156|Biomarker | |PR |162 |163|Response_To_Treatment| |radiotherapy |183 |194|Radiotherapy | |breast |229 |234|Site_Breast | |cancer |241 |246|Cancer_Dx | |recurred |248 |255|Response_To_Treatment| |right |262 |266|Direction | |lung |268 |271|Site_Lung | |metastasis |273 |282|Metastasis | |13 years later |284 |297|Relative_Date | |adriamycin |346 |355|Chemotherapy | |60 mg/m2 |358 |365|Chemotherapy | |cyclophosphamide |372 |387|Chemotherapy | |600 mg/m2 |390 |398|Dosage | |six courses |406 |416|Cycle_Count | |first line |422 |431|Line_Of_Therapy | +-------------------+-----+---+---------------------+ Model Information Model Name: ner_oncology_emb_clinical_medium Compatibility: Healthcare NLP 4.3.2+ License: Licensed Edition: Official Input Labels: [sentence, token, embeddings] Output Labels: [ner] Language: en Size: 15.4 MB Benchmarking label tp fp fn total precision recall f1 Histological_Type 138.0 27.0 73.0 211.0 0.8364 0.654 0.734 Direction 679.0 163.0 152.0 831.0 0.8064 0.8171 0.8117 Staging 112.0 24.0 26.0 138.0 0.8235 0.8116 0.8175 Cancer_Score 9.0 2.0 12.0 21.0 0.8182 0.4286 0.5625 Imaging_Test 759.0 132.0 141.0 900.0 0.8519 0.8433 0.8476 Cycle_Number 43.0 29.0 17.0 60.0 0.5972 0.7167 0.6515 Tumor_Finding 971.0 98.0 108.0 1079.0 0.9083 0.8999 0.9041 Site_Lymph_Node 210.0 80.0 61.0 271.0 0.7241 0.7749 0.7487 Invasion 146.0 33.0 21.0 167.0 0.8156 0.8743 0.8439 Response_To_Treat... 224.0 98.0 146.0 370.0 0.6957 0.6054 0.6474 Smoking_Status 39.0 14.0 9.0 48.0 0.7358 0.8125 0.7723 Cycle_Count 113.0 34.0 31.0 144.0 0.7687 0.7847 0.7766 Tumor_Size 203.0 44.0 35.0 238.0 0.8219 0.8529 0.8371 Adenopathy 32.0 12.0 11.0 43.0 0.7273 0.7442 0.7356 Age 203.0 20.0 25.0 228.0 0.9103 0.8904 0.9002 Biomarker_Result 537.0 117.0 148.0 685.0 0.8211 0.7839 0.8021 Unspecific_Therapy 107.0 32.0 67.0 174.0 0.7698 0.6149 0.6837 Site_Breast 95.0 17.0 15.0 110.0 0.8482 0.8636 0.8559 Chemotherapy 684.0 72.0 58.0 742.0 0.9048 0.9218 0.9132 Targeted_Therapy 170.0 31.0 36.0 206.0 0.8458 0.8252 0.8354 Radiotherapy 141.0 43.0 20.0 161.0 0.7663 0.8758 0.8174 Performance_Status 20.0 12.0 12.0 32.0 0.625 0.625 0.625 Pathology_Test 359.0 159.0 127.0 486.0 0.6931 0.7387 0.7151 Site_Other_Body_Part 744.0 338.0 394.0 1138.0 0.6876 0.6538 0.6703 Cancer_Surgery 380.0 83.0 113.0 493.0 0.8207 0.7708 0.795 Line_Of_Therapy 38.0 7.0 10.0 48.0 0.8444 0.7917 0.8172 Pathology_Result 124.0 144.0 217.0 341.0 0.4627 0.3636 0.4072 Hormonal_Therapy 96.0 13.0 27.0 123.0 0.8807 0.7805 0.8276 Site_Bone 167.0 50.0 56.0 223.0 0.7696 0.7489 0.7591 Immunotherapy 61.0 13.0 21.0 82.0 0.8243 0.7439 0.7821 Biomarker 681.0 88.0 150.0 831.0 0.8856 0.8195 0.8513 Cycle_Day 85.0 43.0 43.0 128.0 0.6641 0.6641 0.6641 Frequency 200.0 40.0 35.0 235.0 0.8333 0.8511 0.8421 Route 98.0 13.0 18.0 116.0 0.8829 0.8448 0.8634 Duration 195.0 57.0 101.0 296.0 0.7738 0.6588 0.7117 Death_Entity 40.0 9.0 4.0 44.0 0.8163 0.9091 0.8602 Metastasis 335.0 34.0 27.0 362.0 0.9079 0.9254 0.9166 Site_Liver 146.0 64.0 28.0 174.0 0.6952 0.8391 0.7604 Cancer_Dx 722.0 96.0 108.0 830.0 0.8826 0.8699 0.8762 Grade 55.0 19.0 11.0 66.0 0.7432 0.8333 0.7857 Date 403.0 16.0 14.0 417.0 0.9618 0.9664 0.9641 Site_Lung 341.0 151.0 61.0 402.0 0.6931 0.8483 0.7629 Site_Brain 184.0 82.0 22.0 206.0 0.6917 0.8932 0.7797 Relative_Date 365.0 249.0 95.0 460.0 0.5945 0.7935 0.6797 Race_Ethnicity 47.0 2.0 8.0 55.0 0.9592 0.8545 0.9038 Gender 1260.0 15.0 2.0 1262.0 0.9882 0.9984 0.9933 Dosage 425.0 76.0 60.0 485.0 0.8483 0.8763 0.8621 Oncogene 178.0 89.0 57.0 235.0 0.6667 0.7574 0.7092 Radiation_Dose 41.0 6.0 11.0 52.0 0.8723 0.7885 0.8283 macro - - - - - - 0.7859 micro - - - - - - 0.8130</summary></entry><entry><title type="html">Detect PHI (Deidentification)(clinical_large)</title><link href="/2023/04/12/ner_deid_large_emb_clinical_large_en.html" rel="alternate" type="text/html" title="Detect PHI (Deidentification)(clinical_large)" /><published>2023-04-12T00:00:00+00:00</published><updated>2023-04-12T00:00:00+00:00</updated><id>/2023/04/12/ner_deid_large_emb_clinical_large_en</id><content type="html" xml:base="/2023/04/12/ner_deid_large_emb_clinical_large_en.html">## Description

Description : Deidentification NER (Large) is a Named Entity Recognition model that annotates text to find protected health information that may need to be deidentified. The entities it annotates are Age, Contact, Date, Id, Location, Name, and Profession. This model is trained with the 'embeddings_clinical_large' word embeddings model, so be sure to use the same embeddings in the pipeline.

We sticked to official annotation guideline (AG) for 2014 i2b2 Deid challenge while annotating new datasets for this model. All the details regarding the nuances and explanations for AG can be found here https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4978170/

## Predicted Entities



{:.btn-box}
[Live Demo](https://demo.johnsnowlabs.com/healthcare/NER_DEMOGRAPHICS/){:.button.button-orange}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_deid_large_emb_clinical_large_en_4.3.2_3.0_1681321107196.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_deid_large_emb_clinical_large_en_4.3.2_3.0_1681321107196.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}

```python
documentAssembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) \
    .setInputCols([&quot;document&quot;]) \
    .setOutputCol(&quot;sentence&quot;) 

tokenizer = Tokenizer()\
    .setInputCols([&quot;sentence&quot;])\
    .setOutputCol(&quot;token&quot;)

word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\
    .setOutputCol(&quot;embeddings&quot;)

deid_ner = MedicalNerModel.load( &quot;ner_deid_large_emb_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;) \
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;]) \
    .setOutputCol(&quot;deid_ner&quot;)
    
deid_ner_converter = NerConverter() \
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;deid_ner&quot;]) \
    .setOutputCol(&quot;deid_ner_chunk&quot;)

deid_ner_pipeline = Pipeline(stages=[
    documentAssembler, 
    sentenceDetector,
    tokenizer,
    word_embeddings,
    deid_ner,
    deid_ner_converter])

empty_data = spark.createDataFrame([[&quot;&quot;]]).toDF(&quot;text&quot;)

deid_ner_model = deid_ner_pipeline.fit(empty_data)

results = deid_ner_model.transform(spark.createDataFrame([[&quot;&quot;&quot;HISTORY OF PRESENT ILLNESS: Mr. Smith is a 60-year-old white male veteran with multiple comorbidities, who has a history of bladder cancer diagnosed approximately two years ago by the VA Hospital. He underwent a resection there. He was to be admitted to the Day Hospital for cystectomy. He was seen in Urology Clinic and Radiology Clinic on 02/04/2003.	HOSPITAL COURSE: Mr. Smith presented to the Day Hospital in anticipation for Urology surgery. On evaluation, EKG, echocardiogram was abnormal, a Cardiology consult was obtained. A cardiac adenosine stress MRI was then proceeded, same was positive for inducible ischemia, mild-to-moderate inferolateral subendocardial infarction with peri-infarct ischemia. In addition, inducible ischemia seen in the inferior lateral septum. Mr. Smith underwent a left heart catheterization, which revealed two vessel coronary artery disease. The RCA, proximal was 95% stenosed and the distal 80% stenosed. The mid LAD was 85% stenosed and the distal LAD was 85% stenosed. There was four Multi-Link Vision bare metal stents placed to decrease all four lesions to 0%. Following intervention, Mr. Smith was admitted to 7 Ardmore Tower under Cardiology Service under the direction of Dr. Hart. Mr. Smith had a noncomplicated post-intervention hospital course. He was stable for discharge home on 02/07/2003 with instructions to take Plavix daily for one month and Urology is aware of the same.&quot;&quot;&quot;]]).toDF(&quot;text&quot;))
```
```scala
val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
    .setInputCols(&quot;document&quot;)
    .setOutputCol(&quot;sentence&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;sentence&quot;)
    .setOutputCol(&quot;token&quot;)
    
val word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))\
    .setOutputCol(&quot;embeddings&quot;)

val deid_ner_model = BertForTokenClassification.pretrained('ner_deid_large_emb_clinical_large' &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))
    .setOutputCol(&quot;deid_ner&quot;)

val deid_ner_converter = new NerConverter()
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;))
    .setOutputCol(&quot;deid_ner_chunk&quot;)

val deid_pipeline = new PipelineModel().setStages(Array(document_assembler, 
                                                   sentence_detector,
                                                   tokenizer,
                                                   word_embeddings,
                                                   deid_ner_model,
                                                   deid_ner_converter))

val data = Seq(&quot;&quot;&quot; &quot;&quot;&quot;HISTORY OF PRESENT ILLNESS: Mr. Smith is a 60-year-old white male veteran with multiple comorbidities, who has a history of bladder cancer diagnosed approximately two years ago by the VA Hospital. He underwent a resection there. He was to be admitted to the Day Hospital for cystectomy. He was seen in Urology Clinic and Radiology Clinic on 02/04/2003.	HOSPITAL COURSE: Mr. Smith presented to the Day Hospital in anticipation for Urology surgery. On evaluation, EKG, echocardiogram was abnormal, a Cardiology consult was obtained. A cardiac adenosine stress MRI was then proceeded, same was positive for inducible ischemia, mild-to-moderate inferolateral subendocardial infarction with peri-infarct ischemia. In addition, inducible ischemia seen in the inferior lateral septum. Mr. Smith underwent a left heart catheterization, which revealed two vessel coronary artery disease. The RCA, proximal was 95% stenosed and the distal 80% stenosed. The mid LAD was 85% stenosed and the distal LAD was 85% stenosed. There was four Multi-Link Vision bare metal stents placed to decrease all four lesions to 0%. Following intervention, Mr. Smith was admitted to 7 Ardmore Tower under Cardiology Service under the direction of Dr. Hart. Mr. Smith had a noncomplicated post-intervention hospital course. He was stable for discharge home on 02/07/2003 with instructions to take Plavix daily for one month and Urology is aware of the same.&quot;&quot;&quot;&quot;&quot;&quot;).toDS.toDF(&quot;text&quot;)

val result = model.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
|    | chunks          |   begin |   end | entities   |
|---:|:----------------|--------:|------:|:-----------|
|  0 | Smith           |      32 |    36 | NAME       |
|  1 | VA Hospital     |     184 |   194 | LOCATION   |
|  2 | Day Hospital    |     258 |   269 | LOCATION   |
|  3 | 02/04/2003      |     341 |   350 | DATE       |
|  4 | Smith           |     374 |   378 | NAME       |
|  5 | Day Hospital    |     397 |   408 | LOCATION   |
|  6 | Smith           |     782 |   786 | NAME       |
|  7 | Smith           |    1131 |  1135 | NAME       |
|  8 | 7 Ardmore Tower |    1153 |  1167 | LOCATION   |
|  9 | Hart            |    1221 |  1224 | NAME       |
| 10 | Smith           |    1231 |  1235 | NAME       |
| 11 | 02/07/2003      |    1329 |  1338 | DATE       |
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_deid_large_emb_clinical_large|
|Compatibility:|Healthcare NLP 4.3.2+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[document, token, embeddings]|
|Output Labels:|[ner]|
|Language:|en|
|Size:|2.8 MB|

## Benchmarking

```bash
                  precision recall    f1-score  support
     CONTACT       0.92      0.98      0.95       126
        DATE       0.99      0.99      0.99      2631
        NAME       0.98      0.98      0.98      2594
         AGE       0.99      0.94      0.97       284
    LOCATION       0.97      0.94      0.95      1511
          ID       0.91      0.96      0.94       213
  PROFESSION       0.81      0.84      0.83       160
   micro avg       0.97      0.97      0.97      7519
   macro avg       0.94      0.95      0.94      7519
weighted avg       0.97      0.97      0.97      7519
```</content><author><name>John Snow Labs</name></author><category term="ner" /><category term="licensed" /><category term="clinical" /><category term="phi" /><category term="deidentification" /><category term="english" /><category term="en" /><summary type="html">Description Description : Deidentification NER (Large) is a Named Entity Recognition model that annotates text to find protected health information that may need to be deidentified. The entities it annotates are Age, Contact, Date, Id, Location, Name, and Profession. This model is trained with the ‘embeddings_clinical_large’ word embeddings model, so be sure to use the same embeddings in the pipeline. We sticked to official annotation guideline (AG) for 2014 i2b2 Deid challenge while annotating new datasets for this model. All the details regarding the nuances and explanations for AG can be found here https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4978170/ Predicted Entities Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU documentAssembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) \ .setInputCols([&quot;document&quot;]) \ .setOutputCol(&quot;sentence&quot;) tokenizer = Tokenizer()\ .setInputCols([&quot;sentence&quot;])\ .setOutputCol(&quot;token&quot;) word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\ .setOutputCol(&quot;embeddings&quot;) deid_ner = MedicalNerModel.load( &quot;ner_deid_large_emb_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;) \ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;]) \ .setOutputCol(&quot;deid_ner&quot;) deid_ner_converter = NerConverter() \ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;deid_ner&quot;]) \ .setOutputCol(&quot;deid_ner_chunk&quot;) deid_ner_pipeline = Pipeline(stages=[ documentAssembler, sentenceDetector, tokenizer, word_embeddings, deid_ner, deid_ner_converter]) empty_data = spark.createDataFrame([[&quot;&quot;]]).toDF(&quot;text&quot;) deid_ner_model = deid_ner_pipeline.fit(empty_data) results = deid_ner_model.transform(spark.createDataFrame([[&quot;&quot;&quot;HISTORY OF PRESENT ILLNESS: Mr. Smith is a 60-year-old white male veteran with multiple comorbidities, who has a history of bladder cancer diagnosed approximately two years ago by the VA Hospital. He underwent a resection there. He was to be admitted to the Day Hospital for cystectomy. He was seen in Urology Clinic and Radiology Clinic on 02/04/2003. HOSPITAL COURSE: Mr. Smith presented to the Day Hospital in anticipation for Urology surgery. On evaluation, EKG, echocardiogram was abnormal, a Cardiology consult was obtained. A cardiac adenosine stress MRI was then proceeded, same was positive for inducible ischemia, mild-to-moderate inferolateral subendocardial infarction with peri-infarct ischemia. In addition, inducible ischemia seen in the inferior lateral septum. Mr. Smith underwent a left heart catheterization, which revealed two vessel coronary artery disease. The RCA, proximal was 95% stenosed and the distal 80% stenosed. The mid LAD was 85% stenosed and the distal LAD was 85% stenosed. There was four Multi-Link Vision bare metal stents placed to decrease all four lesions to 0%. Following intervention, Mr. Smith was admitted to 7 Ardmore Tower under Cardiology Service under the direction of Dr. Hart. Mr. Smith had a noncomplicated post-intervention hospital course. He was stable for discharge home on 02/07/2003 with instructions to take Plavix daily for one month and Urology is aware of the same.&quot;&quot;&quot;]]).toDF(&quot;text&quot;)) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols(&quot;document&quot;) .setOutputCol(&quot;sentence&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;sentence&quot;) .setOutputCol(&quot;token&quot;) val word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))\ .setOutputCol(&quot;embeddings&quot;) val deid_ner_model = BertForTokenClassification.pretrained('ner_deid_large_emb_clinical_large' &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;)) .setOutputCol(&quot;deid_ner&quot;) val deid_ner_converter = new NerConverter() .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;)) .setOutputCol(&quot;deid_ner_chunk&quot;) val deid_pipeline = new PipelineModel().setStages(Array(document_assembler, sentence_detector, tokenizer, word_embeddings, deid_ner_model, deid_ner_converter)) val data = Seq(&quot;&quot;&quot; &quot;&quot;&quot;HISTORY OF PRESENT ILLNESS: Mr. Smith is a 60-year-old white male veteran with multiple comorbidities, who has a history of bladder cancer diagnosed approximately two years ago by the VA Hospital. He underwent a resection there. He was to be admitted to the Day Hospital for cystectomy. He was seen in Urology Clinic and Radiology Clinic on 02/04/2003. HOSPITAL COURSE: Mr. Smith presented to the Day Hospital in anticipation for Urology surgery. On evaluation, EKG, echocardiogram was abnormal, a Cardiology consult was obtained. A cardiac adenosine stress MRI was then proceeded, same was positive for inducible ischemia, mild-to-moderate inferolateral subendocardial infarction with peri-infarct ischemia. In addition, inducible ischemia seen in the inferior lateral septum. Mr. Smith underwent a left heart catheterization, which revealed two vessel coronary artery disease. The RCA, proximal was 95% stenosed and the distal 80% stenosed. The mid LAD was 85% stenosed and the distal LAD was 85% stenosed. There was four Multi-Link Vision bare metal stents placed to decrease all four lesions to 0%. Following intervention, Mr. Smith was admitted to 7 Ardmore Tower under Cardiology Service under the direction of Dr. Hart. Mr. Smith had a noncomplicated post-intervention hospital course. He was stable for discharge home on 02/07/2003 with instructions to take Plavix daily for one month and Urology is aware of the same.&quot;&quot;&quot;&quot;&quot;&quot;).toDS.toDF(&quot;text&quot;) val result = model.fit(data).transform(data) Results | | chunks | begin | end | entities | |---:|:----------------|--------:|------:|:-----------| | 0 | Smith | 32 | 36 | NAME | | 1 | VA Hospital | 184 | 194 | LOCATION | | 2 | Day Hospital | 258 | 269 | LOCATION | | 3 | 02/04/2003 | 341 | 350 | DATE | | 4 | Smith | 374 | 378 | NAME | | 5 | Day Hospital | 397 | 408 | LOCATION | | 6 | Smith | 782 | 786 | NAME | | 7 | Smith | 1131 | 1135 | NAME | | 8 | 7 Ardmore Tower | 1153 | 1167 | LOCATION | | 9 | Hart | 1221 | 1224 | NAME | | 10 | Smith | 1231 | 1235 | NAME | | 11 | 02/07/2003 | 1329 | 1338 | DATE | Model Information Model Name: ner_deid_large_emb_clinical_large Compatibility: Healthcare NLP 4.3.2+ License: Licensed Edition: Official Input Labels: [document, token, embeddings] Output Labels: [ner] Language: en Size: 2.8 MB Benchmarking precision recall f1-score support CONTACT 0.92 0.98 0.95 126 DATE 0.99 0.99 0.99 2631 NAME 0.98 0.98 0.98 2594 AGE 0.99 0.94 0.97 284 LOCATION 0.97 0.94 0.95 1511 ID 0.91 0.96 0.94 213 PROFESSION 0.81 0.84 0.83 160 micro avg 0.97 0.97 0.97 7519 macro avg 0.94 0.95 0.94 7519 weighted avg 0.97 0.97 0.97 7519</summary></entry><entry><title type="html">Detect PHI (Deidentification)(clinical_medium)</title><link href="/2023/04/12/ner_deid_large_emb_clinical_medium_en.html" rel="alternate" type="text/html" title="Detect PHI (Deidentification)(clinical_medium)" /><published>2023-04-12T00:00:00+00:00</published><updated>2023-04-12T00:00:00+00:00</updated><id>/2023/04/12/ner_deid_large_emb_clinical_medium_en</id><content type="html" xml:base="/2023/04/12/ner_deid_large_emb_clinical_medium_en.html">## Description

Deidentification NER (Large) is a Named Entity Recognition model that annotates text to find protected health information that may need to be deidentified. The entities it annotates are Age, Contact, Date, Id, Location, Name, and Profession. This model is trained with the 'embeddings_clinical_medium word embeddings model, so be sure to use the same embeddings in the pipeline.

We sticked to official annotation guideline (AG) for 2014 i2b2 Deid challenge while annotating new datasets for this model. All the details regarding the nuances and explanations for AG can be found here https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4978170/

## Predicted Entities



{:.btn-box}
[Live Demo](https://demo.johnsnowlabs.com/healthcare/NER_DEMOGRAPHICS/){:.button.button-orange}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_deid_large_emb_clinical_medium_en_4.3.2_3.0_1681322146240.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_deid_large_emb_clinical_medium_en_4.3.2_3.0_1681322146240.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}

```python
documentAssembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) \
    .setInputCols([&quot;document&quot;]) \
    .setOutputCol(&quot;sentence&quot;) 

tokenizer = Tokenizer()\
    .setInputCols([&quot;sentence&quot;])\
    .setOutputCol(&quot;token&quot;)

word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\
    .setOutputCol(&quot;embeddings&quot;)

deid_ner = MedicalNerModel.pretrained('ner_deid_large_emb_clinical_large', &quot;en&quot;, &quot;clinical/models&quot;) \
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;]) \
    .setOutputCol(&quot;deid_ner&quot;)
    
deid_ner_converter = NerConverter() \
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;deid_ner&quot;]) \
    .setOutputCol(&quot;deid_ner_chunk&quot;)

deid_ner_pipeline = Pipeline(stages=[
    documentAssembler, 
    sentenceDetector,
    tokenizer,
    word_embeddings,
    deid_ner,
    deid_ner_converter])

empty_data = spark.createDataFrame([[&quot;&quot;]]).toDF(&quot;text&quot;)

deid_ner_model = deid_ner_pipeline.fit(empty_data)

results = deid_ner_model.transform(spark.createDataFrame([[&quot;&quot;&quot;HISTORY OF PRESENT ILLNESS: Mr. Smith is a 60-year-old white male veteran with multiple comorbidities, who has a history of bladder cancer diagnosed approximately two years ago by the VA Hospital. He underwent a resection there. He was to be admitted to the Day Hospital for cystectomy. He was seen in Urology Clinic and Radiology Clinic on 02/04/2003.	HOSPITAL COURSE: Mr. Smith presented to the Day Hospital in anticipation for Urology surgery. On evaluation, EKG, echocardiogram was abnormal, a Cardiology consult was obtained. A cardiac adenosine stress MRI was then proceeded, same was positive for inducible ischemia, mild-to-moderate inferolateral subendocardial infarction with peri-infarct ischemia. In addition, inducible ischemia seen in the inferior lateral septum. Mr. Smith underwent a left heart catheterization, which revealed two vessel coronary artery disease. The RCA, proximal was 95% stenosed and the distal 80% stenosed. The mid LAD was 85% stenosed and the distal LAD was 85% stenosed. There was four Multi-Link Vision bare metal stents placed to decrease all four lesions to 0%. Following intervention, Mr. Smith was admitted to 7 Ardmore Tower under Cardiology Service under the direction of Dr. Hart. Mr. Smith had a noncomplicated post-intervention hospital course. He was stable for discharge home on 02/07/2003 with instructions to take Plavix daily for one month and Urology is aware of the same.&quot;&quot;&quot;]]).toDF(&quot;text&quot;))
```
```scala
val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
    .setInputCols(&quot;document&quot;)
    .setOutputCol(&quot;sentence&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;sentence&quot;)
    .setOutputCol(&quot;token&quot;)
    
val word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))\
    .setOutputCol(&quot;embeddings&quot;)

val deid_ner_model = MedicalNerModel.pretrained('ner_deid_large_emb_clinical_large' , &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))
    .setOutputCol(&quot;deid_ner&quot;)

val deid_ner_converter = new NerConverter()
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;))
    .setOutputCol(&quot;deid_ner_chunk&quot;)

val deid_pipeline = new PipelineModel().setStages(Array(document_assembler, 
                                                   sentence_detector,
                                                   tokenizer,
                                                   word_embeddings,
                                                   deid_ner_model,
                                                   deid_ner_converter))

val data = Seq(&quot;&quot;&quot; &quot;&quot;&quot;HISTORY OF PRESENT ILLNESS: Mr. Smith is a 60-year-old white male veteran with multiple comorbidities, who has a history of bladder cancer diagnosed approximately two years ago by the VA Hospital. He underwent a resection there. He was to be admitted to the Day Hospital for cystectomy. He was seen in Urology Clinic and Radiology Clinic on 02/04/2003.	HOSPITAL COURSE: Mr. Smith presented to the Day Hospital in anticipation for Urology surgery. On evaluation, EKG, echocardiogram was abnormal, a Cardiology consult was obtained. A cardiac adenosine stress MRI was then proceeded, same was positive for inducible ischemia, mild-to-moderate inferolateral subendocardial infarction with peri-infarct ischemia. In addition, inducible ischemia seen in the inferior lateral septum. Mr. Smith underwent a left heart catheterization, which revealed two vessel coronary artery disease. The RCA, proximal was 95% stenosed and the distal 80% stenosed. The mid LAD was 85% stenosed and the distal LAD was 85% stenosed. There was four Multi-Link Vision bare metal stents placed to decrease all four lesions to 0%. Following intervention, Mr. Smith was admitted to 7 Ardmore Tower under Cardiology Service under the direction of Dr. Hart. Mr. Smith had a noncomplicated post-intervention hospital course. He was stable for discharge home on 02/07/2003 with instructions to take Plavix daily for one month and Urology is aware of the same.&quot;&quot;&quot;&quot;&quot;&quot;).toDS.toDF(&quot;text&quot;)

val result = model.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
|    | chunks          |   begin |   end | entities   |
|---:|:----------------|--------:|------:|:-----------|
|  0 | Day Hospital    |     258 |   269 | NAME       |
|  1 | Radiology       |     321 |   329 | LOCATION   |
|  2 | 02/04/2003      |     341 |   350 | DATE       |
|  3 | COURSE          |     362 |   367 | NAME       |
|  4 | Hospital        |     401 |   408 | NAME       |
|  5 | Urology surgery |     430 |   444 | NAME       |
|  6 | On              |     447 |   448 | NAME       |
|  7 | Following       |    1103 |  1111 | NAME       |
|  8 | 02/07/2003      |    1329 |  1338 | DATE       |
|  9 | Plavix daily    |    1366 |  1377 | NAME       |
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_deid_large_emb_clinical_medium|
|Compatibility:|Healthcare NLP 4.3.2+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[document, token, embeddings]|
|Output Labels:|[ner]|
|Language:|en|
|Size:|2.8 MB|

## Benchmarking

```bash
                  precision  recall   f1-score  support
     CONTACT       0.92      0.96      0.94       126
        DATE       0.99      0.99      0.99      2631
        NAME       0.97      0.98      0.97      2594
         AGE       0.96      0.94      0.95       284
    LOCATION       0.95      0.92      0.94      1511
          ID       0.93      0.95      0.94       213
  PROFESSION       0.84      0.73      0.78       160
   micro avg       0.97      0.96      0.97      7519
   macro avg       0.94      0.92      0.93      7519
weighted avg       0.97      0.96      0.96      7519
```</content><author><name>John Snow Labs</name></author><category term="ner" /><category term="clinical" /><category term="english" /><category term="licensed" /><category term="phi" /><category term="deidentification" /><category term="en" /><summary type="html">Description Deidentification NER (Large) is a Named Entity Recognition model that annotates text to find protected health information that may need to be deidentified. The entities it annotates are Age, Contact, Date, Id, Location, Name, and Profession. This model is trained with the ‘embeddings_clinical_medium word embeddings model, so be sure to use the same embeddings in the pipeline. We sticked to official annotation guideline (AG) for 2014 i2b2 Deid challenge while annotating new datasets for this model. All the details regarding the nuances and explanations for AG can be found here https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4978170/ Predicted Entities Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU documentAssembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) \ .setInputCols([&quot;document&quot;]) \ .setOutputCol(&quot;sentence&quot;) tokenizer = Tokenizer()\ .setInputCols([&quot;sentence&quot;])\ .setOutputCol(&quot;token&quot;) word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\ .setOutputCol(&quot;embeddings&quot;) deid_ner = MedicalNerModel.pretrained('ner_deid_large_emb_clinical_large', &quot;en&quot;, &quot;clinical/models&quot;) \ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;]) \ .setOutputCol(&quot;deid_ner&quot;) deid_ner_converter = NerConverter() \ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;deid_ner&quot;]) \ .setOutputCol(&quot;deid_ner_chunk&quot;) deid_ner_pipeline = Pipeline(stages=[ documentAssembler, sentenceDetector, tokenizer, word_embeddings, deid_ner, deid_ner_converter]) empty_data = spark.createDataFrame([[&quot;&quot;]]).toDF(&quot;text&quot;) deid_ner_model = deid_ner_pipeline.fit(empty_data) results = deid_ner_model.transform(spark.createDataFrame([[&quot;&quot;&quot;HISTORY OF PRESENT ILLNESS: Mr. Smith is a 60-year-old white male veteran with multiple comorbidities, who has a history of bladder cancer diagnosed approximately two years ago by the VA Hospital. He underwent a resection there. He was to be admitted to the Day Hospital for cystectomy. He was seen in Urology Clinic and Radiology Clinic on 02/04/2003. HOSPITAL COURSE: Mr. Smith presented to the Day Hospital in anticipation for Urology surgery. On evaluation, EKG, echocardiogram was abnormal, a Cardiology consult was obtained. A cardiac adenosine stress MRI was then proceeded, same was positive for inducible ischemia, mild-to-moderate inferolateral subendocardial infarction with peri-infarct ischemia. In addition, inducible ischemia seen in the inferior lateral septum. Mr. Smith underwent a left heart catheterization, which revealed two vessel coronary artery disease. The RCA, proximal was 95% stenosed and the distal 80% stenosed. The mid LAD was 85% stenosed and the distal LAD was 85% stenosed. There was four Multi-Link Vision bare metal stents placed to decrease all four lesions to 0%. Following intervention, Mr. Smith was admitted to 7 Ardmore Tower under Cardiology Service under the direction of Dr. Hart. Mr. Smith had a noncomplicated post-intervention hospital course. He was stable for discharge home on 02/07/2003 with instructions to take Plavix daily for one month and Urology is aware of the same.&quot;&quot;&quot;]]).toDF(&quot;text&quot;)) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols(&quot;document&quot;) .setOutputCol(&quot;sentence&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;sentence&quot;) .setOutputCol(&quot;token&quot;) val word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))\ .setOutputCol(&quot;embeddings&quot;) val deid_ner_model = MedicalNerModel.pretrained('ner_deid_large_emb_clinical_large' , &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;)) .setOutputCol(&quot;deid_ner&quot;) val deid_ner_converter = new NerConverter() .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;)) .setOutputCol(&quot;deid_ner_chunk&quot;) val deid_pipeline = new PipelineModel().setStages(Array(document_assembler, sentence_detector, tokenizer, word_embeddings, deid_ner_model, deid_ner_converter)) val data = Seq(&quot;&quot;&quot; &quot;&quot;&quot;HISTORY OF PRESENT ILLNESS: Mr. Smith is a 60-year-old white male veteran with multiple comorbidities, who has a history of bladder cancer diagnosed approximately two years ago by the VA Hospital. He underwent a resection there. He was to be admitted to the Day Hospital for cystectomy. He was seen in Urology Clinic and Radiology Clinic on 02/04/2003. HOSPITAL COURSE: Mr. Smith presented to the Day Hospital in anticipation for Urology surgery. On evaluation, EKG, echocardiogram was abnormal, a Cardiology consult was obtained. A cardiac adenosine stress MRI was then proceeded, same was positive for inducible ischemia, mild-to-moderate inferolateral subendocardial infarction with peri-infarct ischemia. In addition, inducible ischemia seen in the inferior lateral septum. Mr. Smith underwent a left heart catheterization, which revealed two vessel coronary artery disease. The RCA, proximal was 95% stenosed and the distal 80% stenosed. The mid LAD was 85% stenosed and the distal LAD was 85% stenosed. There was four Multi-Link Vision bare metal stents placed to decrease all four lesions to 0%. Following intervention, Mr. Smith was admitted to 7 Ardmore Tower under Cardiology Service under the direction of Dr. Hart. Mr. Smith had a noncomplicated post-intervention hospital course. He was stable for discharge home on 02/07/2003 with instructions to take Plavix daily for one month and Urology is aware of the same.&quot;&quot;&quot;&quot;&quot;&quot;).toDS.toDF(&quot;text&quot;) val result = model.fit(data).transform(data) Results | | chunks | begin | end | entities | |---:|:----------------|--------:|------:|:-----------| | 0 | Day Hospital | 258 | 269 | NAME | | 1 | Radiology | 321 | 329 | LOCATION | | 2 | 02/04/2003 | 341 | 350 | DATE | | 3 | COURSE | 362 | 367 | NAME | | 4 | Hospital | 401 | 408 | NAME | | 5 | Urology surgery | 430 | 444 | NAME | | 6 | On | 447 | 448 | NAME | | 7 | Following | 1103 | 1111 | NAME | | 8 | 02/07/2003 | 1329 | 1338 | DATE | | 9 | Plavix daily | 1366 | 1377 | NAME | Model Information Model Name: ner_deid_large_emb_clinical_medium Compatibility: Healthcare NLP 4.3.2+ License: Licensed Edition: Official Input Labels: [document, token, embeddings] Output Labels: [ner] Language: en Size: 2.8 MB Benchmarking precision recall f1-score support CONTACT 0.92 0.96 0.94 126 DATE 0.99 0.99 0.99 2631 NAME 0.97 0.98 0.97 2594 AGE 0.96 0.94 0.95 284 LOCATION 0.95 0.92 0.94 1511 ID 0.93 0.95 0.94 213 PROFESSION 0.84 0.73 0.78 160 micro avg 0.97 0.96 0.97 7519 macro avg 0.94 0.92 0.93 7519 weighted avg 0.97 0.96 0.96 7519</summary></entry><entry><title type="html">Detect Posology concepts (clinical_large)</title><link href="/2023/04/12/ner_posology_emb_clinical_large_en.html" rel="alternate" type="text/html" title="Detect Posology concepts (clinical_large)" /><published>2023-04-12T00:00:00+00:00</published><updated>2023-04-12T00:00:00+00:00</updated><id>/2023/04/12/ner_posology_emb_clinical_large_en</id><content type="html" xml:base="/2023/04/12/ner_posology_emb_clinical_large_en.html">## Description

This model detects Drug, Dosage, and administration instructions in text using pretrained NER model.

## Predicted Entities



{:.btn-box}
[Live Demo](https://demo.johnsnowlabs.com/healthcare/NER_POSOLOGY/){:.button.button-orange}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_posology_emb_clinical_large_en_4.3.2_3.0_1681303545819.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_posology_emb_clinical_large_en_4.3.2_3.0_1681303545819.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}

```python

documentAssembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) \
    .setInputCols([&quot;document&quot;]) \
    .setOutputCol(&quot;sentence&quot;) 

tokenizer = Tokenizer()\
    .setInputCols([&quot;sentence&quot;])\
    .setOutputCol(&quot;token&quot;)

word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\
    .setOutputCol(&quot;embeddings&quot;)

posology_ner = MedicalNerModel.pretrained(&quot;ner_posology_emb_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)) \
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;]) \
    .setOutputCol(&quot;posology_ner&quot;)
    
posology_ner_converter = NerConverter() \
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;posology_ner&quot;]) \
    .setOutputCol(&quot;posology_ner_chunk&quot;)

posology_ner_pipeline = Pipeline(stages=[
    documentAssembler, 
    sentenceDetector,
    tokenizer,
    word_embeddings,
    posology_ner,
    posology_ner_converter])

empty_data = spark.createDataFrame([[&quot;&quot;]]).toDF(&quot;text&quot;)

posology_ner_model = posology_ner_pipeline.fit(empty_data)

results = posology_ner_model.transform(spark.createDataFrame([[&quot;The patient has been advised Aspirin 81 milligrams QDay. insulin 50 units in a.m. HCTZ 50 mg QDay. Nitroglycerin 1/150 sublingually.&quot;]]).toDF(&quot;text&quot;))
```
```scala
val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
    .setInputCols(&quot;document&quot;)
    .setOutputCol(&quot;sentence&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;sentence&quot;)
    .setOutputCol(&quot;token&quot;)
    
val word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))\
    .setOutputCol(&quot;embeddings&quot;)

val posology_ner_model = MedicalNerModel.pretrained('ner_posology_emb_clinical_large' &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))
    .setOutputCol(&quot;posology_ner&quot;)

val posology_ner_converter = new NerConverter()
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;))
    .setOutputCol(&quot;posology_ner_chunk&quot;)

val posology_pipeline = new PipelineModel().setStages(Array(document_assembler, 
                                                   sentence_detector,
                                                   tokenizer,
                                                   word_embeddings,
                                                   posology_ner_model,
                                                   posology_ner_converter))

val data = Seq(&quot;&quot;&quot; The patient has been advised Aspirin 81 milligrams QDay. insulin 50 units in a.m. HCTZ 50 mg QDay. Nitroglycerin 1/150 sublingually.&quot;&quot;&quot;).toDS.toDF(&quot;text&quot;)

val result = model.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
|    | chunks        |   begin |   end | entities   |
|---:|:--------------|--------:|------:|:-----------|
|  0 | Aspirin       |     268 |   274 | DRUG       |
|  1 | 81 milligrams |     276 |   288 | STRENGTH   |
|  2 | QDay          |     290 |   293 | FREQUENCY  |
|  3 | insulin       |     296 |   302 | DRUG       |
|  4 | 50 units      |     304 |   311 | STRENGTH   |
|  5 | HCTZ          |     321 |   324 | DRUG       |
|  6 | 50 mg         |     326 |   330 | STRENGTH   |
|  7 | QDay          |     332 |   335 | FREQUENCY  |
|  8 | Nitroglycerin |     338 |   350 | DRUG       |
|  9 | 1/150         |     352 |   356 | STRENGTH   |
| 10 | sublingually  |     358 |   369 | FREQUENCY  |
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_posology_emb_clinical_large|
|Compatibility:|Healthcare NLP 4.3.2+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[document, token, embeddings]|
|Output Labels:|[ner]|
|Language:|en|
|Size:|2.8 MB|

## Benchmarking

```bash
                  precision  recall   f1-score  support
        DRUG       0.88      0.92      0.90      2252
    STRENGTH       0.89      0.92      0.91      2290
   FREQUENCY       0.92      0.90      0.91      1782
    DURATION       0.76      0.83      0.79       463
      DOSAGE       0.62      0.65      0.64       476
       ROUTE       0.88      0.88      0.88       394
        FORM       0.89      0.72      0.79       773
   micro avg       0.87      0.87      0.87      8430
   macro avg       0.83      0.83      0.83      8430
weighted avg       0.87      0.87      0.87      8430
```</content><author><name>John Snow Labs</name></author><category term="ner" /><category term="clinical" /><category term="licensed" /><category term="en" /><category term="posology" /><summary type="html">Description This model detects Drug, Dosage, and administration instructions in text using pretrained NER model. Predicted Entities Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU documentAssembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) \ .setInputCols([&quot;document&quot;]) \ .setOutputCol(&quot;sentence&quot;) tokenizer = Tokenizer()\ .setInputCols([&quot;sentence&quot;])\ .setOutputCol(&quot;token&quot;) word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\ .setOutputCol(&quot;embeddings&quot;) posology_ner = MedicalNerModel.pretrained(&quot;ner_posology_emb_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)) \ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;]) \ .setOutputCol(&quot;posology_ner&quot;) posology_ner_converter = NerConverter() \ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;posology_ner&quot;]) \ .setOutputCol(&quot;posology_ner_chunk&quot;) posology_ner_pipeline = Pipeline(stages=[ documentAssembler, sentenceDetector, tokenizer, word_embeddings, posology_ner, posology_ner_converter]) empty_data = spark.createDataFrame([[&quot;&quot;]]).toDF(&quot;text&quot;) posology_ner_model = posology_ner_pipeline.fit(empty_data) results = posology_ner_model.transform(spark.createDataFrame([[&quot;The patient has been advised Aspirin 81 milligrams QDay. insulin 50 units in a.m. HCTZ 50 mg QDay. Nitroglycerin 1/150 sublingually.&quot;]]).toDF(&quot;text&quot;)) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols(&quot;document&quot;) .setOutputCol(&quot;sentence&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;sentence&quot;) .setOutputCol(&quot;token&quot;) val word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))\ .setOutputCol(&quot;embeddings&quot;) val posology_ner_model = MedicalNerModel.pretrained('ner_posology_emb_clinical_large' &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;)) .setOutputCol(&quot;posology_ner&quot;) val posology_ner_converter = new NerConverter() .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;)) .setOutputCol(&quot;posology_ner_chunk&quot;) val posology_pipeline = new PipelineModel().setStages(Array(document_assembler, sentence_detector, tokenizer, word_embeddings, posology_ner_model, posology_ner_converter)) val data = Seq(&quot;&quot;&quot; The patient has been advised Aspirin 81 milligrams QDay. insulin 50 units in a.m. HCTZ 50 mg QDay. Nitroglycerin 1/150 sublingually.&quot;&quot;&quot;).toDS.toDF(&quot;text&quot;) val result = model.fit(data).transform(data) Results | | chunks | begin | end | entities | |---:|:--------------|--------:|------:|:-----------| | 0 | Aspirin | 268 | 274 | DRUG | | 1 | 81 milligrams | 276 | 288 | STRENGTH | | 2 | QDay | 290 | 293 | FREQUENCY | | 3 | insulin | 296 | 302 | DRUG | | 4 | 50 units | 304 | 311 | STRENGTH | | 5 | HCTZ | 321 | 324 | DRUG | | 6 | 50 mg | 326 | 330 | STRENGTH | | 7 | QDay | 332 | 335 | FREQUENCY | | 8 | Nitroglycerin | 338 | 350 | DRUG | | 9 | 1/150 | 352 | 356 | STRENGTH | | 10 | sublingually | 358 | 369 | FREQUENCY | Model Information Model Name: ner_posology_emb_clinical_large Compatibility: Healthcare NLP 4.3.2+ License: Licensed Edition: Official Input Labels: [document, token, embeddings] Output Labels: [ner] Language: en Size: 2.8 MB Benchmarking precision recall f1-score support DRUG 0.88 0.92 0.90 2252 STRENGTH 0.89 0.92 0.91 2290 FREQUENCY 0.92 0.90 0.91 1782 DURATION 0.76 0.83 0.79 463 DOSAGE 0.62 0.65 0.64 476 ROUTE 0.88 0.88 0.88 394 FORM 0.89 0.72 0.79 773 micro avg 0.87 0.87 0.87 8430 macro avg 0.83 0.83 0.83 8430 weighted avg 0.87 0.87 0.87 8430</summary></entry><entry><title type="html">Detect Posology concepts (clinical_medium)</title><link href="/2023/04/12/ner_posology_emb_clinical_medium_en.html" rel="alternate" type="text/html" title="Detect Posology concepts (clinical_medium)" /><published>2023-04-12T00:00:00+00:00</published><updated>2023-04-12T00:00:00+00:00</updated><id>/2023/04/12/ner_posology_emb_clinical_medium_en</id><content type="html" xml:base="/2023/04/12/ner_posology_emb_clinical_medium_en.html">## Description

This model detects Drug, Dosage, and administration instructions in text using pretrained NER model.

## Predicted Entities



{:.btn-box}
[Live Demo](https://demo.johnsnowlabs.com/healthcare/NER_POSOLOGY/){:.button.button-orange}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_posology_emb_clinical_medium_en_4.3.2_3.0_1681315841950.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_posology_emb_clinical_medium_en_4.3.2_3.0_1681315841950.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}

```python
documentAssembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) \
    .setInputCols([&quot;document&quot;]) \
    .setOutputCol(&quot;sentence&quot;) 

tokenizer = Tokenizer()\
    .setInputCols([&quot;sentence&quot;])\
    .setOutputCol(&quot;token&quot;)

word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\
    .setOutputCol(&quot;embeddings&quot;)

posology_ner = MedicalNerModel.pretrained('ner_posology_emb_clinical_medium' , &quot;en&quot;,  &quot;clinical/models&quot;) \
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;]) \
    .setOutputCol(&quot;posology_ner&quot;)
    
posology_ner_converter = NerConverter() \
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;posology_ner&quot;]) \
    .setOutputCol(&quot;posology_ner_chunk&quot;)

posology_ner_pipeline = Pipeline(stages=[
    documentAssembler, 
    sentenceDetector,
    tokenizer,
    word_embeddings,
    posology_ner,
    posology_ner_converter])

empty_data = spark.createDataFrame([[&quot;&quot;]]).toDF(&quot;text&quot;)

posology_ner_model = posology_ner_pipeline.fit(empty_data)

results = posology_ner_model.transform(spark.createDataFrame([[&quot;The patient has been advised Aspirin 81 milligrams QDay. insulin 50 units in a.m. HCTZ 50 mg QDay. Nitroglycerin 1/150 sublingually.&quot;]]).toDF(&quot;text&quot;))
```
```scala
val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
    .setInputCols(&quot;document&quot;)
    .setOutputCol(&quot;sentence&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;sentence&quot;)
    .setOutputCol(&quot;token&quot;)
    
val word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))\
    .setOutputCol(&quot;embeddings&quot;)

val posology_ner_model = MedicalNerModel.pretrained('ner_posology_emb_clinical_large' &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))
    .setOutputCol(&quot;posology_ner&quot;)

val posology_ner_converter = new NerConverter()
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;))
    .setOutputCol(&quot;posology_ner_chunk&quot;)

val posology_pipeline = new PipelineModel().setStages(Array(document_assembler, 
                                                   sentence_detector,
                                                   tokenizer,
                                                   word_embeddings,
                                                   posology_ner_model,
                                                   posology_ner_converter))

val data = Seq(&quot;&quot;&quot; The patient has been advised Aspirin 81 milligrams QDay. insulin 50 units in a.m. HCTZ 50 mg QDay. Nitroglycerin 1/150 sublingually.&quot;&quot;&quot;).toDS.toDF(&quot;text&quot;)

val result = model.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
|    | chunks        |   begin |   end | entities   |
|---:|:--------------|--------:|------:|:-----------|
|  0 | Aspirin       |      29 |    35 | DRUG       |
|  1 | 81 milligrams |      37 |    49 | STRENGTH   |
|  2 | QDay          |      51 |    54 | FREQUENCY  |
|  3 | insulin       |      57 |    63 | DRUG       |
|  4 | 50 units      |      65 |    72 | STRENGTH   |
|  5 | HCTZ          |      82 |    85 | DRUG       |
|  6 | 50 mg         |      87 |    91 | STRENGTH   |
|  7 | QDay          |      93 |    96 | FREQUENCY  |
|  8 | Nitroglycerin |      99 |   111 | DRUG       |
|  9 | 1/150         |     113 |   117 | STRENGTH   |
| 10 | sublingually  |     119 |   130 | ROUTE      |
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_posology_emb_clinical_medium|
|Compatibility:|Healthcare NLP 4.3.2+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[document, token, embeddings]|
|Output Labels:|[ner]|
|Language:|en|
|Size:|2.8 MB|

## Benchmarking

```bash
                  precision  recall   f1-score  support
        DRUG       0.91      0.91      0.91      2252
    STRENGTH       0.88      0.93      0.91      2290
   FREQUENCY       0.90      0.94      0.92      1782
    DURATION       0.78      0.84      0.81       463
      DOSAGE       0.66      0.63      0.65       476
       ROUTE       0.89      0.89      0.89       394
        FORM       0.86      0.76      0.81       773
   micro avg       0.87      0.89      0.88      8430
   macro avg       0.84      0.84      0.84      8430
weighted avg       0.87      0.89      0.88      8430
```</content><author><name>John Snow Labs</name></author><category term="ner" /><category term="licensed" /><category term="english" /><category term="clinical" /><category term="posology" /><category term="en" /><summary type="html">Description This model detects Drug, Dosage, and administration instructions in text using pretrained NER model. Predicted Entities Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU documentAssembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) \ .setInputCols([&quot;document&quot;]) \ .setOutputCol(&quot;sentence&quot;) tokenizer = Tokenizer()\ .setInputCols([&quot;sentence&quot;])\ .setOutputCol(&quot;token&quot;) word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\ .setOutputCol(&quot;embeddings&quot;) posology_ner = MedicalNerModel.pretrained('ner_posology_emb_clinical_medium' , &quot;en&quot;, &quot;clinical/models&quot;) \ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;]) \ .setOutputCol(&quot;posology_ner&quot;) posology_ner_converter = NerConverter() \ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;posology_ner&quot;]) \ .setOutputCol(&quot;posology_ner_chunk&quot;) posology_ner_pipeline = Pipeline(stages=[ documentAssembler, sentenceDetector, tokenizer, word_embeddings, posology_ner, posology_ner_converter]) empty_data = spark.createDataFrame([[&quot;&quot;]]).toDF(&quot;text&quot;) posology_ner_model = posology_ner_pipeline.fit(empty_data) results = posology_ner_model.transform(spark.createDataFrame([[&quot;The patient has been advised Aspirin 81 milligrams QDay. insulin 50 units in a.m. HCTZ 50 mg QDay. Nitroglycerin 1/150 sublingually.&quot;]]).toDF(&quot;text&quot;)) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols(&quot;document&quot;) .setOutputCol(&quot;sentence&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;sentence&quot;) .setOutputCol(&quot;token&quot;) val word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))\ .setOutputCol(&quot;embeddings&quot;) val posology_ner_model = MedicalNerModel.pretrained('ner_posology_emb_clinical_large' &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;)) .setOutputCol(&quot;posology_ner&quot;) val posology_ner_converter = new NerConverter() .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;)) .setOutputCol(&quot;posology_ner_chunk&quot;) val posology_pipeline = new PipelineModel().setStages(Array(document_assembler, sentence_detector, tokenizer, word_embeddings, posology_ner_model, posology_ner_converter)) val data = Seq(&quot;&quot;&quot; The patient has been advised Aspirin 81 milligrams QDay. insulin 50 units in a.m. HCTZ 50 mg QDay. Nitroglycerin 1/150 sublingually.&quot;&quot;&quot;).toDS.toDF(&quot;text&quot;) val result = model.fit(data).transform(data) Results | | chunks | begin | end | entities | |---:|:--------------|--------:|------:|:-----------| | 0 | Aspirin | 29 | 35 | DRUG | | 1 | 81 milligrams | 37 | 49 | STRENGTH | | 2 | QDay | 51 | 54 | FREQUENCY | | 3 | insulin | 57 | 63 | DRUG | | 4 | 50 units | 65 | 72 | STRENGTH | | 5 | HCTZ | 82 | 85 | DRUG | | 6 | 50 mg | 87 | 91 | STRENGTH | | 7 | QDay | 93 | 96 | FREQUENCY | | 8 | Nitroglycerin | 99 | 111 | DRUG | | 9 | 1/150 | 113 | 117 | STRENGTH | | 10 | sublingually | 119 | 130 | ROUTE | Model Information Model Name: ner_posology_emb_clinical_medium Compatibility: Healthcare NLP 4.3.2+ License: Licensed Edition: Official Input Labels: [document, token, embeddings] Output Labels: [ner] Language: en Size: 2.8 MB Benchmarking precision recall f1-score support DRUG 0.91 0.91 0.91 2252 STRENGTH 0.88 0.93 0.91 2290 FREQUENCY 0.90 0.94 0.92 1782 DURATION 0.78 0.84 0.81 463 DOSAGE 0.66 0.63 0.65 476 ROUTE 0.89 0.89 0.89 394 FORM 0.86 0.76 0.81 773 micro avg 0.87 0.89 0.88 8430 macro avg 0.84 0.84 0.84 8430 weighted avg 0.87 0.89 0.88 8430</summary></entry><entry><title type="html">Social Determinants of Health (clinical_large)</title><link href="/2023/04/12/ner_sdoh_emb_clinical_large_wip_en.html" rel="alternate" type="text/html" title="Social Determinants of Health (clinical_large)" /><published>2023-04-12T00:00:00+00:00</published><updated>2023-04-12T00:00:00+00:00</updated><id>/2023/04/12/ner_sdoh_emb_clinical_large_wip_en</id><content type="html" xml:base="/2023/04/12/ner_sdoh_emb_clinical_large_wip_en.html">## Description

This model extracts terminology related to Social Determinants of Health from various kinds of biomedical documents.

## Predicted Entities

`Access_To_Care`, `Age`, `Alcohol`, `Chidhood_Event`, `Communicable_Disease`, `Community_Safety`, `Diet`, `Disability`, `Eating_Disorder`, `Education`, `Employment`, `Environmental_Condition`, `Exercise`, `Family_Member`, `Financial_Status`, `Food_Insecurity`, `Gender`, `Geographic_Entity`, `Healthcare_Institution`, `Housing`, `Hyperlipidemia`, `Hypertension`, `Income`, `Insurance_Status`, `Language`, `Legal_Issues`, `Marital_Status`, `Mental_Health`, `Obesity`, `Other_Disease`, `Other_SDoH_Keywords`, `Population_Group`, `Quality_Of_Life`, `Race_Ethnicity`, `Sexual_Activity`, `Sexual_Orientation`, `Smoking`, `Social_Exclusion`, `Social_Support`, `Spiritual_Beliefs`, `Substance_Duration`, `Substance_Frequency`, `Substance_Quantity`, `Substance_Use`, `Transportation`, `Violence_Or_Abuse`

{:.btn-box}
[Live Demo](https://demo.johnsnowlabs.com/healthcare/SOCIAL_DETERMINANT_NER/){:.button.button-orange}
[Open in Colab](https://colab.research.google.com/github/JohnSnowLabs/spark-nlp-workshop/blob/master/tutorials/streamlit_notebooks/healthcare/SOCIAL_DETERMINANT_NER.ipynb){:.button.button-orange.button-orange-trans.co.button-icon}
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_sdoh_emb_clinical_large_wip_en_4.3.2_3.2_1681303888925.zip){:.button.button-orange}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_sdoh_emb_clinical_large_wip_en_4.3.2_3.2_1681303888925.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python
document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl&quot;, &quot;en&quot;)\
    .setInputCols([&quot;document&quot;])\
    .setOutputCol(&quot;sentence&quot;)

tokenizer = Tokenizer()\
    .setInputCols([&quot;sentence&quot;])\
    .setOutputCol(&quot;token&quot;)

clinical_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\
    .setOutputCol(&quot;embeddings&quot;)

ner_model = MedicalNerModel.pretrained(&quot;ner_sdoh_emb_clinical_large_wip&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;])\
    .setOutputCol(&quot;ner&quot;)

ner_converter = NerConverterInternal()\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;])\
    .setOutputCol(&quot;ner_chunk&quot;)

pipeline = Pipeline(stages=[
    document_assembler, 
    sentence_detector,
    tokenizer,
    clinical_embeddings,
    ner_model,
    ner_converter   
    ])

sample_texts = [[&quot;Smith is a 55 years old, divorced Mexcian American woman with financial problems. She speaks spanish. She lives in an apartment. She has been struggling with diabetes for the past 10 years and has recently been experiencing frequent hospitalizations due to uncontrolled blood sugar levels. Smith works as a cleaning assistant and does not have access to health insurance or paid sick leave. She has a son student at college. Pt with likely long-standing depression. She is aware she needs rehab. Pt reprots having her catholic faith as a means of support as well.  She has long history of etoh abuse, beginning in her teens. She reports she has been a daily drinker for 30 years, most recently drinking beer daily. She smokes a pack of cigarettes a day. She had DUI back in April and was due to be in court this week.&quot;]]
             
data = spark.createDataFrame(sample_texts).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)
```
```scala
val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl&quot;, &quot;en&quot;)
    .setInputCols(&quot;document&quot;)
    .setOutputCol(&quot;sentence&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;sentence&quot;)
    .setOutputCol(&quot;token&quot;)

val clinical_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))
    .setOutputCol(&quot;embeddings&quot;)

val ner_model = MedicalNerModel.pretrained(&quot;ner_sdoh_emb_clinical_large_wip&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;))
    .setOutputCol(&quot;ner&quot;)

val ner_converter = new NerConverterInternal()
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;))
    .setOutputCol(&quot;ner_chunk&quot;)

val pipeline = new Pipeline().setStages(Array(
    document_assembler, 
    sentence_detector,
    tokenizer,
    clinical_embeddings,
    ner_model,
    ner_converter   
))

val data = Seq(&quot;Smith is a 55 years old, divorced Mexcian American woman with financial problems. She speaks spanish. She lives in an apartment. She has been struggling with diabetes for the past 10 years and has recently been experiencing frequent hospitalizations due to uncontrolled blood sugar levels. Smith works as a cleaning assistant and does not have access to health insurance or paid sick leave. She has a son student at college. Pt with likely long-standing depression. She is aware she needs rehab. Pt reprots having her catholic faith as a means of support as well.  She has long history of etoh abuse, beginning in her teens. She reports she has been a daily drinker for 30 years, most recently drinking beer daily. She smokes a pack of cigarettes a day. She had DUI back in April and was due to be in court this week.&quot;).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
+------------------+-----+---+-------------------+
|chunk             |begin|end|ner_label          |
+------------------+-----+---+-------------------+
|55 years old      |11   |22 |Age                |
|divorced          |25   |32 |Marital_Status     |
|Mexcian           |34   |40 |Race_Ethnicity     |
|American          |42   |49 |Race_Ethnicity     |
|woman             |51   |55 |Gender             |
|financial problems|62   |79 |Financial_Status   |
|She               |82   |84 |Gender             |
|spanish           |93   |99 |Language           |
|She               |102  |104|Gender             |
|apartment         |118  |126|Housing            |
|She               |129  |131|Gender             |
|diabetes          |158  |165|Other_Disease      |
|hospitalizations  |233  |248|Other_SDoH_Keywords|
|cleaning assistant|307  |324|Employment         |
|health insurance  |354  |369|Insurance_Status   |
|She               |391  |393|Gender             |
|son               |401  |403|Family_Member      |
|student           |405  |411|Education          |
|college           |416  |422|Education          |
|depression        |454  |463|Mental_Health      |
|She               |466  |468|Gender             |
|she               |479  |481|Gender             |
|rehab             |489  |493|Access_To_Care     |
|her               |514  |516|Gender             |
|catholic faith    |518  |531|Spiritual_Beliefs  |
|support           |547  |553|Social_Support     |
|She               |565  |567|Gender             |
|etoh abuse        |589  |598|Alcohol            |
|her               |614  |616|Gender             |
|teens             |618  |622|Age                |
|She               |625  |627|Gender             |
|she               |637  |639|Gender             |
|daily             |652  |656|Substance_Quantity |
|drinker           |658  |664|Alcohol            |
|30 years          |670  |677|Substance_Duration |
|drinking beer     |694  |706|Alcohol            |
|daily             |708  |712|Substance_Frequency|
|She               |715  |717|Gender             |
|smokes            |719  |724|Smoking            |
|a pack            |726  |731|Substance_Quantity |
|cigarettes        |736  |745|Smoking            |
|a day             |747  |751|Substance_Frequency|
|She               |754  |756|Gender             |
|DUI               |762  |764|Legal_Issues       |
+------------------+-----+---+-------------------+

```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_sdoh_emb_clinical_large_wip|
|Compatibility:|Healthcare NLP 4.3.2+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[sentence, token, embeddings]|
|Output Labels:|[ner]|
|Language:|en|
|Size:|3.0 MB|
|Dependencies:|embeddings_clinical_large|

## References

Internal SHOP Project

## Benchmarking

```bash
                  label  precision    recall  f1-score   support
             Employment       0.94      0.96      0.95      2075
         Social_Support       0.91      0.90      0.90       658
    Other_SDoH_Keywords       0.82      0.87      0.85       259
 Healthcare_Institution       0.99      0.95      0.97       781
                Alcohol       0.96      0.97      0.96       258
                 Gender       0.99      0.99      0.99      4957
          Other_Disease       0.89      0.94      0.91       583
         Access_To_Care       0.86      0.88      0.87       520
          Mental_Health       0.89      0.81      0.85       494
                    Age       0.92      0.96      0.94       433
         Marital_Status       1.00      1.00      1.00        92
     Substance_Quantity       0.88      0.86      0.87        58
          Substance_Use       0.91      0.97      0.94       192
          Family_Member       0.97      0.99      0.98      2094
       Financial_Status       0.86      0.65      0.74       124
         Race_Ethnicity       0.93      0.93      0.93        27
       Insurance_Status       0.93      0.87      0.90        85
      Spiritual_Beliefs       0.86      0.81      0.83        52
                Housing       0.88      0.85      0.87       400
      Geographic_Entity       0.86      0.88      0.87       113
             Disability       0.93      0.93      0.93        44
        Quality_Of_Life       0.89      0.75      0.81        67
                 Income       0.89      0.77      0.83        31
              Education       0.85      0.88      0.86        58
         Transportation       0.86      0.89      0.88        57
           Legal_Issues       0.72      0.91      0.80        47
                Smoking       0.98      0.97      0.98        66
    Substance_Frequency       0.93      0.75      0.83        57
           Hypertension       1.00      1.00      1.00        21
      Violence_Or_Abuse       0.83      0.62      0.71        63
               Exercise       0.96      0.88      0.92        57
                   Diet       0.95      0.87      0.91        70
     Sexual_Orientation       0.68      1.00      0.81        13
               Language       0.89      0.73      0.80        22
       Social_Exclusion       0.96      0.90      0.93        29
     Substance_Duration       0.75      0.85      0.80        39
   Communicable_Disease       1.00      0.84      0.91        31
         Chidhood_Event       0.88      0.61      0.72        23
       Community_Safety       0.95      0.93      0.94        44
       Population_Group       0.89      0.62      0.73        13
         Hyperlipidemia       0.78      1.00      0.88         7
        Food_Insecurity       1.00      0.93      0.96        29
        Eating_Disorder       0.67      0.92      0.77        13
        Sexual_Activity       0.84      0.90      0.87        29
Environmental_Condition       1.00      1.00      1.00        20
                Obesity       1.00      1.00      1.00        12
              micro-avg       0.95      0.95      0.95     15217
              macro-avg       0.90      0.88      0.88     15217
           weighted-avg       0.95      0.95      0.95     15217
```</content><author><name>John Snow Labs</name></author><category term="en" /><category term="clinical_large" /><category term="social_determinants" /><category term="public_health" /><category term="ner" /><category term="sdoh" /><category term="licensed" /><summary type="html">Description This model extracts terminology related to Social Determinants of Health from various kinds of biomedical documents. Predicted Entities Access_To_Care, Age, Alcohol, Chidhood_Event, Communicable_Disease, Community_Safety, Diet, Disability, Eating_Disorder, Education, Employment, Environmental_Condition, Exercise, Family_Member, Financial_Status, Food_Insecurity, Gender, Geographic_Entity, Healthcare_Institution, Housing, Hyperlipidemia, Hypertension, Income, Insurance_Status, Language, Legal_Issues, Marital_Status, Mental_Health, Obesity, Other_Disease, Other_SDoH_Keywords, Population_Group, Quality_Of_Life, Race_Ethnicity, Sexual_Activity, Sexual_Orientation, Smoking, Social_Exclusion, Social_Support, Spiritual_Beliefs, Substance_Duration, Substance_Frequency, Substance_Quantity, Substance_Use, Transportation, Violence_Or_Abuse Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl&quot;, &quot;en&quot;)\ .setInputCols([&quot;document&quot;])\ .setOutputCol(&quot;sentence&quot;) tokenizer = Tokenizer()\ .setInputCols([&quot;sentence&quot;])\ .setOutputCol(&quot;token&quot;) clinical_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\ .setOutputCol(&quot;embeddings&quot;) ner_model = MedicalNerModel.pretrained(&quot;ner_sdoh_emb_clinical_large_wip&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;])\ .setOutputCol(&quot;ner&quot;) ner_converter = NerConverterInternal()\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;])\ .setOutputCol(&quot;ner_chunk&quot;) pipeline = Pipeline(stages=[ document_assembler, sentence_detector, tokenizer, clinical_embeddings, ner_model, ner_converter ]) sample_texts = [[&quot;Smith is a 55 years old, divorced Mexcian American woman with financial problems. She speaks spanish. She lives in an apartment. She has been struggling with diabetes for the past 10 years and has recently been experiencing frequent hospitalizations due to uncontrolled blood sugar levels. Smith works as a cleaning assistant and does not have access to health insurance or paid sick leave. She has a son student at college. Pt with likely long-standing depression. She is aware she needs rehab. Pt reprots having her catholic faith as a means of support as well. She has long history of etoh abuse, beginning in her teens. She reports she has been a daily drinker for 30 years, most recently drinking beer daily. She smokes a pack of cigarettes a day. She had DUI back in April and was due to be in court this week.&quot;]] data = spark.createDataFrame(sample_texts).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl&quot;, &quot;en&quot;) .setInputCols(&quot;document&quot;) .setOutputCol(&quot;sentence&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;sentence&quot;) .setOutputCol(&quot;token&quot;) val clinical_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;)) .setOutputCol(&quot;embeddings&quot;) val ner_model = MedicalNerModel.pretrained(&quot;ner_sdoh_emb_clinical_large_wip&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;)) .setOutputCol(&quot;ner&quot;) val ner_converter = new NerConverterInternal() .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;)) .setOutputCol(&quot;ner_chunk&quot;) val pipeline = new Pipeline().setStages(Array( document_assembler, sentence_detector, tokenizer, clinical_embeddings, ner_model, ner_converter )) val data = Seq(&quot;Smith is a 55 years old, divorced Mexcian American woman with financial problems. She speaks spanish. She lives in an apartment. She has been struggling with diabetes for the past 10 years and has recently been experiencing frequent hospitalizations due to uncontrolled blood sugar levels. Smith works as a cleaning assistant and does not have access to health insurance or paid sick leave. She has a son student at college. Pt with likely long-standing depression. She is aware she needs rehab. Pt reprots having her catholic faith as a means of support as well. She has long history of etoh abuse, beginning in her teens. She reports she has been a daily drinker for 30 years, most recently drinking beer daily. She smokes a pack of cigarettes a day. She had DUI back in April and was due to be in court this week.&quot;).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Results +------------------+-----+---+-------------------+ |chunk |begin|end|ner_label | +------------------+-----+---+-------------------+ |55 years old |11 |22 |Age | |divorced |25 |32 |Marital_Status | |Mexcian |34 |40 |Race_Ethnicity | |American |42 |49 |Race_Ethnicity | |woman |51 |55 |Gender | |financial problems|62 |79 |Financial_Status | |She |82 |84 |Gender | |spanish |93 |99 |Language | |She |102 |104|Gender | |apartment |118 |126|Housing | |She |129 |131|Gender | |diabetes |158 |165|Other_Disease | |hospitalizations |233 |248|Other_SDoH_Keywords| |cleaning assistant|307 |324|Employment | |health insurance |354 |369|Insurance_Status | |She |391 |393|Gender | |son |401 |403|Family_Member | |student |405 |411|Education | |college |416 |422|Education | |depression |454 |463|Mental_Health | |She |466 |468|Gender | |she |479 |481|Gender | |rehab |489 |493|Access_To_Care | |her |514 |516|Gender | |catholic faith |518 |531|Spiritual_Beliefs | |support |547 |553|Social_Support | |She |565 |567|Gender | |etoh abuse |589 |598|Alcohol | |her |614 |616|Gender | |teens |618 |622|Age | |She |625 |627|Gender | |she |637 |639|Gender | |daily |652 |656|Substance_Quantity | |drinker |658 |664|Alcohol | |30 years |670 |677|Substance_Duration | |drinking beer |694 |706|Alcohol | |daily |708 |712|Substance_Frequency| |She |715 |717|Gender | |smokes |719 |724|Smoking | |a pack |726 |731|Substance_Quantity | |cigarettes |736 |745|Smoking | |a day |747 |751|Substance_Frequency| |She |754 |756|Gender | |DUI |762 |764|Legal_Issues | +------------------+-----+---+-------------------+ Model Information Model Name: ner_sdoh_emb_clinical_large_wip Compatibility: Healthcare NLP 4.3.2+ License: Licensed Edition: Official Input Labels: [sentence, token, embeddings] Output Labels: [ner] Language: en Size: 3.0 MB Dependencies: embeddings_clinical_large References Internal SHOP Project Benchmarking label precision recall f1-score support Employment 0.94 0.96 0.95 2075 Social_Support 0.91 0.90 0.90 658 Other_SDoH_Keywords 0.82 0.87 0.85 259 Healthcare_Institution 0.99 0.95 0.97 781 Alcohol 0.96 0.97 0.96 258 Gender 0.99 0.99 0.99 4957 Other_Disease 0.89 0.94 0.91 583 Access_To_Care 0.86 0.88 0.87 520 Mental_Health 0.89 0.81 0.85 494 Age 0.92 0.96 0.94 433 Marital_Status 1.00 1.00 1.00 92 Substance_Quantity 0.88 0.86 0.87 58 Substance_Use 0.91 0.97 0.94 192 Family_Member 0.97 0.99 0.98 2094 Financial_Status 0.86 0.65 0.74 124 Race_Ethnicity 0.93 0.93 0.93 27 Insurance_Status 0.93 0.87 0.90 85 Spiritual_Beliefs 0.86 0.81 0.83 52 Housing 0.88 0.85 0.87 400 Geographic_Entity 0.86 0.88 0.87 113 Disability 0.93 0.93 0.93 44 Quality_Of_Life 0.89 0.75 0.81 67 Income 0.89 0.77 0.83 31 Education 0.85 0.88 0.86 58 Transportation 0.86 0.89 0.88 57 Legal_Issues 0.72 0.91 0.80 47 Smoking 0.98 0.97 0.98 66 Substance_Frequency 0.93 0.75 0.83 57 Hypertension 1.00 1.00 1.00 21 Violence_Or_Abuse 0.83 0.62 0.71 63 Exercise 0.96 0.88 0.92 57 Diet 0.95 0.87 0.91 70 Sexual_Orientation 0.68 1.00 0.81 13 Language 0.89 0.73 0.80 22 Social_Exclusion 0.96 0.90 0.93 29 Substance_Duration 0.75 0.85 0.80 39 Communicable_Disease 1.00 0.84 0.91 31 Chidhood_Event 0.88 0.61 0.72 23 Community_Safety 0.95 0.93 0.94 44 Population_Group 0.89 0.62 0.73 13 Hyperlipidemia 0.78 1.00 0.88 7 Food_Insecurity 1.00 0.93 0.96 29 Eating_Disorder 0.67 0.92 0.77 13 Sexual_Activity 0.84 0.90 0.87 29 Environmental_Condition 1.00 1.00 1.00 20 Obesity 1.00 1.00 1.00 12 micro-avg 0.95 0.95 0.95 15217 macro-avg 0.90 0.88 0.88 15217 weighted-avg 0.95 0.95 0.95 15217</summary></entry></feed>