<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2023-07-11T20:46:55+00:00</updated><id>/feed.xml</id><title type="html">Spark NLP</title><subtitle>High Performance NLP with Apache Spark
</subtitle><author><name>{&quot;type&quot;=&gt;nil, &quot;name&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;avatar&quot;=&gt;nil, &quot;bio&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;facebook&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil, &quot;weibo&quot;=&gt;nil, &quot;googleplus&quot;=&gt;nil, &quot;telegram&quot;=&gt;nil, &quot;medium&quot;=&gt;nil, &quot;zhihu&quot;=&gt;nil, &quot;douban&quot;=&gt;nil, &quot;linkedin&quot;=&gt;nil, &quot;github&quot;=&gt;nil, &quot;npm&quot;=&gt;nil}</name></author><entry><title type="html">Clinical Deidentification</title><link href="/2023/07/11/clinical_deidentification_en.html" rel="alternate" type="text/html" title="Clinical Deidentification" /><published>2023-07-11T00:00:00+00:00</published><updated>2023-07-11T00:00:00+00:00</updated><id>/2023/07/11/clinical_deidentification_en</id><content type="html" xml:base="/2023/07/11/clinical_deidentification_en.html">## Description

This pipeline can be used to deidentify PHI information from medical texts. The PHI information will be masked and obfuscated in the resulting text. The pipeline can mask and obfuscate `AGE`, `CONTACT`, `DATE`, `ID`, `LOCATION`, `NAME`, `PROFESSION`, `CITY`, `COUNTRY`, `DOCTOR`, `HOSPITAL`, `IDNUM`, `MEDICALRECORD`, `ORGANIZATION`, `PATIENT`, `PHONE`, `PROFESSION`,  `STREET`, `USERNAME`, `ZIP`, `ACCOUNT`, `LICENSE`, `VIN`, `SSN`, `DLN`, `PLATE`, `IPADDR` entities.

{:.btn-box}
[Live Demo](https://demo.johnsnowlabs.com/healthcare/DEID_PHI_TEXT_MULTI/){:.button.button-orange}
[Open in Colab](https://colab.research.google.com/github/JohnSnowLabs/spark-nlp-workshop/blob/master/tutorials/streamlit_notebooks/healthcare/DEID_PHI_TEXT_MULTI.ipynb){:.button.button-orange.button-orange-trans.co.button-icon}
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/clinical_deidentification_en_5.0.0_3.2_1689070825101.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/clinical_deidentification_en_5.0.0_3.2_1689070825101.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python
from sparknlp.pretrained import PretrainedPipeline

deid_pipeline = PretrainedPipeline(&quot;clinical_deidentification&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

deid_pipeline.annotate(&quot;&quot;&quot;Record date : 2093-01-13, Name : Hendrickson, ORA, 25 years-old, #719435. IP: 203.120.223.13, the driver's license no:A334455B. The SSN: 324598674 and e-mail: hale@gmail.com. Patient's VIN : 1HGBH41JXMN109286. Date : 01/13/93, PCP : David Hale.&quot;&quot;&quot;)
```
```scala
import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val deid_pipeline = PretrainedPipeline(&quot;clinical_deidentification&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val result = deid_pipeline.annotate(&quot;&quot;&quot;Record date : 2093-01-13, Name : Hendrickson, ORA, 25 years-old, #719435. IP: 203.120.223.13, the driver's license no:A334455B. The SSN: 324598674 and e-mail: hale@gmail.com. Patient's VIN : 1HGBH41JXMN109286. Date : 01/13/93, PCP : David Hale.&quot;&quot;&quot;)
```
&lt;/div&gt;

## Results

```bash
{'masked': ['Record date : &lt;DATE&gt;, Name : &lt;PATIENT&gt;, &lt;AGE&gt; years-old, &lt;MEDICALRECORD&gt;.',
  &quot;IP: &lt;IPADDR&gt;, the driver's license &lt;DLN&gt;.&quot;,
  'The SSN: &lt;SSN&gt; and e-mail: &lt;EMAIL&gt;.',
  &quot;Patient's VIN : &lt;VIN&gt;.&quot;,
  'Date : &lt;DATE&gt;, PCP : &lt;DOCTOR&gt;.'],
 'obfuscated': ['Record date : 2093-02-25, Name : Albertine Grates, 30 years-old, #100581.',
  &quot;IP: 003.003.003.003, the driver's license EL:I131599D.&quot;,
  'The SSN: 060014689 and e-mail: Tory@yahoo.com.',
  &quot;Patient's VIN : 8JFSU78UTYV898505.&quot;,
  'Date : 02/25/93, PCP : Elvera Maria.'],
 'ner_chunk': ['2093-01-13',
  'Hendrickson, ORA',
  '25',
  '#719435',
  '203.120.223.13',
  'no:A334455B',
  '324598674',
  'hale@gmail.com',
  '1HGBH41JXMN109286',
  '01/13/93',
  'David Hale'],
 'masked_fixed_length_chars': ['Record date : ****, Name : ****, **** years-old, ****.',
  &quot;IP: ****, the driver's license ****.&quot;,
  'The SSN: **** and e-mail: ****.',
  &quot;Patient's VIN : ****.&quot;,
  'Date : ****, PCP : ****.'],
 'sentence': ['Record date : 2093-01-13, Name : Hendrickson, ORA, 25 years-old, #719435.',
  &quot;IP: 203.120.223.13, the driver's license no:A334455B.&quot;,
  'The SSN: 324598674 and e-mail: hale@gmail.com.',
  &quot;Patient's VIN : 1HGBH41JXMN109286.&quot;,
  'Date : 01/13/93, PCP : David Hale.'],
 'masked_with_chars': ['Record date : [********], Name : [**************], ** years-old, [*****].',
  &quot;IP: [************], the driver's license [*********].&quot;,
  'The SSN: [*******] and e-mail: [************].',
  &quot;Patient's VIN : [***************].&quot;,
  'Date : [******], PCP : [********].']}
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|clinical_deidentification|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 5.0.0+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|1.7 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverter
- MedicalNerModel
- NerConverter
- ChunkMergeModel
- ContextualParserModel
- ContextualParserModel
- ContextualParserModel
- ContextualParserModel
- ContextualParserModel
- ContextualParserModel
- TextMatcherModel
- ContextualParserModel
- RegexMatcherModel
- ContextualParserModel
- ContextualParserModel
- ContextualParserModel
- ContextualParserModel
- ContextualParserModel
- ContextualParserModel
- ChunkMergeModel
- ChunkMergeModel
- DeIdentificationModel
- DeIdentificationModel
- DeIdentificationModel
- DeIdentificationModel
- Finisher</content><author><name>John Snow Labs</name></author><category term="deidentification" /><category term="licensed" /><category term="en" /><category term="pipeline" /><category term="clinical" /><category term="deid" /><summary type="html">Description This pipeline can be used to deidentify PHI information from medical texts. The PHI information will be masked and obfuscated in the resulting text. The pipeline can mask and obfuscate AGE, CONTACT, DATE, ID, LOCATION, NAME, PROFESSION, CITY, COUNTRY, DOCTOR, HOSPITAL, IDNUM, MEDICALRECORD, ORGANIZATION, PATIENT, PHONE, PROFESSION, STREET, USERNAME, ZIP, ACCOUNT, LICENSE, VIN, SSN, DLN, PLATE, IPADDR entities. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU from sparknlp.pretrained import PretrainedPipeline deid_pipeline = PretrainedPipeline(&quot;clinical_deidentification&quot;, &quot;en&quot;, &quot;clinical/models&quot;) deid_pipeline.annotate(&quot;&quot;&quot;Record date : 2093-01-13, Name : Hendrickson, ORA, 25 years-old, #719435. IP: 203.120.223.13, the driver's license no:A334455B. The SSN: 324598674 and e-mail: hale@gmail.com. Patient's VIN : 1HGBH41JXMN109286. Date : 01/13/93, PCP : David Hale.&quot;&quot;&quot;) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val deid_pipeline = PretrainedPipeline(&quot;clinical_deidentification&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val result = deid_pipeline.annotate(&quot;&quot;&quot;Record date : 2093-01-13, Name : Hendrickson, ORA, 25 years-old, #719435. IP: 203.120.223.13, the driver's license no:A334455B. The SSN: 324598674 and e-mail: hale@gmail.com. Patient's VIN : 1HGBH41JXMN109286. Date : 01/13/93, PCP : David Hale.&quot;&quot;&quot;) Results {'masked': ['Record date : &amp;lt;DATE&amp;gt;, Name : &amp;lt;PATIENT&amp;gt;, &amp;lt;AGE&amp;gt; years-old, &amp;lt;MEDICALRECORD&amp;gt;.', &quot;IP: &amp;lt;IPADDR&amp;gt;, the driver's license &amp;lt;DLN&amp;gt;.&quot;, 'The SSN: &amp;lt;SSN&amp;gt; and e-mail: &amp;lt;EMAIL&amp;gt;.', &quot;Patient's VIN : &amp;lt;VIN&amp;gt;.&quot;, 'Date : &amp;lt;DATE&amp;gt;, PCP : &amp;lt;DOCTOR&amp;gt;.'], 'obfuscated': ['Record date : 2093-02-25, Name : Albertine Grates, 30 years-old, #100581.', &quot;IP: 003.003.003.003, the driver's license EL:I131599D.&quot;, 'The SSN: 060014689 and e-mail: Tory@yahoo.com.', &quot;Patient's VIN : 8JFSU78UTYV898505.&quot;, 'Date : 02/25/93, PCP : Elvera Maria.'], 'ner_chunk': ['2093-01-13', 'Hendrickson, ORA', '25', '#719435', '203.120.223.13', 'no:A334455B', '324598674', 'hale@gmail.com', '1HGBH41JXMN109286', '01/13/93', 'David Hale'], 'masked_fixed_length_chars': ['Record date : ****, Name : ****, **** years-old, ****.', &quot;IP: ****, the driver's license ****.&quot;, 'The SSN: **** and e-mail: ****.', &quot;Patient's VIN : ****.&quot;, 'Date : ****, PCP : ****.'], 'sentence': ['Record date : 2093-01-13, Name : Hendrickson, ORA, 25 years-old, #719435.', &quot;IP: 203.120.223.13, the driver's license no:A334455B.&quot;, 'The SSN: 324598674 and e-mail: hale@gmail.com.', &quot;Patient's VIN : 1HGBH41JXMN109286.&quot;, 'Date : 01/13/93, PCP : David Hale.'], 'masked_with_chars': ['Record date : [********], Name : [**************], ** years-old, [*****].', &quot;IP: [************], the driver's license [*********].&quot;, 'The SSN: [*******] and e-mail: [************].', &quot;Patient's VIN : [***************].&quot;, 'Date : [******], PCP : [********].']} Model Information Model Name: clinical_deidentification Type: pipeline Compatibility: Healthcare NLP 5.0.0+ License: Licensed Edition: Official Language: en Size: 1.7 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverter MedicalNerModel NerConverter ChunkMergeModel ContextualParserModel ContextualParserModel ContextualParserModel ContextualParserModel ContextualParserModel ContextualParserModel TextMatcherModel ContextualParserModel RegexMatcherModel ContextualParserModel ContextualParserModel ContextualParserModel ContextualParserModel ContextualParserModel ContextualParserModel ChunkMergeModel ChunkMergeModel DeIdentificationModel DeIdentificationModel DeIdentificationModel DeIdentificationModel Finisher</summary></entry><entry><title type="html">Clinical Deidentification</title><link href="/2023/07/11/clinical_deidentification_en.html" rel="alternate" type="text/html" title="Clinical Deidentification" /><published>2023-07-11T00:00:00+00:00</published><updated>2023-07-11T00:00:00+00:00</updated><id>/2023/07/11/clinical_deidentification_en</id><content type="html" xml:base="/2023/07/11/clinical_deidentification_en.html">## Description

This pipeline can be used to deidentify PHI information from medical texts. The PHI information will be masked and obfuscated in the resulting text. The pipeline can mask and obfuscate `AGE`, `CONTACT`, `DATE`, `ID`, `LOCATION`, `NAME`, `PROFESSION`, `CITY`, `COUNTRY`, `DOCTOR`, `HOSPITAL`, `IDNUM`, `MEDICALRECORD`, `ORGANIZATION`, `PATIENT`, `PHONE`, `PROFESSION`,  `STREET`, `USERNAME`, `ZIP`, `ACCOUNT`, `LICENSE`, `VIN`, `SSN`, `DLN`, `PLATE`, `IPADDR` entities.

{:.btn-box}
[Live Demo](https://demo.johnsnowlabs.com/healthcare/DEID_PHI_TEXT_MULTI/){:.button.button-orange}
[Open in Colab](https://colab.research.google.com/github/JohnSnowLabs/spark-nlp-workshop/blob/master/tutorials/streamlit_notebooks/healthcare/DEID_PHI_TEXT_MULTI.ipynb){:.button.button-orange.button-orange-trans.co.button-icon}
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/clinical_deidentification_en_5.0.0_3.4_1689073179922.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/clinical_deidentification_en_5.0.0_3.4_1689073179922.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python
from sparknlp.pretrained import PretrainedPipeline

deid_pipeline = PretrainedPipeline(&quot;clinical_deidentification&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

deid_pipeline.annotate(&quot;&quot;&quot;Record date : 2093-01-13, Name : Hendrickson, ORA, 25 years-old, #719435. IP: 203.120.223.13, the driver's license no:A334455B. The SSN: 324598674 and e-mail: hale@gmail.com. Patient's VIN : 1HGBH41JXMN109286. Date : 01/13/93, PCP : David Hale.&quot;&quot;&quot;)
```
```scala
import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val deid_pipeline = PretrainedPipeline(&quot;clinical_deidentification&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val result = deid_pipeline.annotate(&quot;&quot;&quot;Record date : 2093-01-13, Name : Hendrickson, ORA, 25 years-old, #719435. IP: 203.120.223.13, the driver's license no:A334455B. The SSN: 324598674 and e-mail: hale@gmail.com. Patient's VIN : 1HGBH41JXMN109286. Date : 01/13/93, PCP : David Hale.&quot;&quot;&quot;)
```
&lt;/div&gt;

## Results

```bash
{'masked': ['Record date : &lt;DATE&gt;, Name : &lt;PATIENT&gt;, &lt;AGE&gt; years-old, &lt;MEDICALRECORD&gt;.',
  &quot;IP: &lt;IPADDR&gt;, the driver's license &lt;DLN&gt;.&quot;,
  'The SSN: &lt;SSN&gt; and e-mail: &lt;EMAIL&gt;.',
  &quot;Patient's VIN : &lt;VIN&gt;.&quot;,
  'Date : &lt;DATE&gt;, PCP : &lt;DOCTOR&gt;.'],
 'obfuscated': ['Record date : 2093-02-25, Name : Albertine Grates, 30 years-old, #100581.',
  &quot;IP: 003.003.003.003, the driver's license EL:I131599D.&quot;,
  'The SSN: 060014689 and e-mail: Tory@yahoo.com.',
  &quot;Patient's VIN : 8JFSU78UTYV898505.&quot;,
  'Date : 02/25/93, PCP : Elvera Maria.'],
 'ner_chunk': ['2093-01-13',
  'Hendrickson, ORA',
  '25',
  '#719435',
  '203.120.223.13',
  'no:A334455B',
  '324598674',
  'hale@gmail.com',
  '1HGBH41JXMN109286',
  '01/13/93',
  'David Hale'],
 'masked_fixed_length_chars': ['Record date : ****, Name : ****, **** years-old, ****.',
  &quot;IP: ****, the driver's license ****.&quot;,
  'The SSN: **** and e-mail: ****.',
  &quot;Patient's VIN : ****.&quot;,
  'Date : ****, PCP : ****.'],
 'sentence': ['Record date : 2093-01-13, Name : Hendrickson, ORA, 25 years-old, #719435.',
  &quot;IP: 203.120.223.13, the driver's license no:A334455B.&quot;,
  'The SSN: 324598674 and e-mail: hale@gmail.com.',
  &quot;Patient's VIN : 1HGBH41JXMN109286.&quot;,
  'Date : 01/13/93, PCP : David Hale.'],
 'masked_with_chars': ['Record date : [********], Name : [**************], ** years-old, [*****].',
  &quot;IP: [************], the driver's license [*********].&quot;,
  'The SSN: [*******] and e-mail: [************].',
  &quot;Patient's VIN : [***************].&quot;,
  'Date : [******], PCP : [********].']}
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|clinical_deidentification|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 5.0.0+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|1.7 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverter
- MedicalNerModel
- NerConverter
- ChunkMergeModel
- ContextualParserModel
- ContextualParserModel
- ContextualParserModel
- ContextualParserModel
- ContextualParserModel
- ContextualParserModel
- TextMatcherModel
- ContextualParserModel
- RegexMatcherModel
- ContextualParserModel
- ContextualParserModel
- ContextualParserModel
- ContextualParserModel
- ContextualParserModel
- ContextualParserModel
- ChunkMergeModel
- ChunkMergeModel
- DeIdentificationModel
- DeIdentificationModel
- DeIdentificationModel
- DeIdentificationModel
- Finisher</content><author><name>John Snow Labs</name></author><category term="en" /><category term="licensed" /><category term="clinical" /><category term="deidentification" /><category term="deid" /><category term="pipeline" /><summary type="html">Description This pipeline can be used to deidentify PHI information from medical texts. The PHI information will be masked and obfuscated in the resulting text. The pipeline can mask and obfuscate AGE, CONTACT, DATE, ID, LOCATION, NAME, PROFESSION, CITY, COUNTRY, DOCTOR, HOSPITAL, IDNUM, MEDICALRECORD, ORGANIZATION, PATIENT, PHONE, PROFESSION, STREET, USERNAME, ZIP, ACCOUNT, LICENSE, VIN, SSN, DLN, PLATE, IPADDR entities. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU from sparknlp.pretrained import PretrainedPipeline deid_pipeline = PretrainedPipeline(&quot;clinical_deidentification&quot;, &quot;en&quot;, &quot;clinical/models&quot;) deid_pipeline.annotate(&quot;&quot;&quot;Record date : 2093-01-13, Name : Hendrickson, ORA, 25 years-old, #719435. IP: 203.120.223.13, the driver's license no:A334455B. The SSN: 324598674 and e-mail: hale@gmail.com. Patient's VIN : 1HGBH41JXMN109286. Date : 01/13/93, PCP : David Hale.&quot;&quot;&quot;) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val deid_pipeline = PretrainedPipeline(&quot;clinical_deidentification&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val result = deid_pipeline.annotate(&quot;&quot;&quot;Record date : 2093-01-13, Name : Hendrickson, ORA, 25 years-old, #719435. IP: 203.120.223.13, the driver's license no:A334455B. The SSN: 324598674 and e-mail: hale@gmail.com. Patient's VIN : 1HGBH41JXMN109286. Date : 01/13/93, PCP : David Hale.&quot;&quot;&quot;) Results {'masked': ['Record date : &amp;lt;DATE&amp;gt;, Name : &amp;lt;PATIENT&amp;gt;, &amp;lt;AGE&amp;gt; years-old, &amp;lt;MEDICALRECORD&amp;gt;.', &quot;IP: &amp;lt;IPADDR&amp;gt;, the driver's license &amp;lt;DLN&amp;gt;.&quot;, 'The SSN: &amp;lt;SSN&amp;gt; and e-mail: &amp;lt;EMAIL&amp;gt;.', &quot;Patient's VIN : &amp;lt;VIN&amp;gt;.&quot;, 'Date : &amp;lt;DATE&amp;gt;, PCP : &amp;lt;DOCTOR&amp;gt;.'], 'obfuscated': ['Record date : 2093-02-25, Name : Albertine Grates, 30 years-old, #100581.', &quot;IP: 003.003.003.003, the driver's license EL:I131599D.&quot;, 'The SSN: 060014689 and e-mail: Tory@yahoo.com.', &quot;Patient's VIN : 8JFSU78UTYV898505.&quot;, 'Date : 02/25/93, PCP : Elvera Maria.'], 'ner_chunk': ['2093-01-13', 'Hendrickson, ORA', '25', '#719435', '203.120.223.13', 'no:A334455B', '324598674', 'hale@gmail.com', '1HGBH41JXMN109286', '01/13/93', 'David Hale'], 'masked_fixed_length_chars': ['Record date : ****, Name : ****, **** years-old, ****.', &quot;IP: ****, the driver's license ****.&quot;, 'The SSN: **** and e-mail: ****.', &quot;Patient's VIN : ****.&quot;, 'Date : ****, PCP : ****.'], 'sentence': ['Record date : 2093-01-13, Name : Hendrickson, ORA, 25 years-old, #719435.', &quot;IP: 203.120.223.13, the driver's license no:A334455B.&quot;, 'The SSN: 324598674 and e-mail: hale@gmail.com.', &quot;Patient's VIN : 1HGBH41JXMN109286.&quot;, 'Date : 01/13/93, PCP : David Hale.'], 'masked_with_chars': ['Record date : [********], Name : [**************], ** years-old, [*****].', &quot;IP: [************], the driver's license [*********].&quot;, 'The SSN: [*******] and e-mail: [************].', &quot;Patient's VIN : [***************].&quot;, 'Date : [******], PCP : [********].']} Model Information Model Name: clinical_deidentification Type: pipeline Compatibility: Healthcare NLP 5.0.0+ License: Licensed Edition: Official Language: en Size: 1.7 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverter MedicalNerModel NerConverter ChunkMergeModel ContextualParserModel ContextualParserModel ContextualParserModel ContextualParserModel ContextualParserModel ContextualParserModel TextMatcherModel ContextualParserModel RegexMatcherModel ContextualParserModel ContextualParserModel ContextualParserModel ContextualParserModel ContextualParserModel ContextualParserModel ChunkMergeModel ChunkMergeModel DeIdentificationModel DeIdentificationModel DeIdentificationModel DeIdentificationModel Finisher</summary></entry><entry><title type="html">Named Entity Recognition Profiling (SDOH)</title><link href="/2023/07/11/ner_profiling_sdoh_en.html" rel="alternate" type="text/html" title="Named Entity Recognition Profiling (SDOH)" /><published>2023-07-11T00:00:00+00:00</published><updated>2023-07-11T00:00:00+00:00</updated><id>/2023/07/11/ner_profiling_sdoh_en</id><content type="html" xml:base="/2023/07/11/ner_profiling_sdoh_en.html">## Description

This pipeline can be used to explore all the available pretrained NER models at once for Social Determinants of Health. When you run this pipeline over your text, you will end up with the predictions coming out of each pretrained clinical NER model trained with `embeddings_clinical`.

Here are the NER models that this pretrained pipeline includes:

`ner_sdoh`, `ner_sdoh_social_environment_wip`, `ner_sdoh_mentions`, `ner_sdoh_demographics_wip`, `ner_sdoh_community_condition_wip`, `ner_sdoh_substance_usage_wip`, `ner_sdoh_access_to_healthcare_wip`, `ner_sdoh_health_behaviours_problems_wip`, `ner_sdoh_income_social_status_wip`

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_profiling_sdoh_en_4.4.4_3.0_1689084447328.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_profiling_sdoh_en_4.4.4_3.0_1689084447328.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

from sparknlp.pretrained import PretrainedPipeline

ner_profiling_pipeline = PretrainedPipeline(&quot;ner_profiling_sdoh&quot;, 'en', 'clinical/models')

result = ner_profiling_pipeline.annotate(&quot;&quot;&quot;Smith is 55 years old, living in New York, a divorced Mexcian American woman with financial problems. She speaks Spanish and Portuguese. She lives in an apartment. She has been struggling with diabetes for the past 10 years and has recently been experiencing frequent hospitalizations due to uncontrolled blood sugar levels. Smith works as a cleaning assistant and cannot access health insurance or paid sick leave. She has a son, a student at college. Pt with likely long-standing depression. She is aware she needs rehab. Pt reports having her catholic faith as a means of support as well.  She has a long history of etoh abuse, beginning in her teens. She reports she has been a daily drinker for 30 years, most recently drinking beer daily. She smokes a pack of cigarettes a day. She had DUI in April and was due to court this week.&quot;&quot;&quot;)

```
```scala

import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val ner_profiling_pipeline = PretrainedPipeline(&quot;ner_profiling_sdoh&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val result = ner_profiling_pipeline.annotate(&quot;&quot;&quot;Smith is 55 years old, living in New York, a divorced Mexcian American woman with financial problems. She speaks Spanish and Portuguese. She lives in an apartment. She has been struggling with diabetes for the past 10 years and has recently been experiencing frequent hospitalizations due to uncontrolled blood sugar levels. Smith works as a cleaning assistant and cannot access health insurance or paid sick leave. She has a son, a student at college. Pt with likely long-standing depression. She is aware she needs rehab. Pt reports having her catholic faith as a means of support as well.  She has a long history of etoh abuse, beginning in her teens. She reports she has been a daily drinker for 30 years, most recently drinking beer daily. She smokes a pack of cigarettes a day. She had DUI in April and was due to court this week.&quot;&quot;&quot;)

```
&lt;/div&gt;

## Results

```bash

 ******************** ner_sdoh_access_to_healthcare_wip Model Results ********************

[('health', 'B-Insurance_Status'), ('insurance', 'I-Insurance_Status'), ('rehab', 'B-Access_To_Care')]


 ******************** ner_sdoh_mentions Model Results ********************

[('Smith', 'B-sdoh_community'), ('divorced', 'B-sdoh_community'), ('lives', 'B-sdoh_environment'), ('apartment', 'B-sdoh_environment'), ('blood', 'B-behavior_drug'), ('works', 'B-sdoh_economics'), ('son', 'B-sdoh_community'), ('rehab', 'B-sdoh_environment'), ('etoh', 'B-behavior_alcohol'), ('drinker', 'B-behavior_alcohol'), ('beer', 'B-behavior_alcohol'), ('smokes', 'B-behavior_tobacco'), ('pack', 'B-behavior_tobacco'), ('cigarettes', 'B-behavior_tobacco')]


 ******************** ner_sdoh Model Results ********************

[('55', 'B-Age'), ('years', 'I-Age'), ('old', 'I-Age'), ('New', 'B-Geographic_Entity'), ('York', 'I-Geographic_Entity'), ('divorced', 'B-Marital_Status'), ('Mexcian', 'B-Race_Ethnicity'), ('American', 'I-Race_Ethnicity'), ('woman', 'B-Gender'), ('financial', 'B-Financial_Status'), ('problems', 'I-Financial_Status'), ('She', 'B-Gender'), ('Spanish', 'B-Language'), ('Portuguese', 'B-Language'), ('She', 'B-Gender'), ('apartment', 'B-Housing'), ('She', 'B-Gender'), ('diabetes', 'B-Other_Disease'), ('hospitalizations', 'B-Other_SDoH_Keywords'), ('cleaning', 'B-Employment'), ('assistant', 'I-Employment'), ('health', 'B-Insurance_Status'), ('insurance', 'I-Insurance_Status'), ('She', 'B-Gender'), ('son', 'B-Family_Member'), ('student', 'B-Education'), ('college', 'B-Education'), ('depression', 'B-Mental_Health'), ('She', 'B-Gender'), ('she', 'B-Gender'), ('rehab', 'B-Access_To_Care'), ('her', 'B-Gender'), ('catholic', 'B-Spiritual_Beliefs'), ('faith', 'I-Spiritual_Beliefs'), ('support', 'B-Social_Support'), ('She', 'B-Gender'), ('etoh', 'B-Alcohol'), ('abuse', 'I-Alcohol'), ('her', 'B-Gender'), ('teens', 'B-Age'), ('She', 'B-Gender'), ('she', 'B-Gender'), ('daily', 'B-Substance_Frequency'), ('drinker', 'B-Alcohol'), ('30', 'B-Substance_Duration'), ('years', 'I-Substance_Duration'), ('drinking', 'B-Alcohol'), ('beer', 'B-Alcohol'), ('daily', 'B-Substance_Frequency'), ('She', 'B-Gender'), ('smokes', 'B-Smoking'), ('a', 'B-Substance_Quantity'), ('pack', 'I-Substance_Quantity'), ('cigarettes', 'B-Smoking'), ('a', 'B-Substance_Frequency'), ('day', 'I-Substance_Frequency'), ('She', 'B-Gender'), ('DUI', 'B-Legal_Issues')]


 ******************** ner_social_environment Model Results ********************

[('support', 'B-Social_Support'), ('abuse', 'B-Violence_Abuse_Legal'), ('DUI', 'B-Violence_Abuse_Legal')]


 ******************** ner_sdoh_demographics_wip Model Results ********************

[('55', 'B-Age'), ('years', 'I-Age'), ('old', 'I-Age'), ('New', 'B-Geographic_Entity'), ('York', 'I-Geographic_Entity'), ('American', 'B-Race_Ethnicity'), ('woman', 'B-Gender'), ('She', 'B-Gender'), ('Spanish', 'B-Language'), ('Portuguese', 'B-Language'), ('She', 'B-Gender'), ('She', 'B-Gender'), ('She', 'B-Gender'), ('son', 'B-Family_Member'), ('She', 'B-Gender'), ('she', 'B-Gender'), ('her', 'B-Gender'), ('catholic', 'B-Spiritual_Beliefs'), ('faith', 'B-Spiritual_Beliefs'), ('She', 'B-Gender'), ('her', 'B-Gender'), ('teens', 'B-Age'), ('She', 'B-Gender'), ('she', 'B-Gender'), ('She', 'B-Gender'), ('She', 'B-Gender')]


 ******************** ner_sdoh_community_condition_wip Model Results ********************

[('apartment', 'B-Housing'), ('DUI', 'B-Transportation')]


 ******************** ner_sdoh_health_behaviours_problems_wip Model Results ********************

[('diabetes', 'B-Other_Disease'), ('depression', 'B-Mental_Health')]


 ******************** ner_sdoh_income_social_status_wip Model Results ********************

[('divorced', 'B-Marital_Status'), ('financial', 'B-Financial_Status'), ('problems', 'I-Financial_Status'), ('cleaning', 'B-Employment'), ('assistant', 'I-Employment'), ('student', 'B-Education'), ('college', 'B-Education'), ('needs', 'B-Financial_Status'), ('rehab', 'I-Financial_Status')]


 ******************** ner_sdoh_substance_usage_wip Model Results ********************

[('etoh', 'B-Alcohol'), ('abuse', 'I-Alcohol'), ('daily', 'B-Substance_Frequency'), ('drinker', 'B-Alcohol'), ('30', 'B-Substance_Duration'), ('years', 'I-Substance_Duration'), ('drinking', 'B-Alcohol'), ('beer', 'I-Alcohol'), ('daily', 'B-Substance_Frequency'), ('smokes', 'B-Smoking'), ('a', 'B-Substance_Quantity'), ('pack', 'I-Substance_Quantity'), ('cigarettes', 'B-Smoking'), ('a', 'B-Substance_Frequency'), ('day', 'I-Substance_Frequency')]

```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_profiling_sdoh|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 4.4.4+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|1.7 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="clinical" /><category term="profiling" /><category term="ner_profiling" /><category term="ner" /><category term="sdoh" /><category term="social_determinants_of_health" /><summary type="html">Description This pipeline can be used to explore all the available pretrained NER models at once for Social Determinants of Health. When you run this pipeline over your text, you will end up with the predictions coming out of each pretrained clinical NER model trained with embeddings_clinical. Here are the NER models that this pretrained pipeline includes: ner_sdoh, ner_sdoh_social_environment_wip, ner_sdoh_mentions, ner_sdoh_demographics_wip, ner_sdoh_community_condition_wip, ner_sdoh_substance_usage_wip, ner_sdoh_access_to_healthcare_wip, ner_sdoh_health_behaviours_problems_wip, ner_sdoh_income_social_status_wip Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU from sparknlp.pretrained import PretrainedPipeline ner_profiling_pipeline = PretrainedPipeline(&quot;ner_profiling_sdoh&quot;, 'en', 'clinical/models') result = ner_profiling_pipeline.annotate(&quot;&quot;&quot;Smith is 55 years old, living in New York, a divorced Mexcian American woman with financial problems. She speaks Spanish and Portuguese. She lives in an apartment. She has been struggling with diabetes for the past 10 years and has recently been experiencing frequent hospitalizations due to uncontrolled blood sugar levels. Smith works as a cleaning assistant and cannot access health insurance or paid sick leave. She has a son, a student at college. Pt with likely long-standing depression. She is aware she needs rehab. Pt reports having her catholic faith as a means of support as well. She has a long history of etoh abuse, beginning in her teens. She reports she has been a daily drinker for 30 years, most recently drinking beer daily. She smokes a pack of cigarettes a day. She had DUI in April and was due to court this week.&quot;&quot;&quot;) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val ner_profiling_pipeline = PretrainedPipeline(&quot;ner_profiling_sdoh&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val result = ner_profiling_pipeline.annotate(&quot;&quot;&quot;Smith is 55 years old, living in New York, a divorced Mexcian American woman with financial problems. She speaks Spanish and Portuguese. She lives in an apartment. She has been struggling with diabetes for the past 10 years and has recently been experiencing frequent hospitalizations due to uncontrolled blood sugar levels. Smith works as a cleaning assistant and cannot access health insurance or paid sick leave. She has a son, a student at college. Pt with likely long-standing depression. She is aware she needs rehab. Pt reports having her catholic faith as a means of support as well. She has a long history of etoh abuse, beginning in her teens. She reports she has been a daily drinker for 30 years, most recently drinking beer daily. She smokes a pack of cigarettes a day. She had DUI in April and was due to court this week.&quot;&quot;&quot;) Results ******************** ner_sdoh_access_to_healthcare_wip Model Results ******************** [('health', 'B-Insurance_Status'), ('insurance', 'I-Insurance_Status'), ('rehab', 'B-Access_To_Care')] ******************** ner_sdoh_mentions Model Results ******************** [('Smith', 'B-sdoh_community'), ('divorced', 'B-sdoh_community'), ('lives', 'B-sdoh_environment'), ('apartment', 'B-sdoh_environment'), ('blood', 'B-behavior_drug'), ('works', 'B-sdoh_economics'), ('son', 'B-sdoh_community'), ('rehab', 'B-sdoh_environment'), ('etoh', 'B-behavior_alcohol'), ('drinker', 'B-behavior_alcohol'), ('beer', 'B-behavior_alcohol'), ('smokes', 'B-behavior_tobacco'), ('pack', 'B-behavior_tobacco'), ('cigarettes', 'B-behavior_tobacco')] ******************** ner_sdoh Model Results ******************** [('55', 'B-Age'), ('years', 'I-Age'), ('old', 'I-Age'), ('New', 'B-Geographic_Entity'), ('York', 'I-Geographic_Entity'), ('divorced', 'B-Marital_Status'), ('Mexcian', 'B-Race_Ethnicity'), ('American', 'I-Race_Ethnicity'), ('woman', 'B-Gender'), ('financial', 'B-Financial_Status'), ('problems', 'I-Financial_Status'), ('She', 'B-Gender'), ('Spanish', 'B-Language'), ('Portuguese', 'B-Language'), ('She', 'B-Gender'), ('apartment', 'B-Housing'), ('She', 'B-Gender'), ('diabetes', 'B-Other_Disease'), ('hospitalizations', 'B-Other_SDoH_Keywords'), ('cleaning', 'B-Employment'), ('assistant', 'I-Employment'), ('health', 'B-Insurance_Status'), ('insurance', 'I-Insurance_Status'), ('She', 'B-Gender'), ('son', 'B-Family_Member'), ('student', 'B-Education'), ('college', 'B-Education'), ('depression', 'B-Mental_Health'), ('She', 'B-Gender'), ('she', 'B-Gender'), ('rehab', 'B-Access_To_Care'), ('her', 'B-Gender'), ('catholic', 'B-Spiritual_Beliefs'), ('faith', 'I-Spiritual_Beliefs'), ('support', 'B-Social_Support'), ('She', 'B-Gender'), ('etoh', 'B-Alcohol'), ('abuse', 'I-Alcohol'), ('her', 'B-Gender'), ('teens', 'B-Age'), ('She', 'B-Gender'), ('she', 'B-Gender'), ('daily', 'B-Substance_Frequency'), ('drinker', 'B-Alcohol'), ('30', 'B-Substance_Duration'), ('years', 'I-Substance_Duration'), ('drinking', 'B-Alcohol'), ('beer', 'B-Alcohol'), ('daily', 'B-Substance_Frequency'), ('She', 'B-Gender'), ('smokes', 'B-Smoking'), ('a', 'B-Substance_Quantity'), ('pack', 'I-Substance_Quantity'), ('cigarettes', 'B-Smoking'), ('a', 'B-Substance_Frequency'), ('day', 'I-Substance_Frequency'), ('She', 'B-Gender'), ('DUI', 'B-Legal_Issues')] ******************** ner_social_environment Model Results ******************** [('support', 'B-Social_Support'), ('abuse', 'B-Violence_Abuse_Legal'), ('DUI', 'B-Violence_Abuse_Legal')] ******************** ner_sdoh_demographics_wip Model Results ******************** [('55', 'B-Age'), ('years', 'I-Age'), ('old', 'I-Age'), ('New', 'B-Geographic_Entity'), ('York', 'I-Geographic_Entity'), ('American', 'B-Race_Ethnicity'), ('woman', 'B-Gender'), ('She', 'B-Gender'), ('Spanish', 'B-Language'), ('Portuguese', 'B-Language'), ('She', 'B-Gender'), ('She', 'B-Gender'), ('She', 'B-Gender'), ('son', 'B-Family_Member'), ('She', 'B-Gender'), ('she', 'B-Gender'), ('her', 'B-Gender'), ('catholic', 'B-Spiritual_Beliefs'), ('faith', 'B-Spiritual_Beliefs'), ('She', 'B-Gender'), ('her', 'B-Gender'), ('teens', 'B-Age'), ('She', 'B-Gender'), ('she', 'B-Gender'), ('She', 'B-Gender'), ('She', 'B-Gender')] ******************** ner_sdoh_community_condition_wip Model Results ******************** [('apartment', 'B-Housing'), ('DUI', 'B-Transportation')] ******************** ner_sdoh_health_behaviours_problems_wip Model Results ******************** [('diabetes', 'B-Other_Disease'), ('depression', 'B-Mental_Health')] ******************** ner_sdoh_income_social_status_wip Model Results ******************** [('divorced', 'B-Marital_Status'), ('financial', 'B-Financial_Status'), ('problems', 'I-Financial_Status'), ('cleaning', 'B-Employment'), ('assistant', 'I-Employment'), ('student', 'B-Education'), ('college', 'B-Education'), ('needs', 'B-Financial_Status'), ('rehab', 'I-Financial_Status')] ******************** ner_sdoh_substance_usage_wip Model Results ******************** [('etoh', 'B-Alcohol'), ('abuse', 'I-Alcohol'), ('daily', 'B-Substance_Frequency'), ('drinker', 'B-Alcohol'), ('30', 'B-Substance_Duration'), ('years', 'I-Substance_Duration'), ('drinking', 'B-Alcohol'), ('beer', 'I-Alcohol'), ('daily', 'B-Substance_Frequency'), ('smokes', 'B-Smoking'), ('a', 'B-Substance_Quantity'), ('pack', 'I-Substance_Quantity'), ('cigarettes', 'B-Smoking'), ('a', 'B-Substance_Frequency'), ('day', 'I-Substance_Frequency')] Model Information Model Name: ner_profiling_sdoh Type: pipeline Compatibility: Healthcare NLP 4.4.4+ License: Licensed Edition: Official Language: en Size: 1.7 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel</summary></entry><entry><title type="html">Sentence Embeddings - Biobert cased (MedNLI, onnx)</title><link href="/2023/07/11/sbiobert_base_cased_mli_onnx_en.html" rel="alternate" type="text/html" title="Sentence Embeddings - Biobert cased (MedNLI, onnx)" /><published>2023-07-11T00:00:00+00:00</published><updated>2023-07-11T00:00:00+00:00</updated><id>/2023/07/11/sbiobert_base_cased_mli_onnx_en</id><content type="html" xml:base="/2023/07/11/sbiobert_base_cased_mli_onnx_en.html">## Description

This model is trained to generate contextual sentence embeddings of input sentences. It has been fine-tuned on MedNLI dataset to provide sota performance on STS and SentEval Benchmarks.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/sbiobert_base_cased_mli_onnx_en_5.0.0_3.0_1689073579242.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/sbiobert_base_cased_mli_onnx_en_5.0.0_3.0_1689073579242.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

sbiobert_embeddings = BertSentenceEmbeddings\
  .pretrained(&quot;sbiobert_base_cased_mli_onnx&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\
  .setInputCols([&quot;ner_chunk_doc&quot;])\
  .setOutputCol(&quot;sbert_embeddings&quot;)

```
```scala

val sbiobert_embeddings = BertSentenceEmbeddings
  .pretrained(&quot;sbiobert_base_cased_mli_onnx&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
  .setInputCols(Array(&quot;ner_chunk_doc&quot;))
  .setOutputCol(&quot;sbert_embeddings&quot;)

```
&lt;/div&gt;

## Results

```bash
Gives a 768 dimensional vector representation of the sentence.
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|sbiobert_base_cased_mli_onnx|
|Compatibility:|Healthcare NLP 5.0.0+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[sentence]|
|Output Labels:|[sentence_embeddings_onnx]|
|Language:|en|
|Size:|403.1 MB|
|Case sensitive:|true|</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="clinical" /><category term="embeddings" /><category term="onnx" /><summary type="html">Description This model is trained to generate contextual sentence embeddings of input sentences. It has been fine-tuned on MedNLI dataset to provide sota performance on STS and SentEval Benchmarks. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU sbiobert_embeddings = BertSentenceEmbeddings\ .pretrained(&quot;sbiobert_base_cased_mli_onnx&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\ .setInputCols([&quot;ner_chunk_doc&quot;])\ .setOutputCol(&quot;sbert_embeddings&quot;) val sbiobert_embeddings = BertSentenceEmbeddings .pretrained(&quot;sbiobert_base_cased_mli_onnx&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols(Array(&quot;ner_chunk_doc&quot;)) .setOutputCol(&quot;sbert_embeddings&quot;) Results Gives a 768 dimensional vector representation of the sentence. Model Information Model Name: sbiobert_base_cased_mli_onnx Compatibility: Healthcare NLP 5.0.0+ License: Licensed Edition: Official Input Labels: [sentence] Output Labels: [sentence_embeddings_onnx] Language: en Size: 403.1 MB Case sensitive: true</summary></entry><entry><title type="html">Named Entity Recognition Profiling (SDOH)</title><link href="/2023/07/11/ner_profiling_sdoh_en.html" rel="alternate" type="text/html" title="Named Entity Recognition Profiling (SDOH)" /><published>2023-07-11T00:00:00+00:00</published><updated>2023-07-11T00:00:00+00:00</updated><id>/2023/07/11/ner_profiling_sdoh_en</id><content type="html" xml:base="/2023/07/11/ner_profiling_sdoh_en.html">## Description

This pipeline can be used to explore all the available pretrained NER models at once for Social Determinants of Health. When you run this pipeline over your text, you will end up with the predictions coming out of each pretrained clinical NER model trained with `embeddings_clinical`.

Here are the NER models that this pretrained pipeline includes:

`ner_sdoh`, `ner_sdoh_social_environment_wip`, `ner_sdoh_mentions`, `ner_sdoh_demographics_wip`, `ner_sdoh_community_condition_wip`, `ner_sdoh_substance_usage_wip`, `ner_sdoh_access_to_healthcare_wip`, `ner_sdoh_health_behaviours_problems_wip`, `ner_sdoh_income_social_status_wip`

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_profiling_sdoh_en_4.4.4_3.2_1689084177101.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_profiling_sdoh_en_4.4.4_3.2_1689084177101.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

from sparknlp.pretrained import PretrainedPipeline

ner_profiling_pipeline = PretrainedPipeline(&quot;ner_profiling_sdoh&quot;, 'en', 'clinical/models')

result = ner_profiling_pipeline.annotate(&quot;&quot;&quot;Smith is 55 years old, living in New York, a divorced Mexcian American woman with financial problems. She speaks Spanish and Portuguese. She lives in an apartment. She has been struggling with diabetes for the past 10 years and has recently been experiencing frequent hospitalizations due to uncontrolled blood sugar levels. Smith works as a cleaning assistant and cannot access health insurance or paid sick leave. She has a son, a student at college. Pt with likely long-standing depression. She is aware she needs rehab. Pt reports having her catholic faith as a means of support as well.  She has a long history of etoh abuse, beginning in her teens. She reports she has been a daily drinker for 30 years, most recently drinking beer daily. She smokes a pack of cigarettes a day. She had DUI in April and was due to court this week.&quot;&quot;&quot;)

```
```scala

import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val ner_profiling_pipeline = PretrainedPipeline(&quot;ner_profiling_sdoh&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val result = ner_profiling_pipeline.annotate(&quot;&quot;&quot;Smith is 55 years old, living in New York, a divorced Mexcian American woman with financial problems. She speaks Spanish and Portuguese. She lives in an apartment. She has been struggling with diabetes for the past 10 years and has recently been experiencing frequent hospitalizations due to uncontrolled blood sugar levels. Smith works as a cleaning assistant and cannot access health insurance or paid sick leave. She has a son, a student at college. Pt with likely long-standing depression. She is aware she needs rehab. Pt reports having her catholic faith as a means of support as well.  She has a long history of etoh abuse, beginning in her teens. She reports she has been a daily drinker for 30 years, most recently drinking beer daily. She smokes a pack of cigarettes a day. She had DUI in April and was due to court this week.&quot;&quot;&quot;)

```
&lt;/div&gt;

## Results

```bash

 ******************** ner_sdoh_mentions Model Results ******************** 

[('Smith', 'B-sdoh_community'), ('divorced', 'B-sdoh_community'), ('lives', 'B-sdoh_environment'), ('apartment', 'B-sdoh_environment'), ('blood', 'B-behavior_drug'), ('works', 'B-sdoh_economics'), ('son', 'B-sdoh_community'), ('rehab', 'B-sdoh_environment'), ('etoh', 'B-behavior_alcohol'), ('drinker', 'B-behavior_alcohol'), ('beer', 'B-behavior_alcohol'), ('smokes', 'B-behavior_tobacco'), ('pack', 'B-behavior_tobacco'), ('cigarettes', 'B-behavior_tobacco')]

 
 ******************** ner_sdoh_community_condition Model Results ******************** 

[('apartment', 'B-Housing')]

 
 ******************** ner_sdoh_demographics Model Results ******************** 

[('55', 'B-Age'), ('years', 'I-Age'), ('old', 'I-Age'), ('New', 'B-Geographic_Entity'), ('York', 'I-Geographic_Entity'), ('American', 'B-Race_Ethnicity'), ('woman', 'B-Gender'), ('She', 'B-Gender'), ('Spanish', 'B-Language'), ('Portuguese', 'B-Language'), ('She', 'B-Gender'), ('She', 'B-Gender'), ('She', 'B-Gender'), ('son', 'B-Family_Member'), ('She', 'B-Gender'), ('she', 'B-Gender'), ('her', 'B-Gender'), ('catholic', 'B-Spiritual_Beliefs'), ('faith', 'I-Spiritual_Beliefs'), ('She', 'B-Gender'), ('her', 'B-Gender'), ('teens', 'B-Age'), ('She', 'B-Gender'), ('she', 'B-Gender'), ('She', 'B-Gender'), ('She', 'B-Gender')]

 
 ******************** ner_sdoh Model Results ******************** 

[('55', 'B-Age'), ('years', 'I-Age'), ('old', 'I-Age'), ('New', 'B-Geographic_Entity'), ('York', 'I-Geographic_Entity'), ('divorced', 'B-Marital_Status'), ('Mexcian', 'B-Race_Ethnicity'), ('American', 'I-Race_Ethnicity'), ('woman', 'B-Gender'), ('financial', 'B-Financial_Status'), ('problems', 'I-Financial_Status'), ('She', 'B-Gender'), ('Spanish', 'B-Language'), ('Portuguese', 'B-Language'), ('She', 'B-Gender'), ('apartment', 'B-Housing'), ('She', 'B-Gender'), ('diabetes', 'B-Other_Disease'), ('hospitalizations', 'B-Other_SDoH_Keywords'), ('cleaning', 'B-Employment'), ('assistant', 'I-Employment'), ('health', 'B-Insurance_Status'), ('insurance', 'I-Insurance_Status'), ('She', 'B-Gender'), ('son', 'B-Family_Member'), ('student', 'B-Education'), ('college', 'B-Education'), ('depression', 'B-Mental_Health'), ('She', 'B-Gender'), ('she', 'B-Gender'), ('rehab', 'B-Access_To_Care'), ('her', 'B-Gender'), ('catholic', 'B-Spiritual_Beliefs'), ('faith', 'I-Spiritual_Beliefs'), ('support', 'B-Social_Support'), ('She', 'B-Gender'), ('etoh', 'B-Alcohol'), ('abuse', 'I-Alcohol'), ('her', 'B-Gender'), ('teens', 'B-Age'), ('She', 'B-Gender'), ('she', 'B-Gender'), ('daily', 'B-Substance_Frequency'), ('drinker', 'B-Alcohol'), ('30', 'B-Substance_Duration'), ('years', 'I-Substance_Duration'), ('drinking', 'B-Alcohol'), ('beer', 'B-Alcohol'), ('daily', 'B-Substance_Frequency'), ('She', 'B-Gender'), ('smokes', 'B-Smoking'), ('a', 'B-Substance_Quantity'), ('pack', 'I-Substance_Quantity'), ('cigarettes', 'B-Smoking'), ('a', 'B-Substance_Frequency'), ('day', 'I-Substance_Frequency'), ('She', 'B-Gender'), ('DUI', 'B-Legal_Issues')]

 
 ******************** ner_social_environment Model Results ******************** 

[('support', 'B-Social_Support'), ('DUI', 'B-Legal_Issues')]

 
 ******************** ner_sdoh_access_to_healthcare Model Results ******************** 

[('health', 'B-Insurance_Status'), ('insurance', 'I-Insurance_Status'), ('rehab', 'B-Access_To_Care')]

 
 ******************** ner_sdoh_health_behaviours_problems Model Results ******************** 

[('diabetes', 'B-Other_Disease'), ('depression', 'B-Mental_Health')]

 
  ******************** ner_sdoh_substance_usage Model Results ******************** 

[('etoh', 'B-Alcohol'), ('abuse', 'I-Alcohol'), ('daily', 'B-Substance_Frequency'), ('drinker', 'B-Alcohol'), ('30', 'B-Substance_Duration'), ('years', 'I-Substance_Duration'), ('drinking', 'B-Alcohol'), ('beer', 'B-Alcohol'), ('daily', 'B-Substance_Frequency'), ('smokes', 'B-Smoking'), ('a', 'B-Substance_Quantity'), ('pack', 'I-Substance_Quantity'), ('cigarettes', 'B-Smoking'), ('a', 'B-Substance_Frequency'), ('day', 'I-Substance_Frequency')]

 
 ******************** ner_sdoh_income_social_status Model Results ******************** 

[('divorced', 'B-Marital_Status'), ('financial', 'B-Financial_Status'), ('problems', 'I-Financial_Status'), ('cleaning', 'B-Employment'), ('assistant', 'I-Employment'), ('student', 'B-Education'), ('college', 'B-Education')]


```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_profiling_sdoh|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 4.4.4+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|1.7 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="clinical" /><category term="profiling" /><category term="ner_profiling" /><category term="ner" /><category term="sdoh" /><category term="social_determinants_of_health" /><summary type="html">Description This pipeline can be used to explore all the available pretrained NER models at once for Social Determinants of Health. When you run this pipeline over your text, you will end up with the predictions coming out of each pretrained clinical NER model trained with embeddings_clinical. Here are the NER models that this pretrained pipeline includes: ner_sdoh, ner_sdoh_social_environment_wip, ner_sdoh_mentions, ner_sdoh_demographics_wip, ner_sdoh_community_condition_wip, ner_sdoh_substance_usage_wip, ner_sdoh_access_to_healthcare_wip, ner_sdoh_health_behaviours_problems_wip, ner_sdoh_income_social_status_wip Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU from sparknlp.pretrained import PretrainedPipeline ner_profiling_pipeline = PretrainedPipeline(&quot;ner_profiling_sdoh&quot;, 'en', 'clinical/models') result = ner_profiling_pipeline.annotate(&quot;&quot;&quot;Smith is 55 years old, living in New York, a divorced Mexcian American woman with financial problems. She speaks Spanish and Portuguese. She lives in an apartment. She has been struggling with diabetes for the past 10 years and has recently been experiencing frequent hospitalizations due to uncontrolled blood sugar levels. Smith works as a cleaning assistant and cannot access health insurance or paid sick leave. She has a son, a student at college. Pt with likely long-standing depression. She is aware she needs rehab. Pt reports having her catholic faith as a means of support as well. She has a long history of etoh abuse, beginning in her teens. She reports she has been a daily drinker for 30 years, most recently drinking beer daily. She smokes a pack of cigarettes a day. She had DUI in April and was due to court this week.&quot;&quot;&quot;) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val ner_profiling_pipeline = PretrainedPipeline(&quot;ner_profiling_sdoh&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val result = ner_profiling_pipeline.annotate(&quot;&quot;&quot;Smith is 55 years old, living in New York, a divorced Mexcian American woman with financial problems. She speaks Spanish and Portuguese. She lives in an apartment. She has been struggling with diabetes for the past 10 years and has recently been experiencing frequent hospitalizations due to uncontrolled blood sugar levels. Smith works as a cleaning assistant and cannot access health insurance or paid sick leave. She has a son, a student at college. Pt with likely long-standing depression. She is aware she needs rehab. Pt reports having her catholic faith as a means of support as well. She has a long history of etoh abuse, beginning in her teens. She reports she has been a daily drinker for 30 years, most recently drinking beer daily. She smokes a pack of cigarettes a day. She had DUI in April and was due to court this week.&quot;&quot;&quot;) Results ******************** ner_sdoh_mentions Model Results ******************** [('Smith', 'B-sdoh_community'), ('divorced', 'B-sdoh_community'), ('lives', 'B-sdoh_environment'), ('apartment', 'B-sdoh_environment'), ('blood', 'B-behavior_drug'), ('works', 'B-sdoh_economics'), ('son', 'B-sdoh_community'), ('rehab', 'B-sdoh_environment'), ('etoh', 'B-behavior_alcohol'), ('drinker', 'B-behavior_alcohol'), ('beer', 'B-behavior_alcohol'), ('smokes', 'B-behavior_tobacco'), ('pack', 'B-behavior_tobacco'), ('cigarettes', 'B-behavior_tobacco')] ******************** ner_sdoh_community_condition Model Results ******************** [('apartment', 'B-Housing')] ******************** ner_sdoh_demographics Model Results ******************** [('55', 'B-Age'), ('years', 'I-Age'), ('old', 'I-Age'), ('New', 'B-Geographic_Entity'), ('York', 'I-Geographic_Entity'), ('American', 'B-Race_Ethnicity'), ('woman', 'B-Gender'), ('She', 'B-Gender'), ('Spanish', 'B-Language'), ('Portuguese', 'B-Language'), ('She', 'B-Gender'), ('She', 'B-Gender'), ('She', 'B-Gender'), ('son', 'B-Family_Member'), ('She', 'B-Gender'), ('she', 'B-Gender'), ('her', 'B-Gender'), ('catholic', 'B-Spiritual_Beliefs'), ('faith', 'I-Spiritual_Beliefs'), ('She', 'B-Gender'), ('her', 'B-Gender'), ('teens', 'B-Age'), ('She', 'B-Gender'), ('she', 'B-Gender'), ('She', 'B-Gender'), ('She', 'B-Gender')] ******************** ner_sdoh Model Results ******************** [('55', 'B-Age'), ('years', 'I-Age'), ('old', 'I-Age'), ('New', 'B-Geographic_Entity'), ('York', 'I-Geographic_Entity'), ('divorced', 'B-Marital_Status'), ('Mexcian', 'B-Race_Ethnicity'), ('American', 'I-Race_Ethnicity'), ('woman', 'B-Gender'), ('financial', 'B-Financial_Status'), ('problems', 'I-Financial_Status'), ('She', 'B-Gender'), ('Spanish', 'B-Language'), ('Portuguese', 'B-Language'), ('She', 'B-Gender'), ('apartment', 'B-Housing'), ('She', 'B-Gender'), ('diabetes', 'B-Other_Disease'), ('hospitalizations', 'B-Other_SDoH_Keywords'), ('cleaning', 'B-Employment'), ('assistant', 'I-Employment'), ('health', 'B-Insurance_Status'), ('insurance', 'I-Insurance_Status'), ('She', 'B-Gender'), ('son', 'B-Family_Member'), ('student', 'B-Education'), ('college', 'B-Education'), ('depression', 'B-Mental_Health'), ('She', 'B-Gender'), ('she', 'B-Gender'), ('rehab', 'B-Access_To_Care'), ('her', 'B-Gender'), ('catholic', 'B-Spiritual_Beliefs'), ('faith', 'I-Spiritual_Beliefs'), ('support', 'B-Social_Support'), ('She', 'B-Gender'), ('etoh', 'B-Alcohol'), ('abuse', 'I-Alcohol'), ('her', 'B-Gender'), ('teens', 'B-Age'), ('She', 'B-Gender'), ('she', 'B-Gender'), ('daily', 'B-Substance_Frequency'), ('drinker', 'B-Alcohol'), ('30', 'B-Substance_Duration'), ('years', 'I-Substance_Duration'), ('drinking', 'B-Alcohol'), ('beer', 'B-Alcohol'), ('daily', 'B-Substance_Frequency'), ('She', 'B-Gender'), ('smokes', 'B-Smoking'), ('a', 'B-Substance_Quantity'), ('pack', 'I-Substance_Quantity'), ('cigarettes', 'B-Smoking'), ('a', 'B-Substance_Frequency'), ('day', 'I-Substance_Frequency'), ('She', 'B-Gender'), ('DUI', 'B-Legal_Issues')] ******************** ner_social_environment Model Results ******************** [('support', 'B-Social_Support'), ('DUI', 'B-Legal_Issues')] ******************** ner_sdoh_access_to_healthcare Model Results ******************** [('health', 'B-Insurance_Status'), ('insurance', 'I-Insurance_Status'), ('rehab', 'B-Access_To_Care')] ******************** ner_sdoh_health_behaviours_problems Model Results ******************** [('diabetes', 'B-Other_Disease'), ('depression', 'B-Mental_Health')] ******************** ner_sdoh_substance_usage Model Results ******************** [('etoh', 'B-Alcohol'), ('abuse', 'I-Alcohol'), ('daily', 'B-Substance_Frequency'), ('drinker', 'B-Alcohol'), ('30', 'B-Substance_Duration'), ('years', 'I-Substance_Duration'), ('drinking', 'B-Alcohol'), ('beer', 'B-Alcohol'), ('daily', 'B-Substance_Frequency'), ('smokes', 'B-Smoking'), ('a', 'B-Substance_Quantity'), ('pack', 'I-Substance_Quantity'), ('cigarettes', 'B-Smoking'), ('a', 'B-Substance_Frequency'), ('day', 'I-Substance_Frequency')] ******************** ner_sdoh_income_social_status Model Results ******************** [('divorced', 'B-Marital_Status'), ('financial', 'B-Financial_Status'), ('problems', 'I-Financial_Status'), ('cleaning', 'B-Employment'), ('assistant', 'I-Employment'), ('student', 'B-Education'), ('college', 'B-Education')] Model Information Model Name: ner_profiling_sdoh Type: pipeline Compatibility: Healthcare NLP 4.4.4+ License: Licensed Edition: Official Language: en Size: 1.7 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel</summary></entry><entry><title type="html">Clinical Deidentification</title><link href="/2023/07/11/clinical_deidentification_en.html" rel="alternate" type="text/html" title="Clinical Deidentification" /><published>2023-07-11T00:00:00+00:00</published><updated>2023-07-11T00:00:00+00:00</updated><id>/2023/07/11/clinical_deidentification_en</id><content type="html" xml:base="/2023/07/11/clinical_deidentification_en.html">## Description

This pipeline can be used to deidentify PHI information from medical texts. The PHI information will be masked and obfuscated in the resulting text. The pipeline can mask and obfuscate `AGE`, `CONTACT`, `DATE`, `ID`, `LOCATION`, `NAME`, `PROFESSION`, `CITY`, `COUNTRY`, `DOCTOR`, `HOSPITAL`, `IDNUM`, `MEDICALRECORD`, `ORGANIZATION`, `PATIENT`, `PHONE`, `PROFESSION`,  `STREET`, `USERNAME`, `ZIP`, `ACCOUNT`, `LICENSE`, `VIN`, `SSN`, `DLN`, `PLATE`, `IPADDR` entities.

{:.btn-box}
[Live Demo](https://demo.johnsnowlabs.com/healthcare/DEID_PHI_TEXT_MULTI/){:.button.button-orange}
[Open in Colab](https://colab.research.google.com/github/JohnSnowLabs/spark-nlp-workshop/blob/master/tutorials/streamlit_notebooks/healthcare/DEID_PHI_TEXT_MULTI.ipynb){:.button.button-orange.button-orange-trans.co.button-icon}
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/clinical_deidentification_en_5.0.0_3.0_1689070635933.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/clinical_deidentification_en_5.0.0_3.0_1689070635933.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python
from sparknlp.pretrained import PretrainedPipeline

deid_pipeline = PretrainedPipeline(&quot;clinical_deidentification&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

deid_pipeline.annotate(&quot;&quot;&quot;Record date : 2093-01-13, Name : Hendrickson, ORA, 25 years-old, #719435. IP: 203.120.223.13, the driver's license no:A334455B. The SSN: 324598674 and e-mail: hale@gmail.com. Patient's VIN : 1HGBH41JXMN109286. Date : 01/13/93, PCP : David Hale.&quot;&quot;&quot;)
```
```scala
import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val deid_pipeline = PretrainedPipeline(&quot;clinical_deidentification&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val result = deid_pipeline.annotate(&quot;&quot;&quot;Record date : 2093-01-13, Name : Hendrickson, ORA, 25 years-old, #719435. IP: 203.120.223.13, the driver's license no:A334455B. The SSN: 324598674 and e-mail: hale@gmail.com. Patient's VIN : 1HGBH41JXMN109286. Date : 01/13/93, PCP : David Hale.&quot;&quot;&quot;)
```
&lt;/div&gt;

## Results

```bash
{'masked': ['Record date : &lt;DATE&gt;, Name : &lt;PATIENT&gt;, &lt;AGE&gt; years-old, &lt;MEDICALRECORD&gt;.',
  &quot;IP: &lt;IPADDR&gt;, the driver's license &lt;DLN&gt;.&quot;,
  'The SSN: &lt;SSN&gt; and e-mail: &lt;EMAIL&gt;.',
  &quot;Patient's VIN : &lt;VIN&gt;.&quot;,
  'Date : &lt;DATE&gt;, PCP : &lt;DOCTOR&gt;.'],
 'obfuscated': ['Record date : 2093-02-25, Name : Albertine Grates, 30 years-old, #100581.',
  &quot;IP: 003.003.003.003, the driver's license EL:I131599D.&quot;,
  'The SSN: 060014689 and e-mail: Tory@yahoo.com.',
  &quot;Patient's VIN : 8JFSU78UTYV898505.&quot;,
  'Date : 02/25/93, PCP : Elvera Maria.'],
 'ner_chunk': ['2093-01-13',
  'Hendrickson, ORA',
  '25',
  '#719435',
  '203.120.223.13',
  'no:A334455B',
  '324598674',
  'hale@gmail.com',
  '1HGBH41JXMN109286',
  '01/13/93',
  'David Hale'],
 'masked_fixed_length_chars': ['Record date : ****, Name : ****, **** years-old, ****.',
  &quot;IP: ****, the driver's license ****.&quot;,
  'The SSN: **** and e-mail: ****.',
  &quot;Patient's VIN : ****.&quot;,
  'Date : ****, PCP : ****.'],
 'sentence': ['Record date : 2093-01-13, Name : Hendrickson, ORA, 25 years-old, #719435.',
  &quot;IP: 203.120.223.13, the driver's license no:A334455B.&quot;,
  'The SSN: 324598674 and e-mail: hale@gmail.com.',
  &quot;Patient's VIN : 1HGBH41JXMN109286.&quot;,
  'Date : 01/13/93, PCP : David Hale.'],
 'masked_with_chars': ['Record date : [********], Name : [**************], ** years-old, [*****].',
  &quot;IP: [************], the driver's license [*********].&quot;,
  'The SSN: [*******] and e-mail: [************].',
  &quot;Patient's VIN : [***************].&quot;,
  'Date : [******], PCP : [********].']}
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|clinical_deidentification|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 5.0.0+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|1.7 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverter
- MedicalNerModel
- NerConverter
- ChunkMergeModel
- ContextualParserModel
- ContextualParserModel
- ContextualParserModel
- ContextualParserModel
- ContextualParserModel
- ContextualParserModel
- TextMatcherModel
- ContextualParserModel
- RegexMatcherModel
- ContextualParserModel
- ContextualParserModel
- ContextualParserModel
- ContextualParserModel
- ContextualParserModel
- ContextualParserModel
- ChunkMergeModel
- ChunkMergeModel
- DeIdentificationModel
- DeIdentificationModel
- DeIdentificationModel
- DeIdentificationModel
- Finisher</content><author><name>John Snow Labs</name></author><category term="deidentification" /><category term="deid" /><category term="en" /><category term="licensed" /><category term="clinical" /><category term="pipeline" /><summary type="html">Description This pipeline can be used to deidentify PHI information from medical texts. The PHI information will be masked and obfuscated in the resulting text. The pipeline can mask and obfuscate AGE, CONTACT, DATE, ID, LOCATION, NAME, PROFESSION, CITY, COUNTRY, DOCTOR, HOSPITAL, IDNUM, MEDICALRECORD, ORGANIZATION, PATIENT, PHONE, PROFESSION, STREET, USERNAME, ZIP, ACCOUNT, LICENSE, VIN, SSN, DLN, PLATE, IPADDR entities. Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU from sparknlp.pretrained import PretrainedPipeline deid_pipeline = PretrainedPipeline(&quot;clinical_deidentification&quot;, &quot;en&quot;, &quot;clinical/models&quot;) deid_pipeline.annotate(&quot;&quot;&quot;Record date : 2093-01-13, Name : Hendrickson, ORA, 25 years-old, #719435. IP: 203.120.223.13, the driver's license no:A334455B. The SSN: 324598674 and e-mail: hale@gmail.com. Patient's VIN : 1HGBH41JXMN109286. Date : 01/13/93, PCP : David Hale.&quot;&quot;&quot;) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val deid_pipeline = PretrainedPipeline(&quot;clinical_deidentification&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val result = deid_pipeline.annotate(&quot;&quot;&quot;Record date : 2093-01-13, Name : Hendrickson, ORA, 25 years-old, #719435. IP: 203.120.223.13, the driver's license no:A334455B. The SSN: 324598674 and e-mail: hale@gmail.com. Patient's VIN : 1HGBH41JXMN109286. Date : 01/13/93, PCP : David Hale.&quot;&quot;&quot;) Results {'masked': ['Record date : &amp;lt;DATE&amp;gt;, Name : &amp;lt;PATIENT&amp;gt;, &amp;lt;AGE&amp;gt; years-old, &amp;lt;MEDICALRECORD&amp;gt;.', &quot;IP: &amp;lt;IPADDR&amp;gt;, the driver's license &amp;lt;DLN&amp;gt;.&quot;, 'The SSN: &amp;lt;SSN&amp;gt; and e-mail: &amp;lt;EMAIL&amp;gt;.', &quot;Patient's VIN : &amp;lt;VIN&amp;gt;.&quot;, 'Date : &amp;lt;DATE&amp;gt;, PCP : &amp;lt;DOCTOR&amp;gt;.'], 'obfuscated': ['Record date : 2093-02-25, Name : Albertine Grates, 30 years-old, #100581.', &quot;IP: 003.003.003.003, the driver's license EL:I131599D.&quot;, 'The SSN: 060014689 and e-mail: Tory@yahoo.com.', &quot;Patient's VIN : 8JFSU78UTYV898505.&quot;, 'Date : 02/25/93, PCP : Elvera Maria.'], 'ner_chunk': ['2093-01-13', 'Hendrickson, ORA', '25', '#719435', '203.120.223.13', 'no:A334455B', '324598674', 'hale@gmail.com', '1HGBH41JXMN109286', '01/13/93', 'David Hale'], 'masked_fixed_length_chars': ['Record date : ****, Name : ****, **** years-old, ****.', &quot;IP: ****, the driver's license ****.&quot;, 'The SSN: **** and e-mail: ****.', &quot;Patient's VIN : ****.&quot;, 'Date : ****, PCP : ****.'], 'sentence': ['Record date : 2093-01-13, Name : Hendrickson, ORA, 25 years-old, #719435.', &quot;IP: 203.120.223.13, the driver's license no:A334455B.&quot;, 'The SSN: 324598674 and e-mail: hale@gmail.com.', &quot;Patient's VIN : 1HGBH41JXMN109286.&quot;, 'Date : 01/13/93, PCP : David Hale.'], 'masked_with_chars': ['Record date : [********], Name : [**************], ** years-old, [*****].', &quot;IP: [************], the driver's license [*********].&quot;, 'The SSN: [*******] and e-mail: [************].', &quot;Patient's VIN : [***************].&quot;, 'Date : [******], PCP : [********].']} Model Information Model Name: clinical_deidentification Type: pipeline Compatibility: Healthcare NLP 5.0.0+ License: Licensed Edition: Official Language: en Size: 1.7 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverter MedicalNerModel NerConverter ChunkMergeModel ContextualParserModel ContextualParserModel ContextualParserModel ContextualParserModel ContextualParserModel ContextualParserModel TextMatcherModel ContextualParserModel RegexMatcherModel ContextualParserModel ContextualParserModel ContextualParserModel ContextualParserModel ContextualParserModel ContextualParserModel ChunkMergeModel ChunkMergeModel DeIdentificationModel DeIdentificationModel DeIdentificationModel DeIdentificationModel Finisher</summary></entry><entry><title type="html">Named Entity Recognition Profiling (SDOH)</title><link href="/2023/07/11/ner_profiling_sdoh_en.html" rel="alternate" type="text/html" title="Named Entity Recognition Profiling (SDOH)" /><published>2023-07-11T00:00:00+00:00</published><updated>2023-07-11T00:00:00+00:00</updated><id>/2023/07/11/ner_profiling_sdoh_en</id><content type="html" xml:base="/2023/07/11/ner_profiling_sdoh_en.html">## Description

This pipeline can be used to explore all the available pretrained NER models at once for Social Determinants of Health. When you run this pipeline over your text, you will end up with the predictions coming out of each pretrained clinical NER model trained with `embeddings_clinical`.

Here are the NER models that this pretrained pipeline includes:

`ner_sdoh`, `ner_sdoh_social_environment_wip`, `ner_sdoh_mentions`, `ner_sdoh_demographics_wip`, `ner_sdoh_community_condition_wip`, `ner_sdoh_substance_usage_wip`, `ner_sdoh_access_to_healthcare_wip`, `ner_sdoh_health_behaviours_problems_wip`, `ner_sdoh_income_social_status_wip`

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_profiling_sdoh_en_4.4.4_3.4_1689085109838.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_profiling_sdoh_en_4.4.4_3.4_1689085109838.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

from sparknlp.pretrained import PretrainedPipeline

ner_profiling_pipeline = PretrainedPipeline(&quot;ner_profiling_sdoh&quot;, 'en', 'clinical/models')

result = ner_profiling_pipeline.annotate(&quot;&quot;&quot;Smith is 55 years old, living in New York, a divorced Mexcian American woman with financial problems. She speaks Spanish and Portuguese. She lives in an apartment. She has been struggling with diabetes for the past 10 years and has recently been experiencing frequent hospitalizations due to uncontrolled blood sugar levels. Smith works as a cleaning assistant and cannot access health insurance or paid sick leave. She has a son, a student at college. Pt with likely long-standing depression. She is aware she needs rehab. Pt reports having her catholic faith as a means of support as well.  She has a long history of etoh abuse, beginning in her teens. She reports she has been a daily drinker for 30 years, most recently drinking beer daily. She smokes a pack of cigarettes a day. She had DUI in April and was due to court this week.&quot;&quot;&quot;)

```
```scala

import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val ner_profiling_pipeline = PretrainedPipeline(&quot;ner_profiling_sdoh&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val result = ner_profiling_pipeline.annotate(&quot;&quot;&quot;Smith is 55 years old, living in New York, a divorced Mexcian American woman with financial problems. She speaks Spanish and Portuguese. She lives in an apartment. She has been struggling with diabetes for the past 10 years and has recently been experiencing frequent hospitalizations due to uncontrolled blood sugar levels. Smith works as a cleaning assistant and cannot access health insurance or paid sick leave. She has a son, a student at college. Pt with likely long-standing depression. She is aware she needs rehab. Pt reports having her catholic faith as a means of support as well.  She has a long history of etoh abuse, beginning in her teens. She reports she has been a daily drinker for 30 years, most recently drinking beer daily. She smokes a pack of cigarettes a day. She had DUI in April and was due to court this week.&quot;&quot;&quot;)

```
&lt;/div&gt;

## Results

```bash

 ******************** ner_sdoh_mentions Model Results ********************

[('Smith', 'B-sdoh_community'), ('divorced', 'B-sdoh_community'), ('lives', 'B-sdoh_environment'), ('apartment', 'B-sdoh_environment'), ('blood', 'B-behavior_drug'), ('works', 'B-sdoh_economics'), ('son', 'B-sdoh_community'), ('rehab', 'B-sdoh_environment'), ('etoh', 'B-behavior_alcohol'), ('drinker', 'B-behavior_alcohol'), ('beer', 'B-behavior_alcohol'), ('smokes', 'B-behavior_tobacco'), ('pack', 'B-behavior_tobacco'), ('cigarettes', 'B-behavior_tobacco')]


 ******************** ner_sdoh_community_condition Model Results ********************

[('apartment', 'B-Housing')]


 ******************** ner_sdoh_demographics Model Results ********************

[('55', 'B-Age'), ('years', 'I-Age'), ('old', 'I-Age'), ('New', 'B-Geographic_Entity'), ('York', 'I-Geographic_Entity'), ('American', 'B-Race_Ethnicity'), ('woman', 'B-Gender'), ('She', 'B-Gender'), ('Spanish', 'B-Language'), ('Portuguese', 'B-Language'), ('She', 'B-Gender'), ('She', 'B-Gender'), ('She', 'B-Gender'), ('son', 'B-Family_Member'), ('She', 'B-Gender'), ('she', 'B-Gender'), ('her', 'B-Gender'), ('catholic', 'B-Spiritual_Beliefs'), ('faith', 'I-Spiritual_Beliefs'), ('She', 'B-Gender'), ('her', 'B-Gender'), ('teens', 'B-Age'), ('She', 'B-Gender'), ('she', 'B-Gender'), ('She', 'B-Gender'), ('She', 'B-Gender')]


 ******************** ner_sdoh Model Results ********************

[('55', 'B-Age'), ('years', 'I-Age'), ('old', 'I-Age'), ('New', 'B-Geographic_Entity'), ('York', 'I-Geographic_Entity'), ('divorced', 'B-Marital_Status'), ('Mexcian', 'B-Race_Ethnicity'), ('American', 'I-Race_Ethnicity'), ('woman', 'B-Gender'), ('financial', 'B-Financial_Status'), ('problems', 'I-Financial_Status'), ('She', 'B-Gender'), ('Spanish', 'B-Language'), ('Portuguese', 'B-Language'), ('She', 'B-Gender'), ('apartment', 'B-Housing'), ('She', 'B-Gender'), ('diabetes', 'B-Other_Disease'), ('hospitalizations', 'B-Other_SDoH_Keywords'), ('cleaning', 'B-Employment'), ('assistant', 'I-Employment'), ('health', 'B-Insurance_Status'), ('insurance', 'I-Insurance_Status'), ('She', 'B-Gender'), ('son', 'B-Family_Member'), ('student', 'B-Education'), ('college', 'B-Education'), ('depression', 'B-Mental_Health'), ('She', 'B-Gender'), ('she', 'B-Gender'), ('rehab', 'B-Access_To_Care'), ('her', 'B-Gender'), ('catholic', 'B-Spiritual_Beliefs'), ('faith', 'I-Spiritual_Beliefs'), ('support', 'B-Social_Support'), ('She', 'B-Gender'), ('etoh', 'B-Alcohol'), ('abuse', 'I-Alcohol'), ('her', 'B-Gender'), ('teens', 'B-Age'), ('She', 'B-Gender'), ('she', 'B-Gender'), ('daily', 'B-Substance_Frequency'), ('drinker', 'B-Alcohol'), ('30', 'B-Substance_Duration'), ('years', 'I-Substance_Duration'), ('drinking', 'B-Alcohol'), ('beer', 'B-Alcohol'), ('daily', 'B-Substance_Frequency'), ('She', 'B-Gender'), ('smokes', 'B-Smoking'), ('a', 'B-Substance_Quantity'), ('pack', 'I-Substance_Quantity'), ('cigarettes', 'B-Smoking'), ('a', 'B-Substance_Frequency'), ('day', 'I-Substance_Frequency'), ('She', 'B-Gender'), ('DUI', 'B-Legal_Issues')]


 ******************** ner_social_environment Model Results ********************

[('support', 'B-Social_Support'), ('DUI', 'B-Legal_Issues')]


 ******************** ner_sdoh_access_to_healthcare Model Results ********************

[('health', 'B-Insurance_Status'), ('insurance', 'I-Insurance_Status'), ('rehab', 'B-Access_To_Care')]


 ******************** ner_sdoh_health_behaviours_problems Model Results ********************

[('diabetes', 'B-Other_Disease'), ('depression', 'B-Mental_Health')]


  ******************** ner_sdoh_substance_usage Model Results ********************

[('etoh', 'B-Alcohol'), ('abuse', 'I-Alcohol'), ('daily', 'B-Substance_Frequency'), ('drinker', 'B-Alcohol'), ('30', 'B-Substance_Duration'), ('years', 'I-Substance_Duration'), ('drinking', 'B-Alcohol'), ('beer', 'B-Alcohol'), ('daily', 'B-Substance_Frequency'), ('smokes', 'B-Smoking'), ('a', 'B-Substance_Quantity'), ('pack', 'I-Substance_Quantity'), ('cigarettes', 'B-Smoking'), ('a', 'B-Substance_Frequency'), ('day', 'I-Substance_Frequency')]


 ******************** ner_sdoh_income_social_status Model Results ********************

[('divorced', 'B-Marital_Status'), ('financial', 'B-Financial_Status'), ('problems', 'I-Financial_Status'), ('cleaning', 'B-Employment'), ('assistant', 'I-Employment'), ('student', 'B-Education'), ('college', 'B-Education')]


```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_profiling_sdoh|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 4.4.4+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|1.7 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="clinical" /><category term="profiling" /><category term="ner_profiling" /><category term="ner" /><category term="sdoh" /><category term="social_determinants_of_health" /><summary type="html">Description This pipeline can be used to explore all the available pretrained NER models at once for Social Determinants of Health. When you run this pipeline over your text, you will end up with the predictions coming out of each pretrained clinical NER model trained with embeddings_clinical. Here are the NER models that this pretrained pipeline includes: ner_sdoh, ner_sdoh_social_environment_wip, ner_sdoh_mentions, ner_sdoh_demographics_wip, ner_sdoh_community_condition_wip, ner_sdoh_substance_usage_wip, ner_sdoh_access_to_healthcare_wip, ner_sdoh_health_behaviours_problems_wip, ner_sdoh_income_social_status_wip Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU from sparknlp.pretrained import PretrainedPipeline ner_profiling_pipeline = PretrainedPipeline(&quot;ner_profiling_sdoh&quot;, 'en', 'clinical/models') result = ner_profiling_pipeline.annotate(&quot;&quot;&quot;Smith is 55 years old, living in New York, a divorced Mexcian American woman with financial problems. She speaks Spanish and Portuguese. She lives in an apartment. She has been struggling with diabetes for the past 10 years and has recently been experiencing frequent hospitalizations due to uncontrolled blood sugar levels. Smith works as a cleaning assistant and cannot access health insurance or paid sick leave. She has a son, a student at college. Pt with likely long-standing depression. She is aware she needs rehab. Pt reports having her catholic faith as a means of support as well. She has a long history of etoh abuse, beginning in her teens. She reports she has been a daily drinker for 30 years, most recently drinking beer daily. She smokes a pack of cigarettes a day. She had DUI in April and was due to court this week.&quot;&quot;&quot;) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val ner_profiling_pipeline = PretrainedPipeline(&quot;ner_profiling_sdoh&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val result = ner_profiling_pipeline.annotate(&quot;&quot;&quot;Smith is 55 years old, living in New York, a divorced Mexcian American woman with financial problems. She speaks Spanish and Portuguese. She lives in an apartment. She has been struggling with diabetes for the past 10 years and has recently been experiencing frequent hospitalizations due to uncontrolled blood sugar levels. Smith works as a cleaning assistant and cannot access health insurance or paid sick leave. She has a son, a student at college. Pt with likely long-standing depression. She is aware she needs rehab. Pt reports having her catholic faith as a means of support as well. She has a long history of etoh abuse, beginning in her teens. She reports she has been a daily drinker for 30 years, most recently drinking beer daily. She smokes a pack of cigarettes a day. She had DUI in April and was due to court this week.&quot;&quot;&quot;) Results ******************** ner_sdoh_mentions Model Results ******************** [('Smith', 'B-sdoh_community'), ('divorced', 'B-sdoh_community'), ('lives', 'B-sdoh_environment'), ('apartment', 'B-sdoh_environment'), ('blood', 'B-behavior_drug'), ('works', 'B-sdoh_economics'), ('son', 'B-sdoh_community'), ('rehab', 'B-sdoh_environment'), ('etoh', 'B-behavior_alcohol'), ('drinker', 'B-behavior_alcohol'), ('beer', 'B-behavior_alcohol'), ('smokes', 'B-behavior_tobacco'), ('pack', 'B-behavior_tobacco'), ('cigarettes', 'B-behavior_tobacco')] ******************** ner_sdoh_community_condition Model Results ******************** [('apartment', 'B-Housing')] ******************** ner_sdoh_demographics Model Results ******************** [('55', 'B-Age'), ('years', 'I-Age'), ('old', 'I-Age'), ('New', 'B-Geographic_Entity'), ('York', 'I-Geographic_Entity'), ('American', 'B-Race_Ethnicity'), ('woman', 'B-Gender'), ('She', 'B-Gender'), ('Spanish', 'B-Language'), ('Portuguese', 'B-Language'), ('She', 'B-Gender'), ('She', 'B-Gender'), ('She', 'B-Gender'), ('son', 'B-Family_Member'), ('She', 'B-Gender'), ('she', 'B-Gender'), ('her', 'B-Gender'), ('catholic', 'B-Spiritual_Beliefs'), ('faith', 'I-Spiritual_Beliefs'), ('She', 'B-Gender'), ('her', 'B-Gender'), ('teens', 'B-Age'), ('She', 'B-Gender'), ('she', 'B-Gender'), ('She', 'B-Gender'), ('She', 'B-Gender')] ******************** ner_sdoh Model Results ******************** [('55', 'B-Age'), ('years', 'I-Age'), ('old', 'I-Age'), ('New', 'B-Geographic_Entity'), ('York', 'I-Geographic_Entity'), ('divorced', 'B-Marital_Status'), ('Mexcian', 'B-Race_Ethnicity'), ('American', 'I-Race_Ethnicity'), ('woman', 'B-Gender'), ('financial', 'B-Financial_Status'), ('problems', 'I-Financial_Status'), ('She', 'B-Gender'), ('Spanish', 'B-Language'), ('Portuguese', 'B-Language'), ('She', 'B-Gender'), ('apartment', 'B-Housing'), ('She', 'B-Gender'), ('diabetes', 'B-Other_Disease'), ('hospitalizations', 'B-Other_SDoH_Keywords'), ('cleaning', 'B-Employment'), ('assistant', 'I-Employment'), ('health', 'B-Insurance_Status'), ('insurance', 'I-Insurance_Status'), ('She', 'B-Gender'), ('son', 'B-Family_Member'), ('student', 'B-Education'), ('college', 'B-Education'), ('depression', 'B-Mental_Health'), ('She', 'B-Gender'), ('she', 'B-Gender'), ('rehab', 'B-Access_To_Care'), ('her', 'B-Gender'), ('catholic', 'B-Spiritual_Beliefs'), ('faith', 'I-Spiritual_Beliefs'), ('support', 'B-Social_Support'), ('She', 'B-Gender'), ('etoh', 'B-Alcohol'), ('abuse', 'I-Alcohol'), ('her', 'B-Gender'), ('teens', 'B-Age'), ('She', 'B-Gender'), ('she', 'B-Gender'), ('daily', 'B-Substance_Frequency'), ('drinker', 'B-Alcohol'), ('30', 'B-Substance_Duration'), ('years', 'I-Substance_Duration'), ('drinking', 'B-Alcohol'), ('beer', 'B-Alcohol'), ('daily', 'B-Substance_Frequency'), ('She', 'B-Gender'), ('smokes', 'B-Smoking'), ('a', 'B-Substance_Quantity'), ('pack', 'I-Substance_Quantity'), ('cigarettes', 'B-Smoking'), ('a', 'B-Substance_Frequency'), ('day', 'I-Substance_Frequency'), ('She', 'B-Gender'), ('DUI', 'B-Legal_Issues')] ******************** ner_social_environment Model Results ******************** [('support', 'B-Social_Support'), ('DUI', 'B-Legal_Issues')] ******************** ner_sdoh_access_to_healthcare Model Results ******************** [('health', 'B-Insurance_Status'), ('insurance', 'I-Insurance_Status'), ('rehab', 'B-Access_To_Care')] ******************** ner_sdoh_health_behaviours_problems Model Results ******************** [('diabetes', 'B-Other_Disease'), ('depression', 'B-Mental_Health')] ******************** ner_sdoh_substance_usage Model Results ******************** [('etoh', 'B-Alcohol'), ('abuse', 'I-Alcohol'), ('daily', 'B-Substance_Frequency'), ('drinker', 'B-Alcohol'), ('30', 'B-Substance_Duration'), ('years', 'I-Substance_Duration'), ('drinking', 'B-Alcohol'), ('beer', 'B-Alcohol'), ('daily', 'B-Substance_Frequency'), ('smokes', 'B-Smoking'), ('a', 'B-Substance_Quantity'), ('pack', 'I-Substance_Quantity'), ('cigarettes', 'B-Smoking'), ('a', 'B-Substance_Frequency'), ('day', 'I-Substance_Frequency')] ******************** ner_sdoh_income_social_status Model Results ******************** [('divorced', 'B-Marital_Status'), ('financial', 'B-Financial_Status'), ('problems', 'I-Financial_Status'), ('cleaning', 'B-Employment'), ('assistant', 'I-Employment'), ('student', 'B-Education'), ('college', 'B-Education')] Model Information Model Name: ner_profiling_sdoh Type: pipeline Compatibility: Healthcare NLP 4.4.4+ License: Licensed Edition: Official Language: en Size: 1.7 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel</summary></entry><entry><title type="html">Patient Urgency Classifier (BioBERT)</title><link href="/2023/07/09/bert_sequence_classifier_patient_urgency_en.html" rel="alternate" type="text/html" title="Patient Urgency Classifier (BioBERT)" /><published>2023-07-09T00:00:00+00:00</published><updated>2023-07-09T00:00:00+00:00</updated><id>/2023/07/09/bert_sequence_classifier_patient_urgency_en</id><content type="html" xml:base="/2023/07/09/bert_sequence_classifier_patient_urgency_en.html">## Description

This Patient Urgency Text Classifier is for analyzing the emergency level of medical situations that require immediate assistance from the medical organizations.

The Text Classifier model has been trained on a collection of emergency calls that have been labeled with three different classes:

High: Requires immediate intervention, life-threatening or potentially life-threatening cases,

Medium: Requires intervention, urgent, not life-threatening cases.

Low: Non-urgent, needs treatment when time permits.

## Predicted Entities

`High`, `Medium`, `Low`

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/bert_sequence_classifier_patient_urgency_en_4.4.4_3.0_1688867233593.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/bert_sequence_classifier_patient_urgency_en_4.4.4_3.0_1688867233593.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python
document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer() \
    .setInputCols([&quot;document&quot;]) \
    .setOutputCol(&quot;token&quot;)

sequenceClassifier = MedicalBertForSequenceClassification.pretrained(&quot;bert_sequence_classifier_patient_urgency&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;document&quot;, &quot;token&quot;])\
    .setOutputCol(&quot;prediction&quot;)

clf_Pipeline = Pipeline(stages=[
    document_assembler,
    tokenizer,
    sequenceClassifier])

data = spark.createDataFrame([[&quot;&quot;&quot;I think my father is having a stroke. His face is drooping, he can’t move his right side and he’s slurring his speech. He is breathing, but it’s really ragged. And, he is not responding when I talk to him…he seems out of it.&quot;&quot;&quot;], 
 [&quot;&quot;&quot;My old neighbor has fallen and cannot get up. She is conscious, but she is in a lot of pain and cannot move.&quot;&quot;&quot;],
 [&quot;&quot;&quot;My wife has been in pain all morning. She had an operation a few days ago. This morning, she woke up in pain and is having a hard time moving around. The pain is around the surgery area. It is not severe, but it’s making her uncomfortable. She does not have fever, nausea or vomiting. There’s some slight feeling of being bloated.&quot;&quot;&quot;],
 ]).toDF(&quot;text&quot;)

result = clf_Pipeline.fit(data).transform(data)
```
```scala
val document_assembler =new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;document&quot;)
    .setOutputCol(&quot;token&quot;)

val sequenceClassifier = new MedicalBertForSequenceClassification.pretrained(&quot;bert_sequence_classifier_patient_urgency&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(Array(&quot;document&quot;, &quot;token&quot;))
    .setOutputCol(&quot;prediction&quot;)

val clf_Pipeline = new Pipeline().setStages(Array(document_assembler, tokenizer, sequenceClassifier))

val data = Seq(Array(&quot;I think my father is having a stroke. His face is drooping, he can’t move his right side and he’s slurring his speech. He is breathing, but it’s really ragged. And, he is not responding when I talk to him…he seems out of it.&quot;, &quot;My old neighbor has fallen and cannot get up. She is conscious, but she is in a lot of pain and cannot move.&quot;, &quot;My wife has been in pain all morning. She had an operation a few days ago. This morning, she woke up in pain and is having a hard time moving around. The pain is around the surgery area. It is not severe, but it’s making her uncomfortable. She does not have fever, nausea or vomiting. There’s some slight feeling of being bloated.&quot;)).toDS().toDF(&quot;text&quot;)

val result = clf_Pipeline.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
+----------------------------------------------------------------------------------------------------+--------+
|                                                                                                text|  result|
+----------------------------------------------------------------------------------------------------+--------+
|I think my father is having a stroke. His face is drooping, he can’t move his right side and he’s...|  [High]|
|My old neighbor has fallen and cannot get up. She is conscious, but she is in a lot of pain and c...|[Medium]|
|My wife has been in pain all morning. She had an operation a few days ago. This morning, she woke...|   [Low]|
+----------------------------------------------------------------------------------------------------+--------+
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|bert_sequence_classifier_patient_urgency|
|Compatibility:|Healthcare NLP 4.4.4+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[document, token]|
|Output Labels:|[prediction]|
|Language:|en|
|Size:|406.4 MB|
|Case sensitive:|true|
|Max sentence length:|512|

## References

In-house annotated health-related text.

## Benchmarking

```bash
       label  precision    recall  f1-score   support
        High       0.93      0.90      0.91       152
         Low       0.89      0.76      0.82        54
      Medium       0.65      0.78      0.71        63
    accuracy       -         -         0.84       269
   macro-avg       0.82      0.81      0.81       269
weighted-avg       0.85      0.84      0.85       269
```</content><author><name>John Snow Labs</name></author><category term="urgency" /><category term="emergency" /><category term="licensed" /><category term="en" /><category term="text_classification" /><category term="clinical" /><category term="tensorflow" /><summary type="html">Description This Patient Urgency Text Classifier is for analyzing the emergency level of medical situations that require immediate assistance from the medical organizations. The Text Classifier model has been trained on a collection of emergency calls that have been labeled with three different classes: High: Requires immediate intervention, life-threatening or potentially life-threatening cases, Medium: Requires intervention, urgent, not life-threatening cases. Low: Non-urgent, needs treatment when time permits. Predicted Entities High, Medium, Low Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer() \ .setInputCols([&quot;document&quot;]) \ .setOutputCol(&quot;token&quot;) sequenceClassifier = MedicalBertForSequenceClassification.pretrained(&quot;bert_sequence_classifier_patient_urgency&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;document&quot;, &quot;token&quot;])\ .setOutputCol(&quot;prediction&quot;) clf_Pipeline = Pipeline(stages=[ document_assembler, tokenizer, sequenceClassifier]) data = spark.createDataFrame([[&quot;&quot;&quot;I think my father is having a stroke. His face is drooping, he can’t move his right side and he’s slurring his speech. He is breathing, but it’s really ragged. And, he is not responding when I talk to him…he seems out of it.&quot;&quot;&quot;], [&quot;&quot;&quot;My old neighbor has fallen and cannot get up. She is conscious, but she is in a lot of pain and cannot move.&quot;&quot;&quot;], [&quot;&quot;&quot;My wife has been in pain all morning. She had an operation a few days ago. This morning, she woke up in pain and is having a hard time moving around. The pain is around the surgery area. It is not severe, but it’s making her uncomfortable. She does not have fever, nausea or vomiting. There’s some slight feeling of being bloated.&quot;&quot;&quot;], ]).toDF(&quot;text&quot;) result = clf_Pipeline.fit(data).transform(data) val document_assembler =new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;document&quot;) .setOutputCol(&quot;token&quot;) val sequenceClassifier = new MedicalBertForSequenceClassification.pretrained(&quot;bert_sequence_classifier_patient_urgency&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;document&quot;, &quot;token&quot;)) .setOutputCol(&quot;prediction&quot;) val clf_Pipeline = new Pipeline().setStages(Array(document_assembler, tokenizer, sequenceClassifier)) val data = Seq(Array(&quot;I think my father is having a stroke. His face is drooping, he can’t move his right side and he’s slurring his speech. He is breathing, but it’s really ragged. And, he is not responding when I talk to him…he seems out of it.&quot;, &quot;My old neighbor has fallen and cannot get up. She is conscious, but she is in a lot of pain and cannot move.&quot;, &quot;My wife has been in pain all morning. She had an operation a few days ago. This morning, she woke up in pain and is having a hard time moving around. The pain is around the surgery area. It is not severe, but it’s making her uncomfortable. She does not have fever, nausea or vomiting. There’s some slight feeling of being bloated.&quot;)).toDS().toDF(&quot;text&quot;) val result = clf_Pipeline.fit(data).transform(data) Results +----------------------------------------------------------------------------------------------------+--------+ | text| result| +----------------------------------------------------------------------------------------------------+--------+ |I think my father is having a stroke. His face is drooping, he can’t move his right side and he’s...| [High]| |My old neighbor has fallen and cannot get up. She is conscious, but she is in a lot of pain and c...|[Medium]| |My wife has been in pain all morning. She had an operation a few days ago. This morning, she woke...| [Low]| +----------------------------------------------------------------------------------------------------+--------+ Model Information Model Name: bert_sequence_classifier_patient_urgency Compatibility: Healthcare NLP 4.4.4+ License: Licensed Edition: Official Input Labels: [document, token] Output Labels: [prediction] Language: en Size: 406.4 MB Case sensitive: true Max sentence length: 512 References In-house annotated health-related text. Benchmarking label precision recall f1-score support High 0.93 0.90 0.91 152 Low 0.89 0.76 0.82 54 Medium 0.65 0.78 0.71 63 accuracy - - 0.84 269 macro-avg 0.82 0.81 0.81 269 weighted-avg 0.85 0.84 0.85 269</summary></entry><entry><title type="html">Medical Question Answering on Clinical Notes</title><link href="/2023/07/06/clinical_notes_qa_base_en.html" rel="alternate" type="text/html" title="Medical Question Answering on Clinical Notes" /><published>2023-07-06T00:00:00+00:00</published><updated>2023-07-06T00:00:00+00:00</updated><id>/2023/07/06/clinical_notes_qa_base_en</id><content type="html" xml:base="/2023/07/06/clinical_notes_qa_base_en.html">## Description

This model is capable of open-book question answering on Medical Notes.

## Predicted Entities



{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/clinical_notes_qa_base_en_4.4.4_3.0_1688657782760.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/clinical_notes_qa_base_en_4.4.4_3.0_1688657782760.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python
document_assembler = MultiDocumentAssembler()\
    .setInputCols(&quot;question&quot;, &quot;context&quot;)\
    .setOutputCols(&quot;document_question&quot;, &quot;document_context&quot;)

med_qa  = sparknlp_jsl.annotators.MedicalQuestionAnswering()\
    .pretrained(&quot;clinical_notes_qa_base&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;document_question&quot;, &quot;document_context&quot;])\
    .setCustomPrompt(&quot;Context: {context} \n Question: {question} \n Answer: &quot;)\
    .setOutputCol(&quot;answer&quot;)\

pipeline = Pipeline(stages=[document_assembler, med_qa])

note_text = &quot;Patient with a past medical history of hypertension for 15 years.\n(Medical Transcription Sample Report)\nHISTORY OF PRESENT ILLNESS:\nThe patient is a 74-year-old white woman who has a past medical history of hypertension for 15 years, history of CVA with no residual hemiparesis and uterine cancer with pulmonary metastases, who presented for evaluation of recent worsening of the hypertension. According to the patient, she had stable blood pressure for the past 12-15 years on 10 mg of lisinopril.&quot;

question = &quot;What is the primary issue reported by patient?&quot;

data = spark.createDataFrame([[question, note_text]]).toDF(&quot;question&quot;, &quot;context&quot;)

result = pipeline.fit(data).transform(data)
```
```scala
val document_assembler = new MultiDocumentAssembler()
    .setInputCols(&quot;question&quot;, &quot;context&quot;)
    .setOutputCols(&quot;document_question&quot;, &quot;document_context&quot;)

val med_qa = MedicalQuestionAnswering.pretrained(&quot;clinical_notes_qa_base&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(Array(&quot;document_question&quot;, &quot;document_context&quot;))
    .setOutputCol(&quot;answer&quot;)
    .setCustomPrompt(&quot;Context: {context} \n Question: {question} \n Answer: &quot;)

val pipeline = new Pipeline().setStages(Array(document_assembler, med_qa))

note_text = &quot;Patient with a past medical history of hypertension for 15 years.\n(Medical Transcription Sample Report)\nHISTORY OF PRESENT ILLNESS:\nThe patient is a 74-year-old white woman who has a past medical history of hypertension for 15 years, history of CVA with no residual hemiparesis and uterine cancer with pulmonary metastases, who presented for evaluation of recent worsening of the hypertension. According to the patient, she had stable blood pressure for the past 12-15 years on 10 mg of lisinopril.&quot;

question = &quot;What is the primary issue reported by patient?&quot;

val data = Seq( 
    (question, note_text))
    .toDS.toDF(&quot;question&quot;, &quot;context&quot;)

val result = pipeline.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
+-------------------------------------------------------------+
|result                                                       |
+-------------------------------------------------------------+
|[The primary issue reported by the patient is hypertension.] |
+-------------------------------------------------------------+

```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|clinical_notes_qa_base|
|Compatibility:|Healthcare NLP 4.4.4+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|920.1 MB|
|Case sensitive:|true|

## References

Trained on in-house curated dataset on clinical notes.

## Benchmarking

```bash
Rouge score: 59.9
```</content><author><name>John Snow Labs</name></author><category term="en" /><category term="licensed" /><category term="clinical" /><category term="question_answering" /><category term="tensorflow" /><summary type="html">Description This model is capable of open-book question answering on Medical Notes. Predicted Entities Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = MultiDocumentAssembler()\ .setInputCols(&quot;question&quot;, &quot;context&quot;)\ .setOutputCols(&quot;document_question&quot;, &quot;document_context&quot;) med_qa = sparknlp_jsl.annotators.MedicalQuestionAnswering()\ .pretrained(&quot;clinical_notes_qa_base&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;document_question&quot;, &quot;document_context&quot;])\ .setCustomPrompt(&quot;Context: {context} \n Question: {question} \n Answer: &quot;)\ .setOutputCol(&quot;answer&quot;)\ pipeline = Pipeline(stages=[document_assembler, med_qa]) note_text = &quot;Patient with a past medical history of hypertension for 15 years.\n(Medical Transcription Sample Report)\nHISTORY OF PRESENT ILLNESS:\nThe patient is a 74-year-old white woman who has a past medical history of hypertension for 15 years, history of CVA with no residual hemiparesis and uterine cancer with pulmonary metastases, who presented for evaluation of recent worsening of the hypertension. According to the patient, she had stable blood pressure for the past 12-15 years on 10 mg of lisinopril.&quot; question = &quot;What is the primary issue reported by patient?&quot; data = spark.createDataFrame([[question, note_text]]).toDF(&quot;question&quot;, &quot;context&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new MultiDocumentAssembler() .setInputCols(&quot;question&quot;, &quot;context&quot;) .setOutputCols(&quot;document_question&quot;, &quot;document_context&quot;) val med_qa = MedicalQuestionAnswering.pretrained(&quot;clinical_notes_qa_base&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;document_question&quot;, &quot;document_context&quot;)) .setOutputCol(&quot;answer&quot;) .setCustomPrompt(&quot;Context: {context} \n Question: {question} \n Answer: &quot;) val pipeline = new Pipeline().setStages(Array(document_assembler, med_qa)) note_text = &quot;Patient with a past medical history of hypertension for 15 years.\n(Medical Transcription Sample Report)\nHISTORY OF PRESENT ILLNESS:\nThe patient is a 74-year-old white woman who has a past medical history of hypertension for 15 years, history of CVA with no residual hemiparesis and uterine cancer with pulmonary metastases, who presented for evaluation of recent worsening of the hypertension. According to the patient, she had stable blood pressure for the past 12-15 years on 10 mg of lisinopril.&quot; question = &quot;What is the primary issue reported by patient?&quot; val data = Seq( (question, note_text)) .toDS.toDF(&quot;question&quot;, &quot;context&quot;) val result = pipeline.fit(data).transform(data) Results +-------------------------------------------------------------+ |result | +-------------------------------------------------------------+ |[The primary issue reported by the patient is hypertension.] | +-------------------------------------------------------------+ Model Information Model Name: clinical_notes_qa_base Compatibility: Healthcare NLP 4.4.4+ License: Licensed Edition: Official Language: en Size: 920.1 MB Case sensitive: true References Trained on in-house curated dataset on clinical notes. Benchmarking Rouge score: 59.9</summary></entry><entry><title type="html">Medical Question Answering on Clinical Notes - large</title><link href="/2023/07/06/clinical_notes_qa_large_en.html" rel="alternate" type="text/html" title="Medical Question Answering on Clinical Notes - large" /><published>2023-07-06T00:00:00+00:00</published><updated>2023-07-06T00:00:00+00:00</updated><id>/2023/07/06/clinical_notes_qa_large_en</id><content type="html" xml:base="/2023/07/06/clinical_notes_qa_large_en.html">## Description

This model is capable of open-book question answering on Medical Notes.

## Predicted Entities



{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/clinical_notes_qa_large_en_4.4.4_3.0_1688660718630.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/clinical_notes_qa_large_en_4.4.4_3.0_1688660718630.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python
document_assembler = MultiDocumentAssembler()\
    .setInputCols(&quot;question&quot;, &quot;context&quot;)\
    .setOutputCols(&quot;document_question&quot;, &quot;document_context&quot;)

med_qa  = sparknlp_jsl.annotators.MedicalQuestionAnswering()\
    .pretrained(&quot;clinical_notes_qa_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;document_question&quot;, &quot;document_context&quot;])\
    .setCustomPrompt(&quot;Context: {context} \n Question: {question} \n Answer: &quot;)\
    .setOutputCol(&quot;answer&quot;)\

pipeline = Pipeline(stages=[document_assembler, med_qa])

note_text = &quot;Patient with a past medical history of hypertension for 15 years.\n(Medical Transcription Sample Report)\nHISTORY OF PRESENT ILLNESS:\nThe patient is a 74-year-old white woman who has a past medical history of hypertension for 15 years, history of CVA with no residual hemiparesis and uterine cancer with pulmonary metastases, who presented for evaluation of recent worsening of the hypertension. According to the patient, she had stable blood pressure for the past 12-15 years on 10 mg of lisinopril.&quot;

question = &quot;What is the primary issue reported by patient?&quot;

data = spark.createDataFrame([[question, note_text]]).toDF(&quot;question&quot;, &quot;context&quot;)

result = pipeline.fit(data).transform(data)
```
```scala
val document_assembler = new MultiDocumentAssembler()
    .setInputCols(&quot;question&quot;, &quot;context&quot;)
    .setOutputCols(&quot;document_question&quot;, &quot;document_context&quot;)
val med_qa = MedicalQuestionAnswering.pretrained(&quot;clinical_notes_qa_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(Array(&quot;document_question&quot;, &quot;document_context&quot;))
    .setOutputCol(&quot;answer&quot;)
    .setCustomPrompt(&quot;Context: {context} \n Question: {question} \n Answer: &quot;)
val pipeline = new Pipeline().setStages(Array(document_assembler, med_qa))
note_text = &quot;Patient with a past medical history of hypertension for 15 years.\n(Medical Transcription Sample Report)\nHISTORY OF PRESENT ILLNESS:\nThe patient is a 74-year-old white woman who has a past medical history of hypertension for 15 years, history of CVA with no residual hemiparesis and uterine cancer with pulmonary metastases, who presented for evaluation of recent worsening of the hypertension. According to the patient, she had stable blood pressure for the past 12-15 years on 10 mg of lisinopril.&quot;
question = &quot;What is the primary issue reported by patient?&quot;
val data = Seq( 
    (question, note_text))
    .toDS.toDF(&quot;question&quot;, &quot;context&quot;)
val result = pipeline.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
+-------------------------------------------------------------+
|result                                                       |
+-------------------------------------------------------------+
|[The primary issue reported by the patient is hypertension.] |
+-------------------------------------------------------------+
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|clinical_notes_qa_large|
|Compatibility:|Healthcare NLP 4.4.4+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|2.9 GB|
|Case sensitive:|true|

## Sample text from the training dataset

Trained on in-house curated dataset on clinical notes.

## Benchmarking

```bash
Rouge Score 61.1
```</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="clinical" /><category term="question_answering" /><category term="tensorflow" /><summary type="html">Description This model is capable of open-book question answering on Medical Notes. Predicted Entities Live Demo Open in Colab Download Copy S3 URI How to use PythonScalaNLU document_assembler = MultiDocumentAssembler()\ .setInputCols(&quot;question&quot;, &quot;context&quot;)\ .setOutputCols(&quot;document_question&quot;, &quot;document_context&quot;) med_qa = sparknlp_jsl.annotators.MedicalQuestionAnswering()\ .pretrained(&quot;clinical_notes_qa_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;document_question&quot;, &quot;document_context&quot;])\ .setCustomPrompt(&quot;Context: {context} \n Question: {question} \n Answer: &quot;)\ .setOutputCol(&quot;answer&quot;)\ pipeline = Pipeline(stages=[document_assembler, med_qa]) note_text = &quot;Patient with a past medical history of hypertension for 15 years.\n(Medical Transcription Sample Report)\nHISTORY OF PRESENT ILLNESS:\nThe patient is a 74-year-old white woman who has a past medical history of hypertension for 15 years, history of CVA with no residual hemiparesis and uterine cancer with pulmonary metastases, who presented for evaluation of recent worsening of the hypertension. According to the patient, she had stable blood pressure for the past 12-15 years on 10 mg of lisinopril.&quot; question = &quot;What is the primary issue reported by patient?&quot; data = spark.createDataFrame([[question, note_text]]).toDF(&quot;question&quot;, &quot;context&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new MultiDocumentAssembler() .setInputCols(&quot;question&quot;, &quot;context&quot;) .setOutputCols(&quot;document_question&quot;, &quot;document_context&quot;) val med_qa = MedicalQuestionAnswering.pretrained(&quot;clinical_notes_qa_large&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;document_question&quot;, &quot;document_context&quot;)) .setOutputCol(&quot;answer&quot;) .setCustomPrompt(&quot;Context: {context} \n Question: {question} \n Answer: &quot;) val pipeline = new Pipeline().setStages(Array(document_assembler, med_qa)) note_text = &quot;Patient with a past medical history of hypertension for 15 years.\n(Medical Transcription Sample Report)\nHISTORY OF PRESENT ILLNESS:\nThe patient is a 74-year-old white woman who has a past medical history of hypertension for 15 years, history of CVA with no residual hemiparesis and uterine cancer with pulmonary metastases, who presented for evaluation of recent worsening of the hypertension. According to the patient, she had stable blood pressure for the past 12-15 years on 10 mg of lisinopril.&quot; question = &quot;What is the primary issue reported by patient?&quot; val data = Seq( (question, note_text)) .toDS.toDF(&quot;question&quot;, &quot;context&quot;) val result = pipeline.fit(data).transform(data) Results +-------------------------------------------------------------+ |result | +-------------------------------------------------------------+ |[The primary issue reported by the patient is hypertension.] | +-------------------------------------------------------------+ Model Information Model Name: clinical_notes_qa_large Compatibility: Healthcare NLP 4.4.4+ License: Licensed Edition: Official Language: en Size: 2.9 GB Case sensitive: true Sample text from the training dataset Trained on in-house curated dataset on clinical notes. Benchmarking Rouge Score 61.1</summary></entry></feed>